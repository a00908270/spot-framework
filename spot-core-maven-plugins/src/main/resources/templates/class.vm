/**
 * This file is auto-generated. All changes will be overwritten.
 */
package $packagePath;

#if( ! $superclassName)
	import java.io.Serializable;
#end
#foreach($i in $imports)
	import $i;
#end
import at.spot.core.infrastructure.annotation.ItemType;
import at.spot.itemtype.core.UniqueIdItem;
import edu.umd.cs.findbugs.annotations.SuppressFBWarnings;

#if ( $!description )
	/**
	 * $description
	 */
#end
@SuppressWarnings("unchecked")
@ItemType(typeCode = "$typeCode")
@SuppressFBWarnings({"MF_CLASS_MASKS_FIELD", "EI_EXPOSE_REP", "EI_EXPOSE_REP2"})
public #if ($isAbstract)abstract #end class $name #if($superClass.name)extends $superClass.name #else implements Serializable #end {
	#if( ! $superclassName)	/** Default serialVersionUID value. */
 		private static final long serialVersionUID = 1L;
 	#end

	#foreach ($field in $fields)
		#if ( $field.description )
			/**
			 * $field.description
			 */
		#end
		@Property
		protected $field.type.simpleName $field.name;
	#end

##    @Property(isReference = true)
##   @Relation(type = RelationType.ManyToMany, mappedTo = "members", referencedType = PrincipalGroup.class)
##    protected List<PrincipalGroup> groups;

	#foreach ($method in $methods)
		#if ( $!method.description )
			/**
			 * $method.description
			 */
		#end
		@Property
		public $method.type.simpleName $method.name (
			#foreach ( $arg in $method.arguments )
				$arg.type.simpleName $arg.name
				#if( $foreach.hasNext ), #end
			#end
		) {
			$method.codeBlock;
		}
	#end
	

##    @GetProperty
##    public List<PrincipalGroup> getGroups() {
##        return ((List<PrincipalGroup>) handler.getProperty(this, "groups"));
##    }

##    @SetProperty
##    public void setGroups(List<PrincipalGroup> groups) {
##        handler.setProperty(this, "groups", groups);
##    }

}
