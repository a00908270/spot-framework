#%RAML 0.8
title: Rating Review Service
version: v1
mediaType: application/json
baseUri: https://api.yaas.io/hybris/loy-advocacy/v1
schemas:
  - ratingReviews: |
      {
        "$schema": "http://json-schema.org/draft-04/schema (http://json-schema.org/draft-04/schema)#",
        "title":"Product Rating & Reviews List",
        "type":"array",
        "items":
        {
          "$ref":"ratingReview"
        }
      } 
  - ratingReview: |
      {
        "$schema": "http://json-schema.org/draft-04/schema#",
        "title":"RatingReview",
        "type":"object",
        "properties":
        {
          "ratingId":
          {
            "type":"string",
            "maxLength": 32
          },
          "sku":
          {
            "type":"string",
            "maxLength": 32
          }, 
          "rating":
          {
            "type":"integer",
            "minimum": 1,
            "maximum": 5
          },
          "customerId":
          {
            "type":"string"
          },
          "reviewerName":
          {
            "type":"string",
            "maxLength": 32
          },
          "reviewTitle":
          { 
            "type":"string",
            "maxLength": 50
          },
          "reviewComment":
          {
            "type":"string",
            "maxLength": 500
          },
          "customAttributes":
          {
            "type":"array",
            "items":
            {
              "$ref":"customAttr"
            }
          },
          "reviewStatus":
          {
             "enum": [ "PUBLISHED", "NEW","BLOCKED" , "ARCHIVED"]
          }
        },
        "required":["sku", "rating", "customerId", "reviewerName"]
      }
  - ratingCount: |
      {
        "$schema": "http://json-schema.org/draft-04/schema#",
        "title":"Ratings",
        "type":"object",
        "properties":
        {
          "rating1":
          {
            "type":"integer"
          },
          "rating2":
          {
            "type":"integer"
          },
          "rating3":
          {
            "type":"integer"
          },
          "rating4":
          {
            "type":"integer"
          },
          "rating5":
          {
            "type":"integer"
          }
         }
      }
  - sendReferral: |
      {
        "$schema": "http://json-schema.org/draft-04/schema#",
        "title":"Send Referral",
        "type" : "object",
        "properties":
        {
          "customerId":
          {
            "type" : "string"
          },
          "programId":
          {
            "type" : "string"
          },
          "programName":
          {
            "type" : "string"
          },
          "referralCode":
          {
            "type" : "string"
          },
          "emails":
          {
             "type": "array",
             "minItems": 0,
             "items": {
               "type": "string"
             }
          }
        }
      }
  - sendReferral-example: |
      {
          "customerId": "C1496174752",
          "programId": "088baaddf3c048999541eda53f68bcc7",
          "referralCode": "ABCD",
          "emails": [
              "john.doe@hybristest.com",
              "jane.doe@hybristest.com"
          ]
      }
  - send: |
      {
          "$schema": "http://json-schema.org/draft-04/schema",
          "title": "Mail",
          "description": "A descriptor for an email to be sent, having typical address fields. Also specifies a Velocity template to be used for rendering of the email's contents, as well as attribute values to be passed to the template.",
          "type": "object",
          "properties": {
              "toAddress": {
                  "description": "The receiver's email address.",
                  "type": "string",
                  "format": "email"
              },
              "toName": {
                  "description": "The receiver's name.",
                  "type": "string"
              },
              "fromAddress": {
                  "description": "The sender's email address.",
                  "type": "string",
                  "format": "email"
              },
              "templateCode": {
                  "description": "The code of the template.",
                  "type": "string",
                  "minLength": 1
              },
              "templateOwner": {
                  "description": "The name of the application that owns the template.",
                  "type": "string",
                  "minLength": 1
              },
              "locale": {
                  "description": "Locale to use for mail rendering.",
                  "type": "string"
              },
              "attributes": {
                  "description": "Attribute values passed as context variables to the Velocity template.",
                  "type": "array",
                  "items": {
                      "$schema": "http://json-schema.org/draft-04/schema#",
                      "title": "Template Attribute",
                      "description": "Template attribute used as context variable for Velocity rendering of the related template.",
                      "type": "object",
                      "properties": {
                          "key": {
                              "description": "The unique key of the template attribute.",
                              "type": "string",
                              "minLength": "1"
                          },
                          "value": {
                              "description": "The value for the template attribute.",
                              "type": "string",
                              "minLength": "1"
                          }
                      },
                      "required": [
                          "key",
                          "value"
                      ]
                  }
              }
          },
          "required": [
              "toAddress",
              "fromAddress",
              "templateCode",
              "templateOwner"
          ]
      }
  - tierItem: |
      {
        "$schema": "http://json-schema.org/draft-04/schema#",
        "title": "Tier Item for a Loyalty Membership Object",
        "type": "object",
        "properties": {
          "tierId": {
            "type": "string",
            "maxLength": 32
          },
          "tierUpdateDate": {
            "type": "number",
            "default": 0.00
          },
          "tierActivity": {
            "enum": ["Upgrade","Downgrade"]
          }
        }
      }
  - members: |
      {

        "$schema": "http://json-schema.org/draft-04/schema (http://json-schema.org/draft-04/schema)#",

        "title":"Member  List",

        "type":"array",

        "items":

        {

          "$ref":"member"

        }

      }
  - member: |
      {
        "$schema": "http://json-schema.org/draft-04/schema#",
        "title":"member",
        "type":"object",
        "properties":
        {
          "memberId":
          {
            "type":"string",
            "maxLength": 32
          }, 
          "memberNumber":
          {
            "type":"string",
            "maxLength": 50
          },     
          "programId":
          {
            "type":"string",
            "maxLength": 32
          },
          "customerId":
          {
            "type":"string"
          },
          "customerFirstName":
          {
            "type":"string",
            "maxlength":"64"
          },
          "customerLastName":
          {
            "type":"string",
            "maxlength":"64"
          },
          "customerEmail":
          {
            "type":"string",
            "maxlength":"255"
          },
          "customerPhone":
          {
            "type":"string",
            "maxlength":"20"
          },
          "dateValidFrom":
          {
            "type":"string",
            "format":"date-time"
          }, 
          "dateValidTo":
          {
            "type":"string",
            "format":"date-time"
          },    
          "tierId":
          {
            "type":"string",
            "maxLength": 32
          },    
          "tierHistory":
          {
            "type": "array",
            "minItems": 1,
            "uniqueItems": true,
            "items": {
               "$ref": "tierItem"
            }
          },
          "totalEarnedPoints":
          {
            "type":"number",
            "default": "0"
          },
          "totalBalancePoints":
          {
            "type":"number",
            "default": "0"
          },
          "totalQualifyingPoints":
          {
            "type":"number",
            "default": "0"
          },
          "totalExpiredPoints":
          {
            "type":"number",
            "default": "0"
          },
          "createdBy":
          {
            "type":"string",
            "maxLength": 32
          },
          "updatedBy":
          {
            "type":"string",
            "maxLength": 32
          },
          "referralCode":
          {
            "type":"string",
            "maxLength": 8
          },
          "memberStatus":
          {
             "enum": [ "ACTIVE", "INACTIVE", "CANCELLED", "REJECTED", "EXPIRED"],
             "default": "ACTIVE"
          },
          "customAttributes":
          {
            "type":"array",
            "items":
            {
              "$ref":"customAttr"
            }
          },
           "preferredLanguage":
          {
            "type":"string",
            "maxLength":"10"
          }
        },
        "required":["memberId","memberNumber","programId","customerId","dateValidFrom","dateValidTo","tierHistory", "createdBy","memberStatus"]
      }
  - customAttrs: |
      {
        "$schema": "http://json-schema.org/draft-04/schema#",
        "title":"Custom Attributes List",
        "type":"array",
        "items":
        {
          "$ref":"customAttr"
        }
      }

  - customAttr: |
      {
        "$schema": "http://json-schema.org/draft-04/schema#",
        "title":"Custom Attributes",
        "type" : "object",
        "properties":
        {
          "cname":
          {
            "type" : "string",
            "maxlength":"255"
          },
          "cvalue":
          {
            "type":"string",
            "maxlength":"255"
          }
        }
      }
  - configuration: |
      {
        "$schema": "http://json-schema.org/draft-04/schema#",
        "title":"Configuration Attributes",
        "type" : "object",
        "properties":
        {
          "name":
          {
            "type" : "string"
          },
          "value":
          {
            "type":"string"
          }
        }
      }
  - conversion: |
      {
        "$schema": "http://json-schema.org/draft-04/schema#",
        "title":"Configuration Attributes",
        "type" : "object",
        "properties":
        {
          "conversionType":
          {
            "enum": [ "EARNING", "REDEEMING","CASH"],
             "default": "EARNING"
          },
          "currencyValue":
          {
            "type" : "number"
          },	
          "currencySymbol":
          {
            "type" : "string",
            "maxLength": 3
          },
          "pointValue":
          {
            "type":"number"
          }
        }
      }
  - laasConfiguration: |
      {
        "$schema": "http://json-schema.org/draft-04/schema#",
        "title":"Loyalty Configuration object template",
        "type":"object",
        "properties":
        {
          "loyaltyProgramId":
          {
            "type":"string",
            "maxLength": 32
          },
          "configurationId":
          {
            "type":"string",
            "maxLength": 32
          },
      	"configData":
           {
              "type":"array",
              "items":
               {
                  "$ref":"configuration"
               }
           },
           "conversionRatio":
           {
             "type":"array",
              "items":
               {
                 "$ref":"conversion"
               }
            },
            "urlMapping":
            {
              "type":"array",
              "items":
              {
                "$ref":"configuration"
              }
            },
            "createdBy":
              {
               "type":"string",
               "maxLength": 32
              },
            "updatedBy":
              {
               "type":"string",
               "maxLength": 32
              }
        }
      }

  - ratingReviewMashup: |
      {
        "$schema": "http://json-schema.org/draft-04/schema#",
        "title":"RatingReviewMashup",
        "type":"object",
        "properties":
        {
          "ratingId":
          {
            "type":"string",
            "maxLength": 32
          },
          "sku":
          {
            "type":"string",
            "maxLength": 32
          }, 
          "rating":
          {
            "type":"integer",
            "minimum": 1,
            "maximum": 5
          },
          "reviewerName":
          {
            "type":"string",
            "maxLength": 32
          },
          "reviewTitle":
          { 
            "type":"string",
            "maxLength": 50
          },
          "reviewComment":
          {
            "type":"string",
            "maxLength": 500
          },    
          "customerId":
          {
            "type":"string"
          },
          "customAttributes":
          {
            "type":"array",
            "items":
            {
              "$ref":"customAttr"
            }
          },    
          "reviewStatus":
          {
             "enum": [ "PUBLISHED", "NEW","BLOCKED" , "ARCHIVED"]
          }
        },
        "required":["sku", "rating", "customerId", "reviewerName"]
      }
  - ratingReviewMashup-example: |
      {
        "ratingId":"12345678912345678912345678912345",
        "sku":"Laptop",
        "rating":4,
        "reviewerName":"SYSTEM",
        "customerId":"C111111876",
        "reviewTitle":"Monitor",
        "reviewComment":"Clarity is good",
        "reviewStatus":"PUBLISHED"
      }

  - orderAttributes: |
      {
        "$schema": "http://json-schema.org/draft-04/schema#",
        "title":"orderAttributes",
        "type":"object",
        "properties":
        {
        	"total": 
        	{
            "type":"number"
          },
        	"subTotal": 
        	{
            "type":"number"
          },
          "totalItems": 
        	{
            "type":"integer"
          },
          "shippingAmount":
          {
            "type":"number"
          },
          "discountAmount":
          {
            "type":"number"
          },
          "shippingCountry":
          {
            "type":"string"
          },
          "shippingState":
          {
            "type":"string"
          },
      	"transactionCurrency":
          {
            "type":"string"
          },    
          "customAttributes":
          {
            "type":"array",
            "items":
            {
            	"type":"object",
            	"properties":
            	{
            	  "key":
            	  {
            	    "type":"string"
            	  },
            	  "value":
            	  {
            	    "type":"string"
            	  }
            	}
            }
          }
        }
      }
  - productCategory: |
      {
          "$schema": "http://json-schema.org/draft-04/schema#",
          "type": "object",
          "properties": {
          	"categoryId": {
                  "type": "string"
              },
              "name": {
                  "type": "string"
              },
              "description": {
                  "type": "string"
              }
          }
      }
  - productAttributes: |
      {
        "$schema": "http://json-schema.org/draft-04/schema#",
        "title":"productAttributes",
        "type":"object",
        "properties":
        {
        	"productId": 
        	{
            "type":"string"
          },
        	"productName": 
        	{
            "type":"string"
          },
          "price": 
        	{
            "type":"number"
          },
          "quantity":
          {
            "type":"integer"
          },
          "imageURL":
          {
            "type":"string"
          },
          "productCategory":
          {
            "type":"array",
            "items":
            {
              "type":"object",
              "$ref":"productCategory"
            }
          },
          "customAttributes":
          {
            "type":"array",
            "items":
            {
            	"type":"object",
            	"properties":
            	{
            	  "key":
            	  {
            	    "type":"string"
            	  },
            	  "value":
            	  {
            	    "type":"string"
            	  }
            	}
            }
          }
        }
      }
  - activity: |
      {
        "$schema": "http://json-schema.org/draft-04/schema#",
        "title":"Activity",
        "type":"object",
        "properties":
        {
          "customerId":
          {
            "type":"string"
          },
       	"activityType":
          {
             "enum": [ "Registration", "Accrual", "Order","Redeem", "Rating", "Review", "Referral","Award","Deduct","Expiration"]
          },
          "transactionAmount":
          {
            "type":"number",
            "default":0.0,
            "minimum":0.0
          },
          "transactionCurrency":
          {
            "type":"string",
            "maxLength":3
          },
          "pointsRedeemed":
          {
            "type":"number",
            "default":0.0,
            "minimum":0.0
          },
          "description":
          {
            "type":"string",
            "maxLength": 150
          },
          "refId":
          {
            "type":"string",
            "maxLength": 32
          },
           "points":
          {
            "type":"number",
            "default":0.0,
            "minimum":0.0
          },
          "rulesPayload":
          {
           "type" : "object",
           "properties":
            {
             "productAttributes":
             {
            	"type": "array",
              "items": 
              {
                 "$ref": "productAttributes"
              }
             },
            "orderAttributes":
             {
             	  "$ref":"orderAttributes"
      	   },
      	   "customAttributes":
      	    {
      	      "type":"array",
      	      "items":
      	      {
      	      	"type":"object",
      	      	"properties":
      	      	{
      	      	  "key":
      	      	  {
      	      	    "type":"string"
      	      	  },
      	      	  "value":
      	      	  {
      	      	    "type":"string"
      	      	  }
      	      	}
      	      }
      	    }
      	  }
      	}            
       },
        "required":["customerId","activityType","transactionAmount"]
      }
  - activitylist: |
      {

        "$schema": "http://json-schema.org/draft-04/schema (http://json-schema.org/draft-04/schema)#",

        "title":"Member Activity List",

        "type":"object",
        "properties":
        	{
        	"activities":
             {
            	"type": "array",
              "items": 
              {
                 "$ref": "activity"
              }
        	}
        },
        "required":["activities"]
      }
  - memberActivity: |
      {
        "$schema": "http://json-schema.org/draft-04/schema#",
        "title":"memberActivity",
        "type":"object",
        "properties":
        {
          "memberActivityId":
          {
            "type":"string",
            "maxLength": 32
          },
          "memberId":
          {
            "type":"string",
            "maxLength": 32
          },
          "refId":
          {
            "type":"string",
            "maxLength": 32
          },
          "activityType":
          {
             "enum": [ "Registration", "Accrual", "Order","Redeem", "Rating", "Review", "Referral","Award"]
          },
          "transactionAmount":
          {
            "type":"number",
            "default":0.0,
            "minimum":0.0
          },
          "transactionCurrency":
          {
            "type":"string",
            "maxLength":3
          },
          "transactionPoints":
          {
             "type":"number",
             "default":0
          },
          "qualifyingPoints":
          {
             "type":"number",
             "default":0
          },
          "rulesApplied":
          {
             "type": "array",
             "minItems": 0,
             "uniqueItems": true,
             "items": {
               "type": "string"
          }
          },
          "programId":
          {
            "type":"string",
            "maxLength": 32
          },    
          "tierId":
          {
            "type":"string",
            "maxLength": 32
          },    
          "year":
          {
            "type":"string",
            "maxLength": 4
          },    
          "quarter":
          {
             "enum": [ "Q1","Q2","Q3","Q4"]
          },    
          "month":
          {
             "enum": [ "JAN","FEB","MAR","APR","MAY","JUN","JUL","AUG","SEP","OCT","NOV","DEC"]
          },    
          "week":
          {
            "type":"integer",
            "minimum": 1,
            "maximum": 52
          },    
          "discountId":
          {
            "type":"string",
            "maxLength": 50
          },    
          "createdBy":
          {
            "type":"string",
            "maxLength": 32
          },
          "updatedBy":
          {
            "type":"string",
            "maxLength": 32
          },
          "activityStatus":
          {
             "enum": ["New", "Active", "Cancelled", "Rejected","Expired","Inactive","Processed"]
          },
          "customAttributes":
          {
            "type":"array",
            "items":
            {
              "$ref":"customAttr"
            }
          },
          "description":
          {
            "type":"string",
            "maxLength": 250
          }
        },
        "required":["memberActivityId","memberId","refId","activityType","createdBy", "activityStatus"]
      }

  - error: |
      {
        "$schema":"http://json-schema.org/draft-04/schema#",
        "title":"error",
        "description":"Schema for API specified errors.",
        "type":"object",
        "properties":
        {
          "status":
          {
            "type":"integer",
            "description":"original HTTP error code, should be consistent with the response HTTP code",
            "minimum":100,
            "maximum":599
          },
          "type":
          {
            "type":"string",
            "description":"classification of the error type, lower case with underscore eg validation_failure",
            "pattern":"[a-z]+[a-z_]*[a-z]+"
          },
          "message":
          {
            "type":"string",
            "description":"descriptive error message for debugging"
          },
          "moreInfo":
          {
            "type":"string",
            "format":"uri",
            "description":"link to documentation to investigate further and finding support"
          },
          "details":
          {
            "type":"array",
            "description":"list of problems causing this error",
            "items":
            {
              "$schema":"http://json-schema.org/draft-04/schema#",
              "title":"errorDetail",
              "description":"schema for specific error cause",
              "type":"object",
              "properties":
              {
                "field":
                {
                  "type":"string",
                  "description":"a bean notation expression specifying the element in request data causing the error, eg product.variants[3].name, this can be empty if violation was not field specific"
                },
                "type":
                {
                  "type":"string",
                  "description":"classification of the error detail type, lower case with underscore eg missing_value, this value must be always interpreted in context of the general error type.",
                  "pattern":"[a-z]+[a-z_]*[a-z]+"
                },
                "message":
                {
                  "type":"string",
                  "description":"descriptive error detail message for debugging"
                },
                "moreInfo":
                {
                  "type":"string",
                  "format":"uri",
                  "description":"link to documentation to investigate further and finding support for error detail"
                }
              },
              "required":["type"]
            }
          }
        },
        "required":["status" , "type" ]
      }

resourceTypes:
  - element:
      usage: |
        Apply this resource type to a element resource (manages single entities) and redefine the methods you wish to inherit.
      description: |
        This resource type defines the GET, PUT, DELETE methods and their responses for a single element resource.

      get:
        description: |
          Retrieves a single <<resourcePathName | !singularize>> entity.
        responses:
          200:
            description: |
              <<resourcePathName | !singularize>> successfully retrieved.
            body:
              application/json:
                schema: "<<resourcePathName | !singularize>>"
          404:
            description: |
              The requested resource does not exist.

            body:
              application/json:
                example: |
                  {
                    "status": 404,
                    "message": "The requested URI does not map to a single element resource.",
                    "moreInfo": "https://api.yaas.io/patterns/errortypes.html",
                    "type": "element_resource_non_existing"
                  }

                schema: |
                  {
                    "$schema":"http://json-schema.org/draft-04/schema#",
                    "title":"error",
                    "description":"Schema for API specified errors.",
                    "type":"object",
                    "properties":
                    {
                      "status":
                      {
                        "type":"integer",
                        "description":"original HTTP error code, should be consistent with the response HTTP code",
                        "minimum":100,
                        "maximum":599
                      },
                      "type":
                      {
                        "type":"string",
                        "description":"classification of the error type, lower case with underscore eg validation_failure",
                        "pattern":"[a-z]+[a-z_]*[a-z]+"
                      },
                      "message":
                      {
                        "type":"string",
                        "description":"descriptive error message for debugging"
                      },
                      "moreInfo":
                      {
                        "type":"string",
                        "format":"uri",
                        "description":"link to documentation to investigate further and finding support"
                      },
                      "details":
                      {
                        "type":"array",
                        "description":"list of problems causing this error",
                        "items":
                        {
                          "$schema":"http://json-schema.org/draft-04/schema#",
                          "title":"errorDetail",
                          "description":"schema for specific error cause",
                          "type":"object",
                          "properties":
                          {
                            "field":
                            {
                              "type":"string",
                              "description":"a bean notation expression specifying the element in request data causing the error, eg product.variants[3].name, this can be empty if violation was not field specific"
                            },
                            "type":
                            {
                              "type":"string",
                              "description":"classification of the error detail type, lower case with underscore eg missing_value, this value must be always interpreted in context of the general error type.",
                              "pattern":"[a-z]+[a-z_]*[a-z]+"
                            },
                            "message":
                            {
                              "type":"string",
                              "description":"descriptive error detail message for debugging"
                            },
                            "moreInfo":
                            {
                              "type":"string",
                              "format":"uri",
                              "description":"link to documentation to investigate further and finding support for error detail"
                            }
                          },
                          "required":["type"]
                        }
                      }
                    },
                    "required":["status" , "type" ]
                  }

          500:
            description: |
              Some server side error occurred.

            body:
              application/json:
                example: |
                  {
                    "status": 500,
                    "message": "Something went wrong while processing the request. Please contact the administrator.",
                    "moreInfo": "https://api.yaas.io/patterns/errortypes.html",
                    "type": "internal_service_error"
                  }

                schema: |
                  {
                    "$schema":"http://json-schema.org/draft-04/schema#",
                    "title":"error",
                    "description":"Schema for API specified errors.",
                    "type":"object",
                    "properties":
                    {
                      "status":
                      {
                        "type":"integer",
                        "description":"original HTTP error code, should be consistent with the response HTTP code",
                        "minimum":100,
                        "maximum":599
                      },
                      "type":
                      {
                        "type":"string",
                        "description":"classification of the error type, lower case with underscore eg validation_failure",
                        "pattern":"[a-z]+[a-z_]*[a-z]+"
                      },
                      "message":
                      {
                        "type":"string",
                        "description":"descriptive error message for debugging"
                      },
                      "moreInfo":
                      {
                        "type":"string",
                        "format":"uri",
                        "description":"link to documentation to investigate further and finding support"
                      },
                      "details":
                      {
                        "type":"array",
                        "description":"list of problems causing this error",
                        "items":
                        {
                          "$schema":"http://json-schema.org/draft-04/schema#",
                          "title":"errorDetail",
                          "description":"schema for specific error cause",
                          "type":"object",
                          "properties":
                          {
                            "field":
                            {
                              "type":"string",
                              "description":"a bean notation expression specifying the element in request data causing the error, eg product.variants[3].name, this can be empty if violation was not field specific"
                            },
                            "type":
                            {
                              "type":"string",
                              "description":"classification of the error detail type, lower case with underscore eg missing_value, this value must be always interpreted in context of the general error type.",
                              "pattern":"[a-z]+[a-z_]*[a-z]+"
                            },
                            "message":
                            {
                              "type":"string",
                              "description":"descriptive error detail message for debugging"
                            },
                            "moreInfo":
                            {
                              "type":"string",
                              "format":"uri",
                              "description":"link to documentation to investigate further and finding support for error detail"
                            }
                          },
                          "required":["type"]
                        }
                      }
                    },
                    "required":["status" , "type" ]
                  }

      put:
        description: |
          Updates a single <<resourcePathName | !singularize>> entity.
        body:
          application/json:
            schema: "<<resourcePathName | !singularize>>"
        responses:
          200:
            description: |
              The resource has been successfully updated

          400:
            description: |
              Request syntactically incorrect. Any details will be provided within the response payload.
            body:
              application/json:
                example: |
                  {
                    "status": 400,
                    "message": "The request payload has incorrect syntax.",
                    "moreInfo": "https://api.yaas.io/patterns/errortypes.html",
                    "type": "bad_payload_syntax"
                  }

                schema: |
                  {
                    "$schema":"http://json-schema.org/draft-04/schema#",
                    "title":"error",
                    "description":"Schema for API specified errors.",
                    "type":"object",
                    "properties":
                    {
                      "status":
                      {
                        "type":"integer",
                        "description":"original HTTP error code, should be consistent with the response HTTP code",
                        "minimum":100,
                        "maximum":599
                      },
                      "type":
                      {
                        "type":"string",
                        "description":"classification of the error type, lower case with underscore eg validation_failure",
                        "pattern":"[a-z]+[a-z_]*[a-z]+"
                      },
                      "message":
                      {
                        "type":"string",
                        "description":"descriptive error message for debugging"
                      },
                      "moreInfo":
                      {
                        "type":"string",
                        "format":"uri",
                        "description":"link to documentation to investigate further and finding support"
                      },
                      "details":
                      {
                        "type":"array",
                        "description":"list of problems causing this error",
                        "items":
                        {
                          "$schema":"http://json-schema.org/draft-04/schema#",
                          "title":"errorDetail",
                          "description":"schema for specific error cause",
                          "type":"object",
                          "properties":
                          {
                            "field":
                            {
                              "type":"string",
                              "description":"a bean notation expression specifying the element in request data causing the error, eg product.variants[3].name, this can be empty if violation was not field specific"
                            },
                            "type":
                            {
                              "type":"string",
                              "description":"classification of the error detail type, lower case with underscore eg missing_value, this value must be always interpreted in context of the general error type.",
                              "pattern":"[a-z]+[a-z_]*[a-z]+"
                            },
                            "message":
                            {
                              "type":"string",
                              "description":"descriptive error detail message for debugging"
                            },
                            "moreInfo":
                            {
                              "type":"string",
                              "format":"uri",
                              "description":"link to documentation to investigate further and finding support for error detail"
                            }
                          },
                          "required":["type"]
                        }
                      }
                    },
                    "required":["status" , "type" ]
                  }

          404:
            description: |
              The requested resource does not exist.

            body:
              application/json:
                example: |
                  {
                    "status": 404,
                    "message": "The requested URI does not map to a single element resource.",
                    "moreInfo": "https://api.yaas.io/patterns/errortypes.html",
                    "type": "element_resource_non_existing"
                  }

                schema: |
                  {
                    "$schema":"http://json-schema.org/draft-04/schema#",
                    "title":"error",
                    "description":"Schema for API specified errors.",
                    "type":"object",
                    "properties":
                    {
                      "status":
                      {
                        "type":"integer",
                        "description":"original HTTP error code, should be consistent with the response HTTP code",
                        "minimum":100,
                        "maximum":599
                      },
                      "type":
                      {
                        "type":"string",
                        "description":"classification of the error type, lower case with underscore eg validation_failure",
                        "pattern":"[a-z]+[a-z_]*[a-z]+"
                      },
                      "message":
                      {
                        "type":"string",
                        "description":"descriptive error message for debugging"
                      },
                      "moreInfo":
                      {
                        "type":"string",
                        "format":"uri",
                        "description":"link to documentation to investigate further and finding support"
                      },
                      "details":
                      {
                        "type":"array",
                        "description":"list of problems causing this error",
                        "items":
                        {
                          "$schema":"http://json-schema.org/draft-04/schema#",
                          "title":"errorDetail",
                          "description":"schema for specific error cause",
                          "type":"object",
                          "properties":
                          {
                            "field":
                            {
                              "type":"string",
                              "description":"a bean notation expression specifying the element in request data causing the error, eg product.variants[3].name, this can be empty if violation was not field specific"
                            },
                            "type":
                            {
                              "type":"string",
                              "description":"classification of the error detail type, lower case with underscore eg missing_value, this value must be always interpreted in context of the general error type.",
                              "pattern":"[a-z]+[a-z_]*[a-z]+"
                            },
                            "message":
                            {
                              "type":"string",
                              "description":"descriptive error detail message for debugging"
                            },
                            "moreInfo":
                            {
                              "type":"string",
                              "format":"uri",
                              "description":"link to documentation to investigate further and finding support for error detail"
                            }
                          },
                          "required":["type"]
                        }
                      }
                    },
                    "required":["status" , "type" ]
                  }

          409:
            description: |
              Creation failed because there was a conflict with another resource. Any details will be provided within the response payload.

            body:
              application/json:
                example: |
                  {
                    "status": 409,
                    "message": "The requested resource could not be updated due to server-side validation.",
                    "moreInfo": "https://api.yaas.io/patterns/errortypes.html",
                    "type": "conflict_resource"
                  }

                schema: |
                  {
                    "$schema":"http://json-schema.org/draft-04/schema#",
                    "title":"error",
                    "description":"Schema for API specified errors.",
                    "type":"object",
                    "properties":
                    {
                      "status":
                      {
                        "type":"integer",
                        "description":"original HTTP error code, should be consistent with the response HTTP code",
                        "minimum":100,
                        "maximum":599
                      },
                      "type":
                      {
                        "type":"string",
                        "description":"classification of the error type, lower case with underscore eg validation_failure",
                        "pattern":"[a-z]+[a-z_]*[a-z]+"
                      },
                      "message":
                      {
                        "type":"string",
                        "description":"descriptive error message for debugging"
                      },
                      "moreInfo":
                      {
                        "type":"string",
                        "format":"uri",
                        "description":"link to documentation to investigate further and finding support"
                      },
                      "details":
                      {
                        "type":"array",
                        "description":"list of problems causing this error",
                        "items":
                        {
                          "$schema":"http://json-schema.org/draft-04/schema#",
                          "title":"errorDetail",
                          "description":"schema for specific error cause",
                          "type":"object",
                          "properties":
                          {
                            "field":
                            {
                              "type":"string",
                              "description":"a bean notation expression specifying the element in request data causing the error, eg product.variants[3].name, this can be empty if violation was not field specific"
                            },
                            "type":
                            {
                              "type":"string",
                              "description":"classification of the error detail type, lower case with underscore eg missing_value, this value must be always interpreted in context of the general error type.",
                              "pattern":"[a-z]+[a-z_]*[a-z]+"
                            },
                            "message":
                            {
                              "type":"string",
                              "description":"descriptive error detail message for debugging"
                            },
                            "moreInfo":
                            {
                              "type":"string",
                              "format":"uri",
                              "description":"link to documentation to investigate further and finding support for error detail"
                            }
                          },
                          "required":["type"]
                        }
                      }
                    },
                    "required":["status" , "type" ]
                  }

          500:
            description: |
              Some server side error occurred.

            body:
              application/json:
                example: |
                  {
                    "status": 500,
                    "message": "Something went wrong while processing the request. Please contact the administrator.",
                    "moreInfo": "https://api.yaas.io/patterns/errortypes.html",
                    "type": "internal_service_error"
                  }

                schema: |
                  {
                    "$schema":"http://json-schema.org/draft-04/schema#",
                    "title":"error",
                    "description":"Schema for API specified errors.",
                    "type":"object",
                    "properties":
                    {
                      "status":
                      {
                        "type":"integer",
                        "description":"original HTTP error code, should be consistent with the response HTTP code",
                        "minimum":100,
                        "maximum":599
                      },
                      "type":
                      {
                        "type":"string",
                        "description":"classification of the error type, lower case with underscore eg validation_failure",
                        "pattern":"[a-z]+[a-z_]*[a-z]+"
                      },
                      "message":
                      {
                        "type":"string",
                        "description":"descriptive error message for debugging"
                      },
                      "moreInfo":
                      {
                        "type":"string",
                        "format":"uri",
                        "description":"link to documentation to investigate further and finding support"
                      },
                      "details":
                      {
                        "type":"array",
                        "description":"list of problems causing this error",
                        "items":
                        {
                          "$schema":"http://json-schema.org/draft-04/schema#",
                          "title":"errorDetail",
                          "description":"schema for specific error cause",
                          "type":"object",
                          "properties":
                          {
                            "field":
                            {
                              "type":"string",
                              "description":"a bean notation expression specifying the element in request data causing the error, eg product.variants[3].name, this can be empty if violation was not field specific"
                            },
                            "type":
                            {
                              "type":"string",
                              "description":"classification of the error detail type, lower case with underscore eg missing_value, this value must be always interpreted in context of the general error type.",
                              "pattern":"[a-z]+[a-z_]*[a-z]+"
                            },
                            "message":
                            {
                              "type":"string",
                              "description":"descriptive error detail message for debugging"
                            },
                            "moreInfo":
                            {
                              "type":"string",
                              "format":"uri",
                              "description":"link to documentation to investigate further and finding support for error detail"
                            }
                          },
                          "required":["type"]
                        }
                      }
                    },
                    "required":["status" , "type" ]
                  }

      delete:
        description: |
          Deletes a single <<resourcePathName | !singularize>> entity.
        responses:
          204:
            description: |
              The resource has been successfully deleted.

          404:
            description: |
              The requested resource does not exist.

            body:
              application/json:
                example: |
                  {
                    "status": 404,
                    "message": "The requested URI does not map to a single element resource.",
                    "moreInfo": "https://api.yaas.io/patterns/errortypes.html",
                    "type": "element_resource_non_existing"
                  }

                schema: |
                  {
                    "$schema":"http://json-schema.org/draft-04/schema#",
                    "title":"error",
                    "description":"Schema for API specified errors.",
                    "type":"object",
                    "properties":
                    {
                      "status":
                      {
                        "type":"integer",
                        "description":"original HTTP error code, should be consistent with the response HTTP code",
                        "minimum":100,
                        "maximum":599
                      },
                      "type":
                      {
                        "type":"string",
                        "description":"classification of the error type, lower case with underscore eg validation_failure",
                        "pattern":"[a-z]+[a-z_]*[a-z]+"
                      },
                      "message":
                      {
                        "type":"string",
                        "description":"descriptive error message for debugging"
                      },
                      "moreInfo":
                      {
                        "type":"string",
                        "format":"uri",
                        "description":"link to documentation to investigate further and finding support"
                      },
                      "details":
                      {
                        "type":"array",
                        "description":"list of problems causing this error",
                        "items":
                        {
                          "$schema":"http://json-schema.org/draft-04/schema#",
                          "title":"errorDetail",
                          "description":"schema for specific error cause",
                          "type":"object",
                          "properties":
                          {
                            "field":
                            {
                              "type":"string",
                              "description":"a bean notation expression specifying the element in request data causing the error, eg product.variants[3].name, this can be empty if violation was not field specific"
                            },
                            "type":
                            {
                              "type":"string",
                              "description":"classification of the error detail type, lower case with underscore eg missing_value, this value must be always interpreted in context of the general error type.",
                              "pattern":"[a-z]+[a-z_]*[a-z]+"
                            },
                            "message":
                            {
                              "type":"string",
                              "description":"descriptive error detail message for debugging"
                            },
                            "moreInfo":
                            {
                              "type":"string",
                              "format":"uri",
                              "description":"link to documentation to investigate further and finding support for error detail"
                            }
                          },
                          "required":["type"]
                        }
                      }
                    },
                    "required":["status" , "type" ]
                  }

          500:
            description: |
              Some server side error occurred.

            body:
              application/json:
                example: |
                  {
                    "status": 500,
                    "message": "Something went wrong while processing the request. Please contact the administrator.",
                    "moreInfo": "https://api.yaas.io/patterns/errortypes.html",
                    "type": "internal_service_error"
                  }

                schema: |
                  {
                    "$schema":"http://json-schema.org/draft-04/schema#",
                    "title":"error",
                    "description":"Schema for API specified errors.",
                    "type":"object",
                    "properties":
                    {
                      "status":
                      {
                        "type":"integer",
                        "description":"original HTTP error code, should be consistent with the response HTTP code",
                        "minimum":100,
                        "maximum":599
                      },
                      "type":
                      {
                        "type":"string",
                        "description":"classification of the error type, lower case with underscore eg validation_failure",
                        "pattern":"[a-z]+[a-z_]*[a-z]+"
                      },
                      "message":
                      {
                        "type":"string",
                        "description":"descriptive error message for debugging"
                      },
                      "moreInfo":
                      {
                        "type":"string",
                        "format":"uri",
                        "description":"link to documentation to investigate further and finding support"
                      },
                      "details":
                      {
                        "type":"array",
                        "description":"list of problems causing this error",
                        "items":
                        {
                          "$schema":"http://json-schema.org/draft-04/schema#",
                          "title":"errorDetail",
                          "description":"schema for specific error cause",
                          "type":"object",
                          "properties":
                          {
                            "field":
                            {
                              "type":"string",
                              "description":"a bean notation expression specifying the element in request data causing the error, eg product.variants[3].name, this can be empty if violation was not field specific"
                            },
                            "type":
                            {
                              "type":"string",
                              "description":"classification of the error detail type, lower case with underscore eg missing_value, this value must be always interpreted in context of the general error type.",
                              "pattern":"[a-z]+[a-z_]*[a-z]+"
                            },
                            "message":
                            {
                              "type":"string",
                              "description":"descriptive error detail message for debugging"
                            },
                            "moreInfo":
                            {
                              "type":"string",
                              "format":"uri",
                              "description":"link to documentation to investigate further and finding support for error detail"
                            }
                          },
                          "required":["type"]
                        }
                      }
                    },
                    "required":["status" , "type" ]
                  }

  - collection:
      usage: |
        Apply this resourceType to a collection resource and redefine the methods which you wish to inherit.
      description: |
        This resourceType defines the GET, POST, DELETE methods and their responses for a collection resource.

      get:
        description: |
          Retrieves a list of all <<resourcePathName>> in the collection.
        responses:
          200:
            description: Resource successfully retrieved.
            body:
              application/json:
                schema: "<<resourcePathName>>"
          500:
            description: |
              Some server side error occurred.

            body:
              application/json:
                example: |
                  {
                    "status": 500,
                    "message": "Something went wrong while processing the request. Please contact the administrator.",
                    "moreInfo": "https://api.yaas.io/patterns/errortypes.html",
                    "type": "internal_service_error"
                  }

                schema: |
                  {
                    "$schema":"http://json-schema.org/draft-04/schema#",
                    "title":"error",
                    "description":"Schema for API specified errors.",
                    "type":"object",
                    "properties":
                    {
                      "status":
                      {
                        "type":"integer",
                        "description":"original HTTP error code, should be consistent with the response HTTP code",
                        "minimum":100,
                        "maximum":599
                      },
                      "type":
                      {
                        "type":"string",
                        "description":"classification of the error type, lower case with underscore eg validation_failure",
                        "pattern":"[a-z]+[a-z_]*[a-z]+"
                      },
                      "message":
                      {
                        "type":"string",
                        "description":"descriptive error message for debugging"
                      },
                      "moreInfo":
                      {
                        "type":"string",
                        "format":"uri",
                        "description":"link to documentation to investigate further and finding support"
                      },
                      "details":
                      {
                        "type":"array",
                        "description":"list of problems causing this error",
                        "items":
                        {
                          "$schema":"http://json-schema.org/draft-04/schema#",
                          "title":"errorDetail",
                          "description":"schema for specific error cause",
                          "type":"object",
                          "properties":
                          {
                            "field":
                            {
                              "type":"string",
                              "description":"a bean notation expression specifying the element in request data causing the error, eg product.variants[3].name, this can be empty if violation was not field specific"
                            },
                            "type":
                            {
                              "type":"string",
                              "description":"classification of the error detail type, lower case with underscore eg missing_value, this value must be always interpreted in context of the general error type.",
                              "pattern":"[a-z]+[a-z_]*[a-z]+"
                            },
                            "message":
                            {
                              "type":"string",
                              "description":"descriptive error detail message for debugging"
                            },
                            "moreInfo":
                            {
                              "type":"string",
                              "format":"uri",
                              "description":"link to documentation to investigate further and finding support for error detail"
                            }
                          },
                          "required":["type"]
                        }
                      }
                    },
                    "required":["status" , "type" ]
                  }

      post?:
        description: "Creates a new <<resourcePathName | !singularize>>."
        body:
          application/json:
            schema: "<<resourcePathName | !singularize>>"
        responses:
          201:
            description: |
              The collection resource has been successfully created.

            headers:
              Location:
                description: |
                  The Location of the new resource which was created by the request.
                  The value consists of a single absolute URI.

                example: http://www.hybris.com/items/myItem
                required: true
          400:
            description: |
              Request syntactically incorrect. Any details will be provided within the response payload.
            body:
              application/json:
                example: |
                  {
                    "status": 400,
                    "message": "The request payload has incorrect syntax.",
                    "moreInfo": "https://api.yaas.io/patterns/errortypes.html",
                    "type": "bad_payload_syntax"
                  }

                schema: |
                  {
                    "$schema":"http://json-schema.org/draft-04/schema#",
                    "title":"error",
                    "description":"Schema for API specified errors.",
                    "type":"object",
                    "properties":
                    {
                      "status":
                      {
                        "type":"integer",
                        "description":"original HTTP error code, should be consistent with the response HTTP code",
                        "minimum":100,
                        "maximum":599
                      },
                      "type":
                      {
                        "type":"string",
                        "description":"classification of the error type, lower case with underscore eg validation_failure",
                        "pattern":"[a-z]+[a-z_]*[a-z]+"
                      },
                      "message":
                      {
                        "type":"string",
                        "description":"descriptive error message for debugging"
                      },
                      "moreInfo":
                      {
                        "type":"string",
                        "format":"uri",
                        "description":"link to documentation to investigate further and finding support"
                      },
                      "details":
                      {
                        "type":"array",
                        "description":"list of problems causing this error",
                        "items":
                        {
                          "$schema":"http://json-schema.org/draft-04/schema#",
                          "title":"errorDetail",
                          "description":"schema for specific error cause",
                          "type":"object",
                          "properties":
                          {
                            "field":
                            {
                              "type":"string",
                              "description":"a bean notation expression specifying the element in request data causing the error, eg product.variants[3].name, this can be empty if violation was not field specific"
                            },
                            "type":
                            {
                              "type":"string",
                              "description":"classification of the error detail type, lower case with underscore eg missing_value, this value must be always interpreted in context of the general error type.",
                              "pattern":"[a-z]+[a-z_]*[a-z]+"
                            },
                            "message":
                            {
                              "type":"string",
                              "description":"descriptive error detail message for debugging"
                            },
                            "moreInfo":
                            {
                              "type":"string",
                              "format":"uri",
                              "description":"link to documentation to investigate further and finding support for error detail"
                            }
                          },
                          "required":["type"]
                        }
                      }
                    },
                    "required":["status" , "type" ]
                  }

          409:
            description: |
              Creation failed because there was a conflict with another resource. Any details will be provided within the response payload.

            body:
              application/json:
                example: |
                  {
                    "status": 409,
                    "message": "The requested resource could not be created due to server-side validation.",
                    "moreInfo": "https://api.yaas.io/patterns/errortypes.html",
                    "type": "conflict_resource"
                  }

                schema: |
                  {
                    "$schema":"http://json-schema.org/draft-04/schema#",
                    "title":"error",
                    "description":"Schema for API specified errors.",
                    "type":"object",
                    "properties":
                    {
                      "status":
                      {
                        "type":"integer",
                        "description":"original HTTP error code, should be consistent with the response HTTP code",
                        "minimum":100,
                        "maximum":599
                      },
                      "type":
                      {
                        "type":"string",
                        "description":"classification of the error type, lower case with underscore eg validation_failure",
                        "pattern":"[a-z]+[a-z_]*[a-z]+"
                      },
                      "message":
                      {
                        "type":"string",
                        "description":"descriptive error message for debugging"
                      },
                      "moreInfo":
                      {
                        "type":"string",
                        "format":"uri",
                        "description":"link to documentation to investigate further and finding support"
                      },
                      "details":
                      {
                        "type":"array",
                        "description":"list of problems causing this error",
                        "items":
                        {
                          "$schema":"http://json-schema.org/draft-04/schema#",
                          "title":"errorDetail",
                          "description":"schema for specific error cause",
                          "type":"object",
                          "properties":
                          {
                            "field":
                            {
                              "type":"string",
                              "description":"a bean notation expression specifying the element in request data causing the error, eg product.variants[3].name, this can be empty if violation was not field specific"
                            },
                            "type":
                            {
                              "type":"string",
                              "description":"classification of the error detail type, lower case with underscore eg missing_value, this value must be always interpreted in context of the general error type.",
                              "pattern":"[a-z]+[a-z_]*[a-z]+"
                            },
                            "message":
                            {
                              "type":"string",
                              "description":"descriptive error detail message for debugging"
                            },
                            "moreInfo":
                            {
                              "type":"string",
                              "format":"uri",
                              "description":"link to documentation to investigate further and finding support for error detail"
                            }
                          },
                          "required":["type"]
                        }
                      }
                    },
                    "required":["status" , "type" ]
                  }

          500:
            description: |
              Some server side error occurred.

            body:
              application/json:
                example: |
                  {
                    "status": 500,
                    "message": "Something went wrong while processing the request. Please contact the administrator.",
                    "moreInfo": "https://api.yaas.io/patterns/errortypes.html",
                    "type": "internal_service_error"
                  }

                schema: |
                  {
                    "$schema":"http://json-schema.org/draft-04/schema#",
                    "title":"error",
                    "description":"Schema for API specified errors.",
                    "type":"object",
                    "properties":
                    {
                      "status":
                      {
                        "type":"integer",
                        "description":"original HTTP error code, should be consistent with the response HTTP code",
                        "minimum":100,
                        "maximum":599
                      },
                      "type":
                      {
                        "type":"string",
                        "description":"classification of the error type, lower case with underscore eg validation_failure",
                        "pattern":"[a-z]+[a-z_]*[a-z]+"
                      },
                      "message":
                      {
                        "type":"string",
                        "description":"descriptive error message for debugging"
                      },
                      "moreInfo":
                      {
                        "type":"string",
                        "format":"uri",
                        "description":"link to documentation to investigate further and finding support"
                      },
                      "details":
                      {
                        "type":"array",
                        "description":"list of problems causing this error",
                        "items":
                        {
                          "$schema":"http://json-schema.org/draft-04/schema#",
                          "title":"errorDetail",
                          "description":"schema for specific error cause",
                          "type":"object",
                          "properties":
                          {
                            "field":
                            {
                              "type":"string",
                              "description":"a bean notation expression specifying the element in request data causing the error, eg product.variants[3].name, this can be empty if violation was not field specific"
                            },
                            "type":
                            {
                              "type":"string",
                              "description":"classification of the error detail type, lower case with underscore eg missing_value, this value must be always interpreted in context of the general error type.",
                              "pattern":"[a-z]+[a-z_]*[a-z]+"
                            },
                            "message":
                            {
                              "type":"string",
                              "description":"descriptive error detail message for debugging"
                            },
                            "moreInfo":
                            {
                              "type":"string",
                              "format":"uri",
                              "description":"link to documentation to investigate further and finding support for error detail"
                            }
                          },
                          "required":["type"]
                        }
                      }
                    },
                    "required":["status" , "type" ]
                  }

      delete?:
        description: "Deletes all <<resourcePathName>>."
        responses:
          204:
            description: |
              The collection resource has been successfully deleted.

          500:
            description: |
              Some server side error occurred.

            body:
              application/json:
                example: |
                  {
                    "status": 500,
                    "message": "Something went wrong while processing the request. Please contact the administrator.",
                    "moreInfo": "https://api.yaas.io/patterns/errortypes.html",
                    "type": "internal_service_error"
                  }

                schema: |
                  {
                    "$schema":"http://json-schema.org/draft-04/schema#",
                    "title":"error",
                    "description":"Schema for API specified errors.",
                    "type":"object",
                    "properties":
                    {
                      "status":
                      {
                        "type":"integer",
                        "description":"original HTTP error code, should be consistent with the response HTTP code",
                        "minimum":100,
                        "maximum":599
                      },
                      "type":
                      {
                        "type":"string",
                        "description":"classification of the error type, lower case with underscore eg validation_failure",
                        "pattern":"[a-z]+[a-z_]*[a-z]+"
                      },
                      "message":
                      {
                        "type":"string",
                        "description":"descriptive error message for debugging"
                      },
                      "moreInfo":
                      {
                        "type":"string",
                        "format":"uri",
                        "description":"link to documentation to investigate further and finding support"
                      },
                      "details":
                      {
                        "type":"array",
                        "description":"list of problems causing this error",
                        "items":
                        {
                          "$schema":"http://json-schema.org/draft-04/schema#",
                          "title":"errorDetail",
                          "description":"schema for specific error cause",
                          "type":"object",
                          "properties":
                          {
                            "field":
                            {
                              "type":"string",
                              "description":"a bean notation expression specifying the element in request data causing the error, eg product.variants[3].name, this can be empty if violation was not field specific"
                            },
                            "type":
                            {
                              "type":"string",
                              "description":"classification of the error detail type, lower case with underscore eg missing_value, this value must be always interpreted in context of the general error type.",
                              "pattern":"[a-z]+[a-z_]*[a-z]+"
                            },
                            "message":
                            {
                              "type":"string",
                              "description":"descriptive error detail message for debugging"
                            },
                            "moreInfo":
                            {
                              "type":"string",
                              "format":"uri",
                              "description":"link to documentation to investigate further and finding support for error detail"
                            }
                          },
                          "required":["type"]
                        }
                      }
                    },
                    "required":["status" , "type" ]
                  }

traits:
  - paged:
      usage: |
        Apply this trait to a method returning a list of entities which should be paged.
      description: |
        This trait adds query parameters to the request so that the result can be paginated on the server side.
        The specified parameters are page number and page size.

      queryParameters:
        pageNumber:
          type: integer
          description: |
            The page number to be retrieved where the size of the pages must be specified by the pageSize parameter.
            The number of the first page is 1.

          minimum: 1
          example: 1
          default: 1
          required: false
        pageSize:
          type: integer
          description: |
            The number of documents being retrieved on the page.

          minimum: 1
          example: 16
          default: 16
          required: false
      responses:
        200:
          description: |
            Request was successful.

          headers:
            Link:
              description: |
                Link to the current page, the next page and the previous page. Marked accordingly with *rel* **self**, *rel* **next** and *rel* **prev**. The syntax must be conform to [RFC-5988](https://tools.ietf.org/html/rfc5988).
                The link to the current page (**self**) is required and must be provided always.
                The link to the next page (**next**) is optional. If not present, the next page is not available, as the current page is the last page of the result.
                The link to the previous page (**prev**) is optional. If not present, the previous page is not available, as the current page is the first page of the result.

              example: |
                <http://sample.com?pageNumber=2&pageSize=10>; rel="self", <http://sample.com?pageNumber=3&pageSize=10>; rel="next"
              required: true
              repeat: true
              type: string
              displayName: Link
        400:
          description: |
            Request was syntactically incorrect. Any details will be provided within the response payload.

          body:
            application/json:
              example: |
                {
                  "status": 400,
                  "message": "There are validation problems, see details section for more information",
                  "moreInfo": "https://api.yaas.io/patterns/errortypes.html",
                  "type": "validation_violation",
                  "details": [
                    {
                      "field": "pageNumber",
                      "message": "must be a positive number",
                      "type": "invalid_query_parameter"
                    }
                  ]
                }

              schema: |
                {
                  "$schema":"http://json-schema.org/draft-04/schema#",
                  "title":"error",
                  "description":"Schema for API specified errors.",
                  "type":"object",
                  "properties":
                  {
                    "status":
                    {
                      "type":"integer",
                      "description":"original HTTP error code, should be consistent with the response HTTP code",
                      "minimum":100,
                      "maximum":599
                    },
                    "type":
                    {
                      "type":"string",
                      "description":"classification of the error type, lower case with underscore eg validation_failure",
                      "pattern":"[a-z]+[a-z_]*[a-z]+"
                    },
                    "message":
                    {
                      "type":"string",
                      "description":"descriptive error message for debugging"
                    },
                    "moreInfo":
                    {
                      "type":"string",
                      "format":"uri",
                      "description":"link to documentation to investigate further and finding support"
                    },
                    "details":
                    {
                      "type":"array",
                      "description":"list of problems causing this error",
                      "items":
                      {
                        "$schema":"http://json-schema.org/draft-04/schema#",
                        "title":"errorDetail",
                        "description":"schema for specific error cause",
                        "type":"object",
                        "properties":
                        {
                          "field":
                          {
                            "type":"string",
                            "description":"a bean notation expression specifying the element in request data causing the error, eg product.variants[3].name, this can be empty if violation was not field specific"
                          },
                          "type":
                          {
                            "type":"string",
                            "description":"classification of the error detail type, lower case with underscore eg missing_value, this value must be always interpreted in context of the general error type.",
                            "pattern":"[a-z]+[a-z_]*[a-z]+"
                          },
                          "message":
                          {
                            "type":"string",
                            "description":"descriptive error detail message for debugging"
                          },
                          "moreInfo":
                          {
                            "type":"string",
                            "format":"uri",
                            "description":"link to documentation to investigate further and finding support for error detail"
                          }
                        },
                        "required":["type"]
                      }
                    }
                  },
                  "required":["status" , "type" ]
                }

  - oauth2:
      usage: Apply this trait to support OAuth 2.0 authentication.
      description: |
        Supports OAuth 2.0 for authenticating all API requests.

      headers:
        Authorization:
          type: string
          description: |
            Used to send a valid OAuth2 access token.

          example: Bearer access_token
          required: true
      responses:
        401:
          description: |
            Given request is unauthorized. Bad or expired token. Reauthenticate
            the user. Any details will be provided within the response payload.

          body:
            application/json:
              example: |
                {
                  "status":401,
                  "message":"Authorization: Unauthorized. Bearer TOKEN is invalid",
                  "type":"insufficient_credentials",
                  "moreInfo":"https://api.yaas.io/patterns/errortypes.html"
                }

              schema: |
                {
                  "$schema":"http://json-schema.org/draft-04/schema#",
                  "title":"error",
                  "description":"Schema for API specified errors.",
                  "type":"object",
                  "properties":
                  {
                    "status":
                    {
                      "type":"integer",
                      "description":"original HTTP error code, should be consistent with the response HTTP code",
                      "minimum":100,
                      "maximum":599
                    },
                    "type":
                    {
                      "type":"string",
                      "description":"classification of the error type, lower case with underscore eg validation_failure",
                      "pattern":"[a-z]+[a-z_]*[a-z]+"
                    },
                    "message":
                    {
                      "type":"string",
                      "description":"descriptive error message for debugging"
                    },
                    "moreInfo":
                    {
                      "type":"string",
                      "format":"uri",
                      "description":"link to documentation to investigate further and finding support"
                    },
                    "details":
                    {
                      "type":"array",
                      "description":"list of problems causing this error",
                      "items":
                      {
                        "$schema":"http://json-schema.org/draft-04/schema#",
                        "title":"errorDetail",
                        "description":"schema for specific error cause",
                        "type":"object",
                        "properties":
                        {
                          "field":
                          {
                            "type":"string",
                            "description":"a bean notation expression specifying the element in request data causing the error, eg product.variants[3].name, this can be empty if violation was not field specific"
                          },
                          "type":
                          {
                            "type":"string",
                            "description":"classification of the error detail type, lower case with underscore eg missing_value, this value must be always interpreted in context of the general error type.",
                            "pattern":"[a-z]+[a-z_]*[a-z]+"
                          },
                          "message":
                          {
                            "type":"string",
                            "description":"descriptive error detail message for debugging"
                          },
                          "moreInfo":
                          {
                            "type":"string",
                            "format":"uri",
                            "description":"link to documentation to investigate further and finding support for error detail"
                          }
                        },
                        "required":["type"]
                      }
                    }
                  },
                  "required":["status" , "type" ]
                }

        403:
          description: |
            Evaluated request scopes in access token are not sufficient and do not match required scopes.

          body:
            application/json:
              example: |
                {
                  "status": 403,
                  "message": "Given request does not have required scopes in access token. It is not authorized to perform this operation.",
                  "type": "insufficient_permissions"
                }

              schema: |
                {
                  "$schema":"http://json-schema.org/draft-04/schema#",
                  "title":"error",
                  "description":"Schema for API specified errors.",
                  "type":"object",
                  "properties":
                  {
                    "status":
                    {
                      "type":"integer",
                      "description":"original HTTP error code, should be consistent with the response HTTP code",
                      "minimum":100,
                      "maximum":599
                    },
                    "type":
                    {
                      "type":"string",
                      "description":"classification of the error type, lower case with underscore eg validation_failure",
                      "pattern":"[a-z]+[a-z_]*[a-z]+"
                    },
                    "message":
                    {
                      "type":"string",
                      "description":"descriptive error message for debugging"
                    },
                    "moreInfo":
                    {
                      "type":"string",
                      "format":"uri",
                      "description":"link to documentation to investigate further and finding support"
                    },
                    "details":
                    {
                      "type":"array",
                      "description":"list of problems causing this error",
                      "items":
                      {
                        "$schema":"http://json-schema.org/draft-04/schema#",
                        "title":"errorDetail",
                        "description":"schema for specific error cause",
                        "type":"object",
                        "properties":
                        {
                          "field":
                          {
                            "type":"string",
                            "description":"a bean notation expression specifying the element in request data causing the error, eg product.variants[3].name, this can be empty if violation was not field specific"
                          },
                          "type":
                          {
                            "type":"string",
                            "description":"classification of the error detail type, lower case with underscore eg missing_value, this value must be always interpreted in context of the general error type.",
                            "pattern":"[a-z]+[a-z_]*[a-z]+"
                          },
                          "message":
                          {
                            "type":"string",
                            "description":"descriptive error detail message for debugging"
                          },
                          "moreInfo":
                          {
                            "type":"string",
                            "format":"uri",
                            "description":"link to documentation to investigate further and finding support for error detail"
                          }
                        },
                        "required":["type"]
                      }
                    }
                  },
                  "required":["status" , "type" ]
                }

  - sorted:
      usage: |
        Apply this trait to a method returning a list of entities which should be sorted.
      description: |
        This trait adds a "sort" query parameter to the request so that the result can be sorted on the server side.

      queryParameters:
        sort:
          type: string
          description: |
            The list of comma-separated values. Property identifiers used to sort the result. By default, the column values are sorted in ascending order.
            If preceded by a minus sign (-), the values are sorted in descending order.

          example: name,-description
      responses:
        400:
          description: |
            Request syntactically incorrect. Any details will be provided within the response payload.
  - queried:
      usage: |
        Apply this trait to a method returning a list of entities which should be queried.
      description: |
        This trait adds query parameters to the request so that the the result can be queried and limited. 
        The specified parameters are page number and page size.

      queryParameters:
        q:
          type: string
          description: |
            The simple query criteria based on available fields to limit returned results or a set of modified documents.

          example: |
            species:cat breed:"Norwegian Forest Cat" weight:(>3 AND <=5) age:(3,5,6) condition:exists

          required: false
      responses:
        400:
          description: |
            Request syntactically incorrect. Any details will be provided within the response payload.
  - patchable:
      usage: Apply this trait to PUT methods that support partial updates.
      description: |
        This trait adds a "patch" query parameter to the request, so that also partial updates of an element can be requested.

      queryParameters:
        patch:
          type: boolean
          description: |
            If true, a partial update will be supported, otherwise the full object replacement will be performed.

          example: true
      responses:
        400:
          description: |
            Request syntactically incorrect. Any details will be provided within the response payload.
          body:
            application/json:
              example: |
                {
                  "status": 400,
                  "message": "There are validation problems, see details section for more information",
                  "moreInfo": "https://api.yaas.io/patterns/errortypes.html",
                  "type": "validation_violation",
                  "details": [
                    {
                     "field": "patch",
                      "message": "not a boolean",
                      "type": "invalid_query_parameter"
                    }
                  ]
                }

              schema: |
                {
                  "$schema":"http://json-schema.org/draft-04/schema#",
                  "title":"error",
                  "description":"Schema for API specified errors.",
                  "type":"object",
                  "properties":
                  {
                    "status":
                    {
                      "type":"integer",
                      "description":"original HTTP error code, should be consistent with the response HTTP code",
                      "minimum":100,
                      "maximum":599
                    },
                    "type":
                    {
                      "type":"string",
                      "description":"classification of the error type, lower case with underscore eg validation_failure",
                      "pattern":"[a-z]+[a-z_]*[a-z]+"
                    },
                    "message":
                    {
                      "type":"string",
                      "description":"descriptive error message for debugging"
                    },
                    "moreInfo":
                    {
                      "type":"string",
                      "format":"uri",
                      "description":"link to documentation to investigate further and finding support"
                    },
                    "details":
                    {
                      "type":"array",
                      "description":"list of problems causing this error",
                      "items":
                      {
                        "$schema":"http://json-schema.org/draft-04/schema#",
                        "title":"errorDetail",
                        "description":"schema for specific error cause",
                        "type":"object",
                        "properties":
                        {
                          "field":
                          {
                            "type":"string",
                            "description":"a bean notation expression specifying the element in request data causing the error, eg product.variants[3].name, this can be empty if violation was not field specific"
                          },
                          "type":
                          {
                            "type":"string",
                            "description":"classification of the error detail type, lower case with underscore eg missing_value, this value must be always interpreted in context of the general error type.",
                            "pattern":"[a-z]+[a-z_]*[a-z]+"
                          },
                          "message":
                          {
                            "type":"string",
                            "description":"descriptive error detail message for debugging"
                          },
                          "moreInfo":
                          {
                            "type":"string",
                            "format":"uri",
                            "description":"link to documentation to investigate further and finding support for error detail"
                          }
                        },
                        "required":["type"]
                      }
                    }
                  },
                  "required":["status" , "type" ]
                }

  - projectable:
      usage: |
        Apply this trait to a method or resource where you want to limit number of fields returned.
      description: |
        This trait adds "fields" query parameter to the request so that the the result fields can be 
        filtered on the server side.

      queryParameters:
        fields:
          type: string
          description: |
            Contains a comma separated list of field identifiers, by which the fields of the response entities should be filtered by.
            Empty or not initialized value result in a minimal set of entity fields returned. Non-existing or invalid fields will be ignored.

          example: code,name,description
  - countable:
      usage: |
        Apply this to a method which returns the total number of objects fulfilling some criteria.

      description: |
        This trait adds a query parameter to the request so that the response contains the total number 
        of objects fulfilling the criteria.

      queryParameters:
        totalCount:
          type: boolean
          description: |
            This parameter requests to return the total number of object in the collection fulfilling
            the criteria together with the response. This number will be returned in the 'hybris-count' 
            header.

          example: true
          required: false
      responses:
        200:
          headers:
            hybris-count:
              description: |
                The total number of objects that fulfil the criteria.

              type: integer
              example: 1000
              required: false
              displayName: hybris-count
        400:
          description: |
            Request syntactically incorrect. Any details will be provided within the response payload.
          body:
            application/json:
              example: |
                {
                  "status": 400,
                  "message": "There are validation problems, see details section for more information",
                  "moreInfo": "https://api.yaas.io/patterns/errortypes.html",
                  "type": "validation_violation",
                  "details": [
                    {
                     "field": "totalCount",
                      "message": "must be a boolean",
                      "type": "invalid_query_parameter"
                    }
                  ]
                }
              schema: |
                {
                  "$schema":"http://json-schema.org/draft-04/schema#",
                  "title":"error",
                  "description":"Schema for API specified errors.",
                  "type":"object",
                  "properties":
                  {
                    "status":
                    {
                      "type":"integer",
                      "description":"original HTTP error code, should be consistent with the response HTTP code",
                      "minimum":100,
                      "maximum":599
                    },
                    "type":
                    {
                      "type":"string",
                      "description":"classification of the error type, lower case with underscore eg validation_failure",
                      "pattern":"[a-z]+[a-z_]*[a-z]+"
                    },
                    "message":
                    {
                      "type":"string",
                      "description":"descriptive error message for debugging"
                    },
                    "moreInfo":
                    {
                      "type":"string",
                      "format":"uri",
                      "description":"link to documentation to investigate further and finding support"
                    },
                    "details":
                    {
                      "type":"array",
                      "description":"list of problems causing this error",
                      "items":
                      {
                        "$schema":"http://json-schema.org/draft-04/schema#",
                        "title":"errorDetail",
                        "description":"schema for specific error cause",
                        "type":"object",
                        "properties":
                        {
                          "field":
                          {
                            "type":"string",
                            "description":"a bean notation expression specifying the element in request data causing the error, eg product.variants[3].name, this can be empty if violation was not field specific"
                          },
                          "type":
                          {
                            "type":"string",
                            "description":"classification of the error detail type, lower case with underscore eg missing_value, this value must be always interpreted in context of the general error type.",
                            "pattern":"[a-z]+[a-z_]*[a-z]+"
                          },
                          "message":
                          {
                            "type":"string",
                            "description":"descriptive error detail message for debugging"
                          },
                          "moreInfo":
                          {
                            "type":"string",
                            "format":"uri",
                            "description":"link to documentation to investigate further and finding support for error detail"
                          }
                        },
                        "required":["type"]
                      }
                    }
                  },
                  "required":["status" , "type" ]
                }

/ratingReviewMashup:
  type: collection
  is: [ oauth2 ]
  description: |
    This resourceType defines the GET, POST, DELETE methods and their responses for a collection resource.

  get:
    description: Retrieves a list of all ratingReviewMashup in the collection.
    headers:
      Authorization:
        type: string
        description: |
          Used to send a valid OAuth2 access token.

        example: Bearer access_token
        required: true
    responses:
      200:
        description: Resource successfully retrieved.
        body:
          application/json:
            schema: |
              {
                "$schema": "http://json-schema.org/draft-04/schema#",
                "title":"RatingReviewMashup",
                "type":"object",
                "properties":
                {
                  "ratingId":
                  {
                    "type":"string",
                    "maxLength": 32
                  },
                  "sku":
                  {
                    "type":"string",
                    "maxLength": 32
                  }, 
                  "rating":
                  {
                    "type":"integer",
                    "minimum": 1,
                    "maximum": 5
                  },
                  "reviewerName":
                  {
                    "type":"string",
                    "maxLength": 32
                  },
                  "reviewTitle":
                  { 
                    "type":"string",
                    "maxLength": 50
                  },
                  "reviewComment":
                  {
                    "type":"string",
                    "maxLength": 500
                  },    
                  "customerId":
                  {
                    "type":"string"
                  },
                  "customAttributes":
                  {
                    "type":"array",
                    "items":
                    {
                      "$ref":"customAttr"
                    }
                  },    
                  "reviewStatus":
                  {
                     "enum": [ "PUBLISHED", "NEW","BLOCKED" , "ARCHIVED"]
                  }
                },
                "required":["sku", "rating", "customerId", "reviewerName"]
              }
      401:
        description: |
          Given request is unauthorized. Bad or expired token. Reauthenticate
          the user. Any details will be provided within the response payload.

        body:
          application/json:
            example: |
              {
                "status":401,
                "message":"Authorization: Unauthorized. Bearer TOKEN is invalid",
                "type":"insufficient_credentials",
                "moreInfo":"https://api.yaas.io/patterns/errortypes.html"
              }

            schema: |
              {
                "$schema":"http://json-schema.org/draft-04/schema#",
                "title":"error",
                "description":"Schema for API specified errors.",
                "type":"object",
                "properties":
                {
                  "status":
                  {
                    "type":"integer",
                    "description":"original HTTP error code, should be consistent with the response HTTP code",
                    "minimum":100,
                    "maximum":599
                  },
                  "type":
                  {
                    "type":"string",
                    "description":"classification of the error type, lower case with underscore eg validation_failure",
                    "pattern":"[a-z]+[a-z_]*[a-z]+"
                  },
                  "message":
                  {
                    "type":"string",
                    "description":"descriptive error message for debugging"
                  },
                  "moreInfo":
                  {
                    "type":"string",
                    "format":"uri",
                    "description":"link to documentation to investigate further and finding support"
                  },
                  "details":
                  {
                    "type":"array",
                    "description":"list of problems causing this error",
                    "items":
                    {
                      "$schema":"http://json-schema.org/draft-04/schema#",
                      "title":"errorDetail",
                      "description":"schema for specific error cause",
                      "type":"object",
                      "properties":
                      {
                        "field":
                        {
                          "type":"string",
                          "description":"a bean notation expression specifying the element in request data causing the error, eg product.variants[3].name, this can be empty if violation was not field specific"
                        },
                        "type":
                        {
                          "type":"string",
                          "description":"classification of the error detail type, lower case with underscore eg missing_value, this value must be always interpreted in context of the general error type.",
                          "pattern":"[a-z]+[a-z_]*[a-z]+"
                        },
                        "message":
                        {
                          "type":"string",
                          "description":"descriptive error detail message for debugging"
                        },
                        "moreInfo":
                        {
                          "type":"string",
                          "format":"uri",
                          "description":"link to documentation to investigate further and finding support for error detail"
                        }
                      },
                      "required":["type"]
                    }
                  }
                },
                "required":["status" , "type" ]
              }

      403:
        description: |
          Evaluated request scopes in access token are not sufficient and do not match required scopes.

        body:
          application/json:
            example: |
              {
                "status": 403,
                "message": "Given request does not have required scopes in access token. It is not authorized to perform this operation.",
                "type": "insufficient_permissions"
              }

            schema: |
              {
                "$schema":"http://json-schema.org/draft-04/schema#",
                "title":"error",
                "description":"Schema for API specified errors.",
                "type":"object",
                "properties":
                {
                  "status":
                  {
                    "type":"integer",
                    "description":"original HTTP error code, should be consistent with the response HTTP code",
                    "minimum":100,
                    "maximum":599
                  },
                  "type":
                  {
                    "type":"string",
                    "description":"classification of the error type, lower case with underscore eg validation_failure",
                    "pattern":"[a-z]+[a-z_]*[a-z]+"
                  },
                  "message":
                  {
                    "type":"string",
                    "description":"descriptive error message for debugging"
                  },
                  "moreInfo":
                  {
                    "type":"string",
                    "format":"uri",
                    "description":"link to documentation to investigate further and finding support"
                  },
                  "details":
                  {
                    "type":"array",
                    "description":"list of problems causing this error",
                    "items":
                    {
                      "$schema":"http://json-schema.org/draft-04/schema#",
                      "title":"errorDetail",
                      "description":"schema for specific error cause",
                      "type":"object",
                      "properties":
                      {
                        "field":
                        {
                          "type":"string",
                          "description":"a bean notation expression specifying the element in request data causing the error, eg product.variants[3].name, this can be empty if violation was not field specific"
                        },
                        "type":
                        {
                          "type":"string",
                          "description":"classification of the error detail type, lower case with underscore eg missing_value, this value must be always interpreted in context of the general error type.",
                          "pattern":"[a-z]+[a-z_]*[a-z]+"
                        },
                        "message":
                        {
                          "type":"string",
                          "description":"descriptive error detail message for debugging"
                        },
                        "moreInfo":
                        {
                          "type":"string",
                          "format":"uri",
                          "description":"link to documentation to investigate further and finding support for error detail"
                        }
                      },
                      "required":["type"]
                    }
                  }
                },
                "required":["status" , "type" ]
              }

      500:
        description: |
          Some server side error occurred.

        body:
          application/json:
            example: |
              {
                "status": 500,
                "message": "Something went wrong while processing the request. Please contact the administrator.",
                "moreInfo": "https://api.yaas.io/patterns/errortypes.html",
                "type": "internal_service_error"
              }

            schema: |
              {
                "$schema":"http://json-schema.org/draft-04/schema#",
                "title":"error",
                "description":"Schema for API specified errors.",
                "type":"object",
                "properties":
                {
                  "status":
                  {
                    "type":"integer",
                    "description":"original HTTP error code, should be consistent with the response HTTP code",
                    "minimum":100,
                    "maximum":599
                  },
                  "type":
                  {
                    "type":"string",
                    "description":"classification of the error type, lower case with underscore eg validation_failure",
                    "pattern":"[a-z]+[a-z_]*[a-z]+"
                  },
                  "message":
                  {
                    "type":"string",
                    "description":"descriptive error message for debugging"
                  },
                  "moreInfo":
                  {
                    "type":"string",
                    "format":"uri",
                    "description":"link to documentation to investigate further and finding support"
                  },
                  "details":
                  {
                    "type":"array",
                    "description":"list of problems causing this error",
                    "items":
                    {
                      "$schema":"http://json-schema.org/draft-04/schema#",
                      "title":"errorDetail",
                      "description":"schema for specific error cause",
                      "type":"object",
                      "properties":
                      {
                        "field":
                        {
                          "type":"string",
                          "description":"a bean notation expression specifying the element in request data causing the error, eg product.variants[3].name, this can be empty if violation was not field specific"
                        },
                        "type":
                        {
                          "type":"string",
                          "description":"classification of the error detail type, lower case with underscore eg missing_value, this value must be always interpreted in context of the general error type.",
                          "pattern":"[a-z]+[a-z_]*[a-z]+"
                        },
                        "message":
                        {
                          "type":"string",
                          "description":"descriptive error detail message for debugging"
                        },
                        "moreInfo":
                        {
                          "type":"string",
                          "format":"uri",
                          "description":"link to documentation to investigate further and finding support for error detail"
                        }
                      },
                      "required":["type"]
                    }
                  }
                },
                "required":["status" , "type" ]
              }

  post:
    description: |
      To provide Rating and Review for a product.  

      Details:
        * Member activities gets created for Rating and Review
        * If rules are defined to award loyalty points for providing the Rating and Review, user will be awarded with points.  

    headers:
      Authorization:
        type: string
        description: |
          Used to send a valid OAuth2 access token.

        example: Bearer access_token
        required: true
    body:
      application/json:
        schema: |
          {
            "$schema": "http://json-schema.org/draft-04/schema#",
            "title":"RatingReviewMashup",
            "type":"object",
            "properties":
            {
              "ratingId":
              {
                "type":"string",
                "maxLength": 32
              },
              "sku":
              {
                "type":"string",
                "maxLength": 32
              }, 
              "rating":
              {
                "type":"integer",
                "minimum": 1,
                "maximum": 5
              },
              "reviewerName":
              {
                "type":"string",
                "maxLength": 32
              },
              "reviewTitle":
              { 
                "type":"string",
                "maxLength": 50
              },
              "reviewComment":
              {
                "type":"string",
                "maxLength": 500
              },    
              "customerId":
              {
                "type":"string"
              },
              "customAttributes":
              {
                "type":"array",
                "items":
                {
                  "$ref":"customAttr"
                }
              },    
              "reviewStatus":
              {
                 "enum": [ "PUBLISHED", "NEW","BLOCKED" , "ARCHIVED"]
              }
            },
            "required":["sku", "rating", "customerId", "reviewerName"]
          }
        example: |
          {
            "ratingId":"12345678912345678912345678912345",
            "sku":"Laptop",
            "rating":4,
            "reviewerName":"SYSTEM",
            "customerId":"C111111876",
            "reviewTitle":"Monitor",
            "reviewComment":"Clarity is good",
            "reviewStatus":"PUBLISHED"
          }

    responses:
      201:
        description: |
          The collection resource has been successfully created.

        headers:
          Location:
            description: |
              The Location of the new resource which was created by the request.
              The value consists of a single absolute URI.

            example: http://www.hybris.com/items/myItem
            required: true
            displayName: Location
            type: string
      400:
        description: |
          Request syntactically incorrect. Any details will be provided within the response payload.
        body:
          application/json:
            example: |
              {
                "status": 400,
                "message": "The request payload has incorrect syntax.",
                "moreInfo": "https://api.yaas.io/patterns/errortypes.html",
                "type": "bad_payload_syntax"
              }

            schema: |
              {
                "$schema":"http://json-schema.org/draft-04/schema#",
                "title":"error",
                "description":"Schema for API specified errors.",
                "type":"object",
                "properties":
                {
                  "status":
                  {
                    "type":"integer",
                    "description":"original HTTP error code, should be consistent with the response HTTP code",
                    "minimum":100,
                    "maximum":599
                  },
                  "type":
                  {
                    "type":"string",
                    "description":"classification of the error type, lower case with underscore eg validation_failure",
                    "pattern":"[a-z]+[a-z_]*[a-z]+"
                  },
                  "message":
                  {
                    "type":"string",
                    "description":"descriptive error message for debugging"
                  },
                  "moreInfo":
                  {
                    "type":"string",
                    "format":"uri",
                    "description":"link to documentation to investigate further and finding support"
                  },
                  "details":
                  {
                    "type":"array",
                    "description":"list of problems causing this error",
                    "items":
                    {
                      "$schema":"http://json-schema.org/draft-04/schema#",
                      "title":"errorDetail",
                      "description":"schema for specific error cause",
                      "type":"object",
                      "properties":
                      {
                        "field":
                        {
                          "type":"string",
                          "description":"a bean notation expression specifying the element in request data causing the error, eg product.variants[3].name, this can be empty if violation was not field specific"
                        },
                        "type":
                        {
                          "type":"string",
                          "description":"classification of the error detail type, lower case with underscore eg missing_value, this value must be always interpreted in context of the general error type.",
                          "pattern":"[a-z]+[a-z_]*[a-z]+"
                        },
                        "message":
                        {
                          "type":"string",
                          "description":"descriptive error detail message for debugging"
                        },
                        "moreInfo":
                        {
                          "type":"string",
                          "format":"uri",
                          "description":"link to documentation to investigate further and finding support for error detail"
                        }
                      },
                      "required":["type"]
                    }
                  }
                },
                "required":["status" , "type" ]
              }

      401:
        description: |
          Given request is unauthorized. Bad or expired token. Reauthenticate
          the user. Any details will be provided within the response payload.

        body:
          application/json:
            example: |
              {
                "status":401,
                "message":"Authorization: Unauthorized. Bearer TOKEN is invalid",
                "type":"insufficient_credentials",
                "moreInfo":"https://api.yaas.io/patterns/errortypes.html"
              }

            schema: |
              {
                "$schema":"http://json-schema.org/draft-04/schema#",
                "title":"error",
                "description":"Schema for API specified errors.",
                "type":"object",
                "properties":
                {
                  "status":
                  {
                    "type":"integer",
                    "description":"original HTTP error code, should be consistent with the response HTTP code",
                    "minimum":100,
                    "maximum":599
                  },
                  "type":
                  {
                    "type":"string",
                    "description":"classification of the error type, lower case with underscore eg validation_failure",
                    "pattern":"[a-z]+[a-z_]*[a-z]+"
                  },
                  "message":
                  {
                    "type":"string",
                    "description":"descriptive error message for debugging"
                  },
                  "moreInfo":
                  {
                    "type":"string",
                    "format":"uri",
                    "description":"link to documentation to investigate further and finding support"
                  },
                  "details":
                  {
                    "type":"array",
                    "description":"list of problems causing this error",
                    "items":
                    {
                      "$schema":"http://json-schema.org/draft-04/schema#",
                      "title":"errorDetail",
                      "description":"schema for specific error cause",
                      "type":"object",
                      "properties":
                      {
                        "field":
                        {
                          "type":"string",
                          "description":"a bean notation expression specifying the element in request data causing the error, eg product.variants[3].name, this can be empty if violation was not field specific"
                        },
                        "type":
                        {
                          "type":"string",
                          "description":"classification of the error detail type, lower case with underscore eg missing_value, this value must be always interpreted in context of the general error type.",
                          "pattern":"[a-z]+[a-z_]*[a-z]+"
                        },
                        "message":
                        {
                          "type":"string",
                          "description":"descriptive error detail message for debugging"
                        },
                        "moreInfo":
                        {
                          "type":"string",
                          "format":"uri",
                          "description":"link to documentation to investigate further and finding support for error detail"
                        }
                      },
                      "required":["type"]
                    }
                  }
                },
                "required":["status" , "type" ]
              }

      403:
        description: |
          Evaluated request scopes in access token are not sufficient and do not match required scopes.

        body:
          application/json:
            example: |
              {
                "status": 403,
                "message": "Given request does not have required scopes in access token. It is not authorized to perform this operation.",
                "type": "insufficient_permissions"
              }

            schema: |
              {
                "$schema":"http://json-schema.org/draft-04/schema#",
                "title":"error",
                "description":"Schema for API specified errors.",
                "type":"object",
                "properties":
                {
                  "status":
                  {
                    "type":"integer",
                    "description":"original HTTP error code, should be consistent with the response HTTP code",
                    "minimum":100,
                    "maximum":599
                  },
                  "type":
                  {
                    "type":"string",
                    "description":"classification of the error type, lower case with underscore eg validation_failure",
                    "pattern":"[a-z]+[a-z_]*[a-z]+"
                  },
                  "message":
                  {
                    "type":"string",
                    "description":"descriptive error message for debugging"
                  },
                  "moreInfo":
                  {
                    "type":"string",
                    "format":"uri",
                    "description":"link to documentation to investigate further and finding support"
                  },
                  "details":
                  {
                    "type":"array",
                    "description":"list of problems causing this error",
                    "items":
                    {
                      "$schema":"http://json-schema.org/draft-04/schema#",
                      "title":"errorDetail",
                      "description":"schema for specific error cause",
                      "type":"object",
                      "properties":
                      {
                        "field":
                        {
                          "type":"string",
                          "description":"a bean notation expression specifying the element in request data causing the error, eg product.variants[3].name, this can be empty if violation was not field specific"
                        },
                        "type":
                        {
                          "type":"string",
                          "description":"classification of the error detail type, lower case with underscore eg missing_value, this value must be always interpreted in context of the general error type.",
                          "pattern":"[a-z]+[a-z_]*[a-z]+"
                        },
                        "message":
                        {
                          "type":"string",
                          "description":"descriptive error detail message for debugging"
                        },
                        "moreInfo":
                        {
                          "type":"string",
                          "format":"uri",
                          "description":"link to documentation to investigate further and finding support for error detail"
                        }
                      },
                      "required":["type"]
                    }
                  }
                },
                "required":["status" , "type" ]
              }

      409:
        description: |
          Creation failed because there was a conflict with another resource. Any details will be provided within the response payload.

        body:
          application/json:
            example: |
              {
                "status": 409,
                "message": "The requested resource could not be created due to server-side validation.",
                "moreInfo": "https://api.yaas.io/patterns/errortypes.html",
                "type": "conflict_resource"
              }

            schema: |
              {
                "$schema":"http://json-schema.org/draft-04/schema#",
                "title":"error",
                "description":"Schema for API specified errors.",
                "type":"object",
                "properties":
                {
                  "status":
                  {
                    "type":"integer",
                    "description":"original HTTP error code, should be consistent with the response HTTP code",
                    "minimum":100,
                    "maximum":599
                  },
                  "type":
                  {
                    "type":"string",
                    "description":"classification of the error type, lower case with underscore eg validation_failure",
                    "pattern":"[a-z]+[a-z_]*[a-z]+"
                  },
                  "message":
                  {
                    "type":"string",
                    "description":"descriptive error message for debugging"
                  },
                  "moreInfo":
                  {
                    "type":"string",
                    "format":"uri",
                    "description":"link to documentation to investigate further and finding support"
                  },
                  "details":
                  {
                    "type":"array",
                    "description":"list of problems causing this error",
                    "items":
                    {
                      "$schema":"http://json-schema.org/draft-04/schema#",
                      "title":"errorDetail",
                      "description":"schema for specific error cause",
                      "type":"object",
                      "properties":
                      {
                        "field":
                        {
                          "type":"string",
                          "description":"a bean notation expression specifying the element in request data causing the error, eg product.variants[3].name, this can be empty if violation was not field specific"
                        },
                        "type":
                        {
                          "type":"string",
                          "description":"classification of the error detail type, lower case with underscore eg missing_value, this value must be always interpreted in context of the general error type.",
                          "pattern":"[a-z]+[a-z_]*[a-z]+"
                        },
                        "message":
                        {
                          "type":"string",
                          "description":"descriptive error detail message for debugging"
                        },
                        "moreInfo":
                        {
                          "type":"string",
                          "format":"uri",
                          "description":"link to documentation to investigate further and finding support for error detail"
                        }
                      },
                      "required":["type"]
                    }
                  }
                },
                "required":["status" , "type" ]
              }

      500:
        description: |
          Some server side error occurred.

        body:
          application/json:
            example: |
              {
                "status": 500,
                "message": "Something went wrong while processing the request. Please contact the administrator.",
                "moreInfo": "https://api.yaas.io/patterns/errortypes.html",
                "type": "internal_service_error"
              }

            schema: |
              {
                "$schema":"http://json-schema.org/draft-04/schema#",
                "title":"error",
                "description":"Schema for API specified errors.",
                "type":"object",
                "properties":
                {
                  "status":
                  {
                    "type":"integer",
                    "description":"original HTTP error code, should be consistent with the response HTTP code",
                    "minimum":100,
                    "maximum":599
                  },
                  "type":
                  {
                    "type":"string",
                    "description":"classification of the error type, lower case with underscore eg validation_failure",
                    "pattern":"[a-z]+[a-z_]*[a-z]+"
                  },
                  "message":
                  {
                    "type":"string",
                    "description":"descriptive error message for debugging"
                  },
                  "moreInfo":
                  {
                    "type":"string",
                    "format":"uri",
                    "description":"link to documentation to investigate further and finding support"
                  },
                  "details":
                  {
                    "type":"array",
                    "description":"list of problems causing this error",
                    "items":
                    {
                      "$schema":"http://json-schema.org/draft-04/schema#",
                      "title":"errorDetail",
                      "description":"schema for specific error cause",
                      "type":"object",
                      "properties":
                      {
                        "field":
                        {
                          "type":"string",
                          "description":"a bean notation expression specifying the element in request data causing the error, eg product.variants[3].name, this can be empty if violation was not field specific"
                        },
                        "type":
                        {
                          "type":"string",
                          "description":"classification of the error detail type, lower case with underscore eg missing_value, this value must be always interpreted in context of the general error type.",
                          "pattern":"[a-z]+[a-z_]*[a-z]+"
                        },
                        "message":
                        {
                          "type":"string",
                          "description":"descriptive error detail message for debugging"
                        },
                        "moreInfo":
                        {
                          "type":"string",
                          "format":"uri",
                          "description":"link to documentation to investigate further and finding support for error detail"
                        }
                      },
                      "required":["type"]
                    }
                  }
                },
                "required":["status" , "type" ]
              }

/ratingReviews:
  type: collection
  is: [ oauth2 ]
  description: |
    This resourceType defines the GET, POST, DELETE methods and their responses for a collection resource.

  get:
    is: [ paged, queried, sorted, projectable ]
    description: |
      Gets all Product Ratings and Reviews. Pass Product SKU as query parameter to fetch Rating and Review for a particular Product 

    headers:
      Authorization:
        type: string
        description: |
          Used to send a valid OAuth2 access token.

        example: Bearer access_token
        required: true
    queryParameters:
      fields:
        type: string
        description: |
          Contains a comma separated list of field identifiers, by which the fields of the response entities should be filtered by.
          Empty or not initialized value result in a minimal set of entity fields returned. Non-existing or invalid fields will be ignored.

        example: code,name,description
      sort:
        type: string
        description: |
          The list of comma-separated values. Property identifiers used to sort the result. By default, the column values are sorted in ascending order.
          If preceded by a minus sign (-), the values are sorted in descending order.

        example: name,-description
      q:
        type: string
        description: |
          The simple query criteria based on available fields to limit returned results or a set of modified documents.

        example: |
          species:cat breed:"Norwegian Forest Cat" weight:(>3 AND <=5) age:(3,5,6) condition:exists

        required: false
      pageNumber:
        type: integer
        description: |
          The page number to be retrieved where the size of the pages must be specified by the pageSize parameter.
          The number of the first page is 1.

        minimum: 1
        example: 1
        default: 1
        required: false
      pageSize:
        type: integer
        description: |
          The number of documents being retrieved on the page.

        minimum: 1
        example: 16
        default: 16
        required: false
    responses:
      200:
        description: Resource successfully retrieved.
        headers:
          Link:
            description: |
              Link to the current page, the next page and the previous page. Marked accordingly with *rel* **self**, *rel* **next** and *rel* **prev**. The syntax must be conform to [RFC-5988](https://tools.ietf.org/html/rfc5988).
              The link to the current page (**self**) is required and must be provided always.
              The link to the next page (**next**) is optional. If not present, the next page is not available, as the current page is the last page of the result.
              The link to the previous page (**prev**) is optional. If not present, the previous page is not available, as the current page is the first page of the result.

            example: |
              <http://sample.com?pageNumber=2&pageSize=10>; rel="self", <http://sample.com?pageNumber=3&pageSize=10>; rel="next"
            required: true
            repeat: true
            type: string
            displayName: Link
        body:
          application/json:
            schema: |
              {
                "$schema": "http://json-schema.org/draft-04/schema (http://json-schema.org/draft-04/schema)#",
                "title":"Product Rating & Reviews List",
                "type":"array",
                "items":
                {
                  "$ref":"ratingReview"
                }
              } 
      400:
        description: |
          Request was syntactically incorrect. Any details will be provided within the response payload.

        body:
          application/json:
            example: |
              {
                "status": 400,
                "message": "There are validation problems, see details section for more information",
                "moreInfo": "https://api.yaas.io/patterns/errortypes.html",
                "type": "validation_violation",
                "details": [
                  {
                    "field": "pageNumber",
                    "message": "must be a positive number",
                    "type": "invalid_query_parameter"
                  }
                ]
              }

            schema: |
              {
                "$schema":"http://json-schema.org/draft-04/schema#",
                "title":"error",
                "description":"Schema for API specified errors.",
                "type":"object",
                "properties":
                {
                  "status":
                  {
                    "type":"integer",
                    "description":"original HTTP error code, should be consistent with the response HTTP code",
                    "minimum":100,
                    "maximum":599
                  },
                  "type":
                  {
                    "type":"string",
                    "description":"classification of the error type, lower case with underscore eg validation_failure",
                    "pattern":"[a-z]+[a-z_]*[a-z]+"
                  },
                  "message":
                  {
                    "type":"string",
                    "description":"descriptive error message for debugging"
                  },
                  "moreInfo":
                  {
                    "type":"string",
                    "format":"uri",
                    "description":"link to documentation to investigate further and finding support"
                  },
                  "details":
                  {
                    "type":"array",
                    "description":"list of problems causing this error",
                    "items":
                    {
                      "$schema":"http://json-schema.org/draft-04/schema#",
                      "title":"errorDetail",
                      "description":"schema for specific error cause",
                      "type":"object",
                      "properties":
                      {
                        "field":
                        {
                          "type":"string",
                          "description":"a bean notation expression specifying the element in request data causing the error, eg product.variants[3].name, this can be empty if violation was not field specific"
                        },
                        "type":
                        {
                          "type":"string",
                          "description":"classification of the error detail type, lower case with underscore eg missing_value, this value must be always interpreted in context of the general error type.",
                          "pattern":"[a-z]+[a-z_]*[a-z]+"
                        },
                        "message":
                        {
                          "type":"string",
                          "description":"descriptive error detail message for debugging"
                        },
                        "moreInfo":
                        {
                          "type":"string",
                          "format":"uri",
                          "description":"link to documentation to investigate further and finding support for error detail"
                        }
                      },
                      "required":["type"]
                    }
                  }
                },
                "required":["status" , "type" ]
              }

      401:
        description: |
          Given request is unauthorized. Bad or expired token. Reauthenticate
          the user. Any details will be provided within the response payload.

        body:
          application/json:
            example: |
              {
                "status":401,
                "message":"Authorization: Unauthorized. Bearer TOKEN is invalid",
                "type":"insufficient_credentials",
                "moreInfo":"https://api.yaas.io/patterns/errortypes.html"
              }

            schema: |
              {
                "$schema":"http://json-schema.org/draft-04/schema#",
                "title":"error",
                "description":"Schema for API specified errors.",
                "type":"object",
                "properties":
                {
                  "status":
                  {
                    "type":"integer",
                    "description":"original HTTP error code, should be consistent with the response HTTP code",
                    "minimum":100,
                    "maximum":599
                  },
                  "type":
                  {
                    "type":"string",
                    "description":"classification of the error type, lower case with underscore eg validation_failure",
                    "pattern":"[a-z]+[a-z_]*[a-z]+"
                  },
                  "message":
                  {
                    "type":"string",
                    "description":"descriptive error message for debugging"
                  },
                  "moreInfo":
                  {
                    "type":"string",
                    "format":"uri",
                    "description":"link to documentation to investigate further and finding support"
                  },
                  "details":
                  {
                    "type":"array",
                    "description":"list of problems causing this error",
                    "items":
                    {
                      "$schema":"http://json-schema.org/draft-04/schema#",
                      "title":"errorDetail",
                      "description":"schema for specific error cause",
                      "type":"object",
                      "properties":
                      {
                        "field":
                        {
                          "type":"string",
                          "description":"a bean notation expression specifying the element in request data causing the error, eg product.variants[3].name, this can be empty if violation was not field specific"
                        },
                        "type":
                        {
                          "type":"string",
                          "description":"classification of the error detail type, lower case with underscore eg missing_value, this value must be always interpreted in context of the general error type.",
                          "pattern":"[a-z]+[a-z_]*[a-z]+"
                        },
                        "message":
                        {
                          "type":"string",
                          "description":"descriptive error detail message for debugging"
                        },
                        "moreInfo":
                        {
                          "type":"string",
                          "format":"uri",
                          "description":"link to documentation to investigate further and finding support for error detail"
                        }
                      },
                      "required":["type"]
                    }
                  }
                },
                "required":["status" , "type" ]
              }

      403:
        description: |
          Evaluated request scopes in access token are not sufficient and do not match required scopes.

        body:
          application/json:
            example: |
              {
                "status": 403,
                "message": "Given request does not have required scopes in access token. It is not authorized to perform this operation.",
                "type": "insufficient_permissions"
              }

            schema: |
              {
                "$schema":"http://json-schema.org/draft-04/schema#",
                "title":"error",
                "description":"Schema for API specified errors.",
                "type":"object",
                "properties":
                {
                  "status":
                  {
                    "type":"integer",
                    "description":"original HTTP error code, should be consistent with the response HTTP code",
                    "minimum":100,
                    "maximum":599
                  },
                  "type":
                  {
                    "type":"string",
                    "description":"classification of the error type, lower case with underscore eg validation_failure",
                    "pattern":"[a-z]+[a-z_]*[a-z]+"
                  },
                  "message":
                  {
                    "type":"string",
                    "description":"descriptive error message for debugging"
                  },
                  "moreInfo":
                  {
                    "type":"string",
                    "format":"uri",
                    "description":"link to documentation to investigate further and finding support"
                  },
                  "details":
                  {
                    "type":"array",
                    "description":"list of problems causing this error",
                    "items":
                    {
                      "$schema":"http://json-schema.org/draft-04/schema#",
                      "title":"errorDetail",
                      "description":"schema for specific error cause",
                      "type":"object",
                      "properties":
                      {
                        "field":
                        {
                          "type":"string",
                          "description":"a bean notation expression specifying the element in request data causing the error, eg product.variants[3].name, this can be empty if violation was not field specific"
                        },
                        "type":
                        {
                          "type":"string",
                          "description":"classification of the error detail type, lower case with underscore eg missing_value, this value must be always interpreted in context of the general error type.",
                          "pattern":"[a-z]+[a-z_]*[a-z]+"
                        },
                        "message":
                        {
                          "type":"string",
                          "description":"descriptive error detail message for debugging"
                        },
                        "moreInfo":
                        {
                          "type":"string",
                          "format":"uri",
                          "description":"link to documentation to investigate further and finding support for error detail"
                        }
                      },
                      "required":["type"]
                    }
                  }
                },
                "required":["status" , "type" ]
              }

      500:
        description: |
          Some server side error occurred.

        body:
          application/json:
            example: |
              {
                "status": 500,
                "message": "Something went wrong while processing the request. Please contact the administrator.",
                "moreInfo": "https://api.yaas.io/patterns/errortypes.html",
                "type": "internal_service_error"
              }

            schema: |
              {
                "$schema":"http://json-schema.org/draft-04/schema#",
                "title":"error",
                "description":"Schema for API specified errors.",
                "type":"object",
                "properties":
                {
                  "status":
                  {
                    "type":"integer",
                    "description":"original HTTP error code, should be consistent with the response HTTP code",
                    "minimum":100,
                    "maximum":599
                  },
                  "type":
                  {
                    "type":"string",
                    "description":"classification of the error type, lower case with underscore eg validation_failure",
                    "pattern":"[a-z]+[a-z_]*[a-z]+"
                  },
                  "message":
                  {
                    "type":"string",
                    "description":"descriptive error message for debugging"
                  },
                  "moreInfo":
                  {
                    "type":"string",
                    "format":"uri",
                    "description":"link to documentation to investigate further and finding support"
                  },
                  "details":
                  {
                    "type":"array",
                    "description":"list of problems causing this error",
                    "items":
                    {
                      "$schema":"http://json-schema.org/draft-04/schema#",
                      "title":"errorDetail",
                      "description":"schema for specific error cause",
                      "type":"object",
                      "properties":
                      {
                        "field":
                        {
                          "type":"string",
                          "description":"a bean notation expression specifying the element in request data causing the error, eg product.variants[3].name, this can be empty if violation was not field specific"
                        },
                        "type":
                        {
                          "type":"string",
                          "description":"classification of the error detail type, lower case with underscore eg missing_value, this value must be always interpreted in context of the general error type.",
                          "pattern":"[a-z]+[a-z_]*[a-z]+"
                        },
                        "message":
                        {
                          "type":"string",
                          "description":"descriptive error detail message for debugging"
                        },
                        "moreInfo":
                        {
                          "type":"string",
                          "format":"uri",
                          "description":"link to documentation to investigate further and finding support for error detail"
                        }
                      },
                      "required":["type"]
                    }
                  }
                },
                "required":["status" , "type" ]
              }

  post:
    description: |
      <b>**DO NOT USE**</b>. Creates a Rating and Review for Product. Use <strong>/ratingReviewMashup</strong> to provide Rating and Review

      Accepted scopes:

        *  'sap.loyadvocacy_manage' - Required to post Rating and Review

    headers:
      Authorization:
        type: string
        description: |
          Used to send a valid OAuth2 access token.

        example: Bearer access_token
        required: true
    body:
      application/json:
        schema: |
          {
            "$schema": "http://json-schema.org/draft-04/schema#",
            "title":"RatingReview",
            "type":"object",
            "properties":
            {
              "ratingId":
              {
                "type":"string",
                "maxLength": 32
              },
              "sku":
              {
                "type":"string",
                "maxLength": 32
              }, 
              "rating":
              {
                "type":"integer",
                "minimum": 1,
                "maximum": 5
              },
              "customerId":
              {
                "type":"string"
              },
              "reviewerName":
              {
                "type":"string",
                "maxLength": 32
              },
              "reviewTitle":
              { 
                "type":"string",
                "maxLength": 50
              },
              "reviewComment":
              {
                "type":"string",
                "maxLength": 500
              },
              "customAttributes":
              {
                "type":"array",
                "items":
                {
                  "$ref":"customAttr"
                }
              },
              "reviewStatus":
              {
                 "enum": [ "PUBLISHED", "NEW","BLOCKED" , "ARCHIVED"]
              }
            },
            "required":["sku", "rating", "customerId", "reviewerName"]
          }
    responses:
      201:
        description: |
          The collection resource has been successfully created.

        headers:
          Location:
            description: |
              The Location of the new resource which was created by the request.
              The value consists of a single absolute URI.

            example: http://www.hybris.com/items/myItem
            required: true
            displayName: Location
            type: string
      400:
        description: |
          Request syntactically incorrect. Any details will be provided within the response payload.
        body:
          application/json:
            example: |
              {
                "status": 400,
                "message": "The request payload has incorrect syntax.",
                "moreInfo": "https://api.yaas.io/patterns/errortypes.html",
                "type": "bad_payload_syntax"
              }

            schema: |
              {
                "$schema":"http://json-schema.org/draft-04/schema#",
                "title":"error",
                "description":"Schema for API specified errors.",
                "type":"object",
                "properties":
                {
                  "status":
                  {
                    "type":"integer",
                    "description":"original HTTP error code, should be consistent with the response HTTP code",
                    "minimum":100,
                    "maximum":599
                  },
                  "type":
                  {
                    "type":"string",
                    "description":"classification of the error type, lower case with underscore eg validation_failure",
                    "pattern":"[a-z]+[a-z_]*[a-z]+"
                  },
                  "message":
                  {
                    "type":"string",
                    "description":"descriptive error message for debugging"
                  },
                  "moreInfo":
                  {
                    "type":"string",
                    "format":"uri",
                    "description":"link to documentation to investigate further and finding support"
                  },
                  "details":
                  {
                    "type":"array",
                    "description":"list of problems causing this error",
                    "items":
                    {
                      "$schema":"http://json-schema.org/draft-04/schema#",
                      "title":"errorDetail",
                      "description":"schema for specific error cause",
                      "type":"object",
                      "properties":
                      {
                        "field":
                        {
                          "type":"string",
                          "description":"a bean notation expression specifying the element in request data causing the error, eg product.variants[3].name, this can be empty if violation was not field specific"
                        },
                        "type":
                        {
                          "type":"string",
                          "description":"classification of the error detail type, lower case with underscore eg missing_value, this value must be always interpreted in context of the general error type.",
                          "pattern":"[a-z]+[a-z_]*[a-z]+"
                        },
                        "message":
                        {
                          "type":"string",
                          "description":"descriptive error detail message for debugging"
                        },
                        "moreInfo":
                        {
                          "type":"string",
                          "format":"uri",
                          "description":"link to documentation to investigate further and finding support for error detail"
                        }
                      },
                      "required":["type"]
                    }
                  }
                },
                "required":["status" , "type" ]
              }

      401:
        description: |
          Given request is unauthorized. Bad or expired token. Reauthenticate
          the user. Any details will be provided within the response payload.

        body:
          application/json:
            example: |
              {
                "status":401,
                "message":"Authorization: Unauthorized. Bearer TOKEN is invalid",
                "type":"insufficient_credentials",
                "moreInfo":"https://api.yaas.io/patterns/errortypes.html"
              }

            schema: |
              {
                "$schema":"http://json-schema.org/draft-04/schema#",
                "title":"error",
                "description":"Schema for API specified errors.",
                "type":"object",
                "properties":
                {
                  "status":
                  {
                    "type":"integer",
                    "description":"original HTTP error code, should be consistent with the response HTTP code",
                    "minimum":100,
                    "maximum":599
                  },
                  "type":
                  {
                    "type":"string",
                    "description":"classification of the error type, lower case with underscore eg validation_failure",
                    "pattern":"[a-z]+[a-z_]*[a-z]+"
                  },
                  "message":
                  {
                    "type":"string",
                    "description":"descriptive error message for debugging"
                  },
                  "moreInfo":
                  {
                    "type":"string",
                    "format":"uri",
                    "description":"link to documentation to investigate further and finding support"
                  },
                  "details":
                  {
                    "type":"array",
                    "description":"list of problems causing this error",
                    "items":
                    {
                      "$schema":"http://json-schema.org/draft-04/schema#",
                      "title":"errorDetail",
                      "description":"schema for specific error cause",
                      "type":"object",
                      "properties":
                      {
                        "field":
                        {
                          "type":"string",
                          "description":"a bean notation expression specifying the element in request data causing the error, eg product.variants[3].name, this can be empty if violation was not field specific"
                        },
                        "type":
                        {
                          "type":"string",
                          "description":"classification of the error detail type, lower case with underscore eg missing_value, this value must be always interpreted in context of the general error type.",
                          "pattern":"[a-z]+[a-z_]*[a-z]+"
                        },
                        "message":
                        {
                          "type":"string",
                          "description":"descriptive error detail message for debugging"
                        },
                        "moreInfo":
                        {
                          "type":"string",
                          "format":"uri",
                          "description":"link to documentation to investigate further and finding support for error detail"
                        }
                      },
                      "required":["type"]
                    }
                  }
                },
                "required":["status" , "type" ]
              }

      403:
        description: |
          Evaluated request scopes in access token are not sufficient and do not match required scopes.

        body:
          application/json:
            example: |
              {
                "status": 403,
                "message": "Given request does not have required scopes in access token. It is not authorized to perform this operation.",
                "type": "insufficient_permissions"
              }

            schema: |
              {
                "$schema":"http://json-schema.org/draft-04/schema#",
                "title":"error",
                "description":"Schema for API specified errors.",
                "type":"object",
                "properties":
                {
                  "status":
                  {
                    "type":"integer",
                    "description":"original HTTP error code, should be consistent with the response HTTP code",
                    "minimum":100,
                    "maximum":599
                  },
                  "type":
                  {
                    "type":"string",
                    "description":"classification of the error type, lower case with underscore eg validation_failure",
                    "pattern":"[a-z]+[a-z_]*[a-z]+"
                  },
                  "message":
                  {
                    "type":"string",
                    "description":"descriptive error message for debugging"
                  },
                  "moreInfo":
                  {
                    "type":"string",
                    "format":"uri",
                    "description":"link to documentation to investigate further and finding support"
                  },
                  "details":
                  {
                    "type":"array",
                    "description":"list of problems causing this error",
                    "items":
                    {
                      "$schema":"http://json-schema.org/draft-04/schema#",
                      "title":"errorDetail",
                      "description":"schema for specific error cause",
                      "type":"object",
                      "properties":
                      {
                        "field":
                        {
                          "type":"string",
                          "description":"a bean notation expression specifying the element in request data causing the error, eg product.variants[3].name, this can be empty if violation was not field specific"
                        },
                        "type":
                        {
                          "type":"string",
                          "description":"classification of the error detail type, lower case with underscore eg missing_value, this value must be always interpreted in context of the general error type.",
                          "pattern":"[a-z]+[a-z_]*[a-z]+"
                        },
                        "message":
                        {
                          "type":"string",
                          "description":"descriptive error detail message for debugging"
                        },
                        "moreInfo":
                        {
                          "type":"string",
                          "format":"uri",
                          "description":"link to documentation to investigate further and finding support for error detail"
                        }
                      },
                      "required":["type"]
                    }
                  }
                },
                "required":["status" , "type" ]
              }

      409:
        description: |
          Creation failed because there was a conflict with another resource. Any details will be provided within the response payload.

        body:
          application/json:
            example: |
              {
                "status": 409,
                "message": "The requested resource could not be created due to server-side validation.",
                "moreInfo": "https://api.yaas.io/patterns/errortypes.html",
                "type": "conflict_resource"
              }

            schema: |
              {
                "$schema":"http://json-schema.org/draft-04/schema#",
                "title":"error",
                "description":"Schema for API specified errors.",
                "type":"object",
                "properties":
                {
                  "status":
                  {
                    "type":"integer",
                    "description":"original HTTP error code, should be consistent with the response HTTP code",
                    "minimum":100,
                    "maximum":599
                  },
                  "type":
                  {
                    "type":"string",
                    "description":"classification of the error type, lower case with underscore eg validation_failure",
                    "pattern":"[a-z]+[a-z_]*[a-z]+"
                  },
                  "message":
                  {
                    "type":"string",
                    "description":"descriptive error message for debugging"
                  },
                  "moreInfo":
                  {
                    "type":"string",
                    "format":"uri",
                    "description":"link to documentation to investigate further and finding support"
                  },
                  "details":
                  {
                    "type":"array",
                    "description":"list of problems causing this error",
                    "items":
                    {
                      "$schema":"http://json-schema.org/draft-04/schema#",
                      "title":"errorDetail",
                      "description":"schema for specific error cause",
                      "type":"object",
                      "properties":
                      {
                        "field":
                        {
                          "type":"string",
                          "description":"a bean notation expression specifying the element in request data causing the error, eg product.variants[3].name, this can be empty if violation was not field specific"
                        },
                        "type":
                        {
                          "type":"string",
                          "description":"classification of the error detail type, lower case with underscore eg missing_value, this value must be always interpreted in context of the general error type.",
                          "pattern":"[a-z]+[a-z_]*[a-z]+"
                        },
                        "message":
                        {
                          "type":"string",
                          "description":"descriptive error detail message for debugging"
                        },
                        "moreInfo":
                        {
                          "type":"string",
                          "format":"uri",
                          "description":"link to documentation to investigate further and finding support for error detail"
                        }
                      },
                      "required":["type"]
                    }
                  }
                },
                "required":["status" , "type" ]
              }

      500:
        description: |
          Some server side error occurred.

        body:
          application/json:
            example: |
              {
                "status": 500,
                "message": "Something went wrong while processing the request. Please contact the administrator.",
                "moreInfo": "https://api.yaas.io/patterns/errortypes.html",
                "type": "internal_service_error"
              }

            schema: |
              {
                "$schema":"http://json-schema.org/draft-04/schema#",
                "title":"error",
                "description":"Schema for API specified errors.",
                "type":"object",
                "properties":
                {
                  "status":
                  {
                    "type":"integer",
                    "description":"original HTTP error code, should be consistent with the response HTTP code",
                    "minimum":100,
                    "maximum":599
                  },
                  "type":
                  {
                    "type":"string",
                    "description":"classification of the error type, lower case with underscore eg validation_failure",
                    "pattern":"[a-z]+[a-z_]*[a-z]+"
                  },
                  "message":
                  {
                    "type":"string",
                    "description":"descriptive error message for debugging"
                  },
                  "moreInfo":
                  {
                    "type":"string",
                    "format":"uri",
                    "description":"link to documentation to investigate further and finding support"
                  },
                  "details":
                  {
                    "type":"array",
                    "description":"list of problems causing this error",
                    "items":
                    {
                      "$schema":"http://json-schema.org/draft-04/schema#",
                      "title":"errorDetail",
                      "description":"schema for specific error cause",
                      "type":"object",
                      "properties":
                      {
                        "field":
                        {
                          "type":"string",
                          "description":"a bean notation expression specifying the element in request data causing the error, eg product.variants[3].name, this can be empty if violation was not field specific"
                        },
                        "type":
                        {
                          "type":"string",
                          "description":"classification of the error detail type, lower case with underscore eg missing_value, this value must be always interpreted in context of the general error type.",
                          "pattern":"[a-z]+[a-z_]*[a-z]+"
                        },
                        "message":
                        {
                          "type":"string",
                          "description":"descriptive error detail message for debugging"
                        },
                        "moreInfo":
                        {
                          "type":"string",
                          "format":"uri",
                          "description":"link to documentation to investigate further and finding support for error detail"
                        }
                      },
                      "required":["type"]
                    }
                  }
                },
                "required":["status" , "type" ]
              }

  /aggr:
    is: [ oauth2, queried, countable ]
    get:
      description: |
        Gets Average, Sum and Count of Rating and Review. Pass product SKU as a part query parameters to fetch average for a given product

      headers:
        Authorization:
          type: string
          description: |
            Used to send a valid OAuth2 access token.

          example: Bearer access_token
          required: true
      queryParameters:
        totalCount:
          type: boolean
          description: |
            This parameter requests to return the total number of object in the collection fulfilling
            the criteria together with the response. This number will be returned in the 'hybris-count' 
            header.

          example: true
          required: false
        q:
          type: string
          description: |
            The simple query criteria based on available fields to limit returned results or a set of modified documents.

          example: |
            species:cat breed:"Norwegian Forest Cat" weight:(>3 AND <=5) age:(3,5,6) condition:exists

          required: false
        sum:
          type: string
          description: List of comma separated attributes for Sum
          example: attribute1, attribute2
        avg:
          type: string
          description: List of comma separated attributes for Sum
          example: attribute1, attribute2
      responses:
        200:
          headers:
            hybris-count:
              description: |
                The total number of objects that fulfil the criteria.

              type: integer
              example: 1000
              required: false
              displayName: hybris-count
        400:
          description: |
            Request syntactically incorrect. Any details will be provided within the response payload.
          body:
            application/json:
              example: |
                {
                  "status": 400,
                  "message": "There are validation problems, see details section for more information",
                  "moreInfo": "https://api.yaas.io/patterns/errortypes.html",
                  "type": "validation_violation",
                  "details": [
                    {
                     "field": "totalCount",
                      "message": "must be a boolean",
                      "type": "invalid_query_parameter"
                    }
                  ]
                }
              schema: |
                {
                  "$schema":"http://json-schema.org/draft-04/schema#",
                  "title":"error",
                  "description":"Schema for API specified errors.",
                  "type":"object",
                  "properties":
                  {
                    "status":
                    {
                      "type":"integer",
                      "description":"original HTTP error code, should be consistent with the response HTTP code",
                      "minimum":100,
                      "maximum":599
                    },
                    "type":
                    {
                      "type":"string",
                      "description":"classification of the error type, lower case with underscore eg validation_failure",
                      "pattern":"[a-z]+[a-z_]*[a-z]+"
                    },
                    "message":
                    {
                      "type":"string",
                      "description":"descriptive error message for debugging"
                    },
                    "moreInfo":
                    {
                      "type":"string",
                      "format":"uri",
                      "description":"link to documentation to investigate further and finding support"
                    },
                    "details":
                    {
                      "type":"array",
                      "description":"list of problems causing this error",
                      "items":
                      {
                        "$schema":"http://json-schema.org/draft-04/schema#",
                        "title":"errorDetail",
                        "description":"schema for specific error cause",
                        "type":"object",
                        "properties":
                        {
                          "field":
                          {
                            "type":"string",
                            "description":"a bean notation expression specifying the element in request data causing the error, eg product.variants[3].name, this can be empty if violation was not field specific"
                          },
                          "type":
                          {
                            "type":"string",
                            "description":"classification of the error detail type, lower case with underscore eg missing_value, this value must be always interpreted in context of the general error type.",
                            "pattern":"[a-z]+[a-z_]*[a-z]+"
                          },
                          "message":
                          {
                            "type":"string",
                            "description":"descriptive error detail message for debugging"
                          },
                          "moreInfo":
                          {
                            "type":"string",
                            "format":"uri",
                            "description":"link to documentation to investigate further and finding support for error detail"
                          }
                        },
                        "required":["type"]
                      }
                    }
                  },
                  "required":["status" , "type" ]
                }

        401:
          description: |
            Given request is unauthorized. Bad or expired token. Reauthenticate
            the user. Any details will be provided within the response payload.

          body:
            application/json:
              example: |
                {
                  "status":401,
                  "message":"Authorization: Unauthorized. Bearer TOKEN is invalid",
                  "type":"insufficient_credentials",
                  "moreInfo":"https://api.yaas.io/patterns/errortypes.html"
                }

              schema: |
                {
                  "$schema":"http://json-schema.org/draft-04/schema#",
                  "title":"error",
                  "description":"Schema for API specified errors.",
                  "type":"object",
                  "properties":
                  {
                    "status":
                    {
                      "type":"integer",
                      "description":"original HTTP error code, should be consistent with the response HTTP code",
                      "minimum":100,
                      "maximum":599
                    },
                    "type":
                    {
                      "type":"string",
                      "description":"classification of the error type, lower case with underscore eg validation_failure",
                      "pattern":"[a-z]+[a-z_]*[a-z]+"
                    },
                    "message":
                    {
                      "type":"string",
                      "description":"descriptive error message for debugging"
                    },
                    "moreInfo":
                    {
                      "type":"string",
                      "format":"uri",
                      "description":"link to documentation to investigate further and finding support"
                    },
                    "details":
                    {
                      "type":"array",
                      "description":"list of problems causing this error",
                      "items":
                      {
                        "$schema":"http://json-schema.org/draft-04/schema#",
                        "title":"errorDetail",
                        "description":"schema for specific error cause",
                        "type":"object",
                        "properties":
                        {
                          "field":
                          {
                            "type":"string",
                            "description":"a bean notation expression specifying the element in request data causing the error, eg product.variants[3].name, this can be empty if violation was not field specific"
                          },
                          "type":
                          {
                            "type":"string",
                            "description":"classification of the error detail type, lower case with underscore eg missing_value, this value must be always interpreted in context of the general error type.",
                            "pattern":"[a-z]+[a-z_]*[a-z]+"
                          },
                          "message":
                          {
                            "type":"string",
                            "description":"descriptive error detail message for debugging"
                          },
                          "moreInfo":
                          {
                            "type":"string",
                            "format":"uri",
                            "description":"link to documentation to investigate further and finding support for error detail"
                          }
                        },
                        "required":["type"]
                      }
                    }
                  },
                  "required":["status" , "type" ]
                }

        403:
          description: |
            Evaluated request scopes in access token are not sufficient and do not match required scopes.

          body:
            application/json:
              example: |
                {
                  "status": 403,
                  "message": "Given request does not have required scopes in access token. It is not authorized to perform this operation.",
                  "type": "insufficient_permissions"
                }

              schema: |
                {
                  "$schema":"http://json-schema.org/draft-04/schema#",
                  "title":"error",
                  "description":"Schema for API specified errors.",
                  "type":"object",
                  "properties":
                  {
                    "status":
                    {
                      "type":"integer",
                      "description":"original HTTP error code, should be consistent with the response HTTP code",
                      "minimum":100,
                      "maximum":599
                    },
                    "type":
                    {
                      "type":"string",
                      "description":"classification of the error type, lower case with underscore eg validation_failure",
                      "pattern":"[a-z]+[a-z_]*[a-z]+"
                    },
                    "message":
                    {
                      "type":"string",
                      "description":"descriptive error message for debugging"
                    },
                    "moreInfo":
                    {
                      "type":"string",
                      "format":"uri",
                      "description":"link to documentation to investigate further and finding support"
                    },
                    "details":
                    {
                      "type":"array",
                      "description":"list of problems causing this error",
                      "items":
                      {
                        "$schema":"http://json-schema.org/draft-04/schema#",
                        "title":"errorDetail",
                        "description":"schema for specific error cause",
                        "type":"object",
                        "properties":
                        {
                          "field":
                          {
                            "type":"string",
                            "description":"a bean notation expression specifying the element in request data causing the error, eg product.variants[3].name, this can be empty if violation was not field specific"
                          },
                          "type":
                          {
                            "type":"string",
                            "description":"classification of the error detail type, lower case with underscore eg missing_value, this value must be always interpreted in context of the general error type.",
                            "pattern":"[a-z]+[a-z_]*[a-z]+"
                          },
                          "message":
                          {
                            "type":"string",
                            "description":"descriptive error detail message for debugging"
                          },
                          "moreInfo":
                          {
                            "type":"string",
                            "format":"uri",
                            "description":"link to documentation to investigate further and finding support for error detail"
                          }
                        },
                        "required":["type"]
                      }
                    }
                  },
                  "required":["status" , "type" ]
                }

  /{ratingReviewId}:
    uriParameters:
      ratingReviewId:
        type: string
        required: true
    type: element
    is: [ oauth2 ]
    description: |
      This resource type defines the GET, PUT, DELETE methods and their responses for a single element resource.

    get:
      description: |
        Gets a specific Product Rating and Review based on the ratingId provided

      headers:
        Authorization:
          type: string
          description: |
            Used to send a valid OAuth2 access token.

          example: Bearer access_token
          required: true
      responses:
        200:
          description: ratingReview successfully retrieved.
          body:
            application/json:
              schema: |
                {
                  "$schema": "http://json-schema.org/draft-04/schema#",
                  "title":"RatingReview",
                  "type":"object",
                  "properties":
                  {
                    "ratingId":
                    {
                      "type":"string",
                      "maxLength": 32
                    },
                    "sku":
                    {
                      "type":"string",
                      "maxLength": 32
                    }, 
                    "rating":
                    {
                      "type":"integer",
                      "minimum": 1,
                      "maximum": 5
                    },
                    "customerId":
                    {
                      "type":"string"
                    },
                    "reviewerName":
                    {
                      "type":"string",
                      "maxLength": 32
                    },
                    "reviewTitle":
                    { 
                      "type":"string",
                      "maxLength": 50
                    },
                    "reviewComment":
                    {
                      "type":"string",
                      "maxLength": 500
                    },
                    "customAttributes":
                    {
                      "type":"array",
                      "items":
                      {
                        "$ref":"customAttr"
                      }
                    },
                    "reviewStatus":
                    {
                       "enum": [ "PUBLISHED", "NEW","BLOCKED" , "ARCHIVED"]
                    }
                  },
                  "required":["sku", "rating", "customerId", "reviewerName"]
                }
              example: |
                {
                  "ratingId":"12345678912345678912345678912345",
                  "sku":"Laptop",
                  "rating":4,
                  "reviewerName":"SYSTEM",
                  "customerId":"C111111876",
                  "reviewTitle":"Monitor",
                  "reviewComment":"Clarity is good",
                  "reviewStatus":"Published"
                }

        401:
          description: |
            Given request is unauthorized. Bad or expired token. Reauthenticate
            the user. Any details will be provided within the response payload.

          body:
            application/json:
              example: |
                {
                  "status":401,
                  "message":"Authorization: Unauthorized. Bearer TOKEN is invalid",
                  "type":"insufficient_credentials",
                  "moreInfo":"https://api.yaas.io/patterns/errortypes.html"
                }

              schema: |
                {
                  "$schema":"http://json-schema.org/draft-04/schema#",
                  "title":"error",
                  "description":"Schema for API specified errors.",
                  "type":"object",
                  "properties":
                  {
                    "status":
                    {
                      "type":"integer",
                      "description":"original HTTP error code, should be consistent with the response HTTP code",
                      "minimum":100,
                      "maximum":599
                    },
                    "type":
                    {
                      "type":"string",
                      "description":"classification of the error type, lower case with underscore eg validation_failure",
                      "pattern":"[a-z]+[a-z_]*[a-z]+"
                    },
                    "message":
                    {
                      "type":"string",
                      "description":"descriptive error message for debugging"
                    },
                    "moreInfo":
                    {
                      "type":"string",
                      "format":"uri",
                      "description":"link to documentation to investigate further and finding support"
                    },
                    "details":
                    {
                      "type":"array",
                      "description":"list of problems causing this error",
                      "items":
                      {
                        "$schema":"http://json-schema.org/draft-04/schema#",
                        "title":"errorDetail",
                        "description":"schema for specific error cause",
                        "type":"object",
                        "properties":
                        {
                          "field":
                          {
                            "type":"string",
                            "description":"a bean notation expression specifying the element in request data causing the error, eg product.variants[3].name, this can be empty if violation was not field specific"
                          },
                          "type":
                          {
                            "type":"string",
                            "description":"classification of the error detail type, lower case with underscore eg missing_value, this value must be always interpreted in context of the general error type.",
                            "pattern":"[a-z]+[a-z_]*[a-z]+"
                          },
                          "message":
                          {
                            "type":"string",
                            "description":"descriptive error detail message for debugging"
                          },
                          "moreInfo":
                          {
                            "type":"string",
                            "format":"uri",
                            "description":"link to documentation to investigate further and finding support for error detail"
                          }
                        },
                        "required":["type"]
                      }
                    }
                  },
                  "required":["status" , "type" ]
                }

        403:
          description: |
            Evaluated request scopes in access token are not sufficient and do not match required scopes.

          body:
            application/json:
              example: |
                {
                  "status": 403,
                  "message": "Given request does not have required scopes in access token. It is not authorized to perform this operation.",
                  "type": "insufficient_permissions"
                }

              schema: |
                {
                  "$schema":"http://json-schema.org/draft-04/schema#",
                  "title":"error",
                  "description":"Schema for API specified errors.",
                  "type":"object",
                  "properties":
                  {
                    "status":
                    {
                      "type":"integer",
                      "description":"original HTTP error code, should be consistent with the response HTTP code",
                      "minimum":100,
                      "maximum":599
                    },
                    "type":
                    {
                      "type":"string",
                      "description":"classification of the error type, lower case with underscore eg validation_failure",
                      "pattern":"[a-z]+[a-z_]*[a-z]+"
                    },
                    "message":
                    {
                      "type":"string",
                      "description":"descriptive error message for debugging"
                    },
                    "moreInfo":
                    {
                      "type":"string",
                      "format":"uri",
                      "description":"link to documentation to investigate further and finding support"
                    },
                    "details":
                    {
                      "type":"array",
                      "description":"list of problems causing this error",
                      "items":
                      {
                        "$schema":"http://json-schema.org/draft-04/schema#",
                        "title":"errorDetail",
                        "description":"schema for specific error cause",
                        "type":"object",
                        "properties":
                        {
                          "field":
                          {
                            "type":"string",
                            "description":"a bean notation expression specifying the element in request data causing the error, eg product.variants[3].name, this can be empty if violation was not field specific"
                          },
                          "type":
                          {
                            "type":"string",
                            "description":"classification of the error detail type, lower case with underscore eg missing_value, this value must be always interpreted in context of the general error type.",
                            "pattern":"[a-z]+[a-z_]*[a-z]+"
                          },
                          "message":
                          {
                            "type":"string",
                            "description":"descriptive error detail message for debugging"
                          },
                          "moreInfo":
                          {
                            "type":"string",
                            "format":"uri",
                            "description":"link to documentation to investigate further and finding support for error detail"
                          }
                        },
                        "required":["type"]
                      }
                    }
                  },
                  "required":["status" , "type" ]
                }

        404:
          description: |
            The requested resource does not exist.

          body:
            application/json:
              example: |
                {
                  "status": 404,
                  "message": "The requested URI does not map to a single element resource.",
                  "moreInfo": "https://api.yaas.io/patterns/errortypes.html",
                  "type": "element_resource_non_existing"
                }

              schema: |
                {
                  "$schema":"http://json-schema.org/draft-04/schema#",
                  "title":"error",
                  "description":"Schema for API specified errors.",
                  "type":"object",
                  "properties":
                  {
                    "status":
                    {
                      "type":"integer",
                      "description":"original HTTP error code, should be consistent with the response HTTP code",
                      "minimum":100,
                      "maximum":599
                    },
                    "type":
                    {
                      "type":"string",
                      "description":"classification of the error type, lower case with underscore eg validation_failure",
                      "pattern":"[a-z]+[a-z_]*[a-z]+"
                    },
                    "message":
                    {
                      "type":"string",
                      "description":"descriptive error message for debugging"
                    },
                    "moreInfo":
                    {
                      "type":"string",
                      "format":"uri",
                      "description":"link to documentation to investigate further and finding support"
                    },
                    "details":
                    {
                      "type":"array",
                      "description":"list of problems causing this error",
                      "items":
                      {
                        "$schema":"http://json-schema.org/draft-04/schema#",
                        "title":"errorDetail",
                        "description":"schema for specific error cause",
                        "type":"object",
                        "properties":
                        {
                          "field":
                          {
                            "type":"string",
                            "description":"a bean notation expression specifying the element in request data causing the error, eg product.variants[3].name, this can be empty if violation was not field specific"
                          },
                          "type":
                          {
                            "type":"string",
                            "description":"classification of the error detail type, lower case with underscore eg missing_value, this value must be always interpreted in context of the general error type.",
                            "pattern":"[a-z]+[a-z_]*[a-z]+"
                          },
                          "message":
                          {
                            "type":"string",
                            "description":"descriptive error detail message for debugging"
                          },
                          "moreInfo":
                          {
                            "type":"string",
                            "format":"uri",
                            "description":"link to documentation to investigate further and finding support for error detail"
                          }
                        },
                        "required":["type"]
                      }
                    }
                  },
                  "required":["status" , "type" ]
                }

        500:
          description: |
            Some server side error occurred.

          body:
            application/json:
              example: |
                {
                  "status": 500,
                  "message": "Something went wrong while processing the request. Please contact the administrator.",
                  "moreInfo": "https://api.yaas.io/patterns/errortypes.html",
                  "type": "internal_service_error"
                }

              schema: |
                {
                  "$schema":"http://json-schema.org/draft-04/schema#",
                  "title":"error",
                  "description":"Schema for API specified errors.",
                  "type":"object",
                  "properties":
                  {
                    "status":
                    {
                      "type":"integer",
                      "description":"original HTTP error code, should be consistent with the response HTTP code",
                      "minimum":100,
                      "maximum":599
                    },
                    "type":
                    {
                      "type":"string",
                      "description":"classification of the error type, lower case with underscore eg validation_failure",
                      "pattern":"[a-z]+[a-z_]*[a-z]+"
                    },
                    "message":
                    {
                      "type":"string",
                      "description":"descriptive error message for debugging"
                    },
                    "moreInfo":
                    {
                      "type":"string",
                      "format":"uri",
                      "description":"link to documentation to investigate further and finding support"
                    },
                    "details":
                    {
                      "type":"array",
                      "description":"list of problems causing this error",
                      "items":
                      {
                        "$schema":"http://json-schema.org/draft-04/schema#",
                        "title":"errorDetail",
                        "description":"schema for specific error cause",
                        "type":"object",
                        "properties":
                        {
                          "field":
                          {
                            "type":"string",
                            "description":"a bean notation expression specifying the element in request data causing the error, eg product.variants[3].name, this can be empty if violation was not field specific"
                          },
                          "type":
                          {
                            "type":"string",
                            "description":"classification of the error detail type, lower case with underscore eg missing_value, this value must be always interpreted in context of the general error type.",
                            "pattern":"[a-z]+[a-z_]*[a-z]+"
                          },
                          "message":
                          {
                            "type":"string",
                            "description":"descriptive error detail message for debugging"
                          },
                          "moreInfo":
                          {
                            "type":"string",
                            "format":"uri",
                            "description":"link to documentation to investigate further and finding support for error detail"
                          }
                        },
                        "required":["type"]
                      }
                    }
                  },
                  "required":["status" , "type" ]
                }

    put:
      is: [ patchable ]
      description: |
        Updates a specific Product Rating and Review based on the ratingId provided

        Accepted scopes:

          *  'sap.loyadvocacy_manage' - Required to update Rating and Review

      headers:
        Authorization:
          type: string
          description: |
            Used to send a valid OAuth2 access token.

          example: Bearer access_token
          required: true
      queryParameters:
        patch:
          type: boolean
          description: |
            If true, a partial update will be supported, otherwise the full object replacement will be performed.

          example: true
      body:
        application/json:
          schema: |
            {
              "$schema": "http://json-schema.org/draft-04/schema#",
              "title":"RatingReview",
              "type":"object",
              "properties":
              {
                "ratingId":
                {
                  "type":"string",
                  "maxLength": 32
                },
                "sku":
                {
                  "type":"string",
                  "maxLength": 32
                }, 
                "rating":
                {
                  "type":"integer",
                  "minimum": 1,
                  "maximum": 5
                },
                "customerId":
                {
                  "type":"string"
                },
                "reviewerName":
                {
                  "type":"string",
                  "maxLength": 32
                },
                "reviewTitle":
                { 
                  "type":"string",
                  "maxLength": 50
                },
                "reviewComment":
                {
                  "type":"string",
                  "maxLength": 500
                },
                "customAttributes":
                {
                  "type":"array",
                  "items":
                  {
                    "$ref":"customAttr"
                  }
                },
                "reviewStatus":
                {
                   "enum": [ "PUBLISHED", "NEW","BLOCKED" , "ARCHIVED"]
                }
              },
              "required":["sku", "rating", "customerId", "reviewerName"]
            }
      responses:
        200:
          description: |
            The resource has been successfully updated

          body:
            application/json:
              example: |
                {
                  "ratingId":"12345678912345678912345678912345",
                  "sku":"Laptop",
                  "rating":4,
                  "reviewerName":"SYSTEM",
                  "customerId":"C111111876",
                  "reviewTitle":"Monitor",
                  "reviewComment":"Clarity is good",
                  "reviewStatus":"Published"
                }

        400:
          description: |
            Request syntactically incorrect. Any details will be provided within the response payload.
          body:
            application/json:
              example: |
                {
                  "status": 400,
                  "message": "The request payload has incorrect syntax.",
                  "moreInfo": "https://api.yaas.io/patterns/errortypes.html",
                  "type": "bad_payload_syntax"
                }

              schema: |
                {
                  "$schema":"http://json-schema.org/draft-04/schema#",
                  "title":"error",
                  "description":"Schema for API specified errors.",
                  "type":"object",
                  "properties":
                  {
                    "status":
                    {
                      "type":"integer",
                      "description":"original HTTP error code, should be consistent with the response HTTP code",
                      "minimum":100,
                      "maximum":599
                    },
                    "type":
                    {
                      "type":"string",
                      "description":"classification of the error type, lower case with underscore eg validation_failure",
                      "pattern":"[a-z]+[a-z_]*[a-z]+"
                    },
                    "message":
                    {
                      "type":"string",
                      "description":"descriptive error message for debugging"
                    },
                    "moreInfo":
                    {
                      "type":"string",
                      "format":"uri",
                      "description":"link to documentation to investigate further and finding support"
                    },
                    "details":
                    {
                      "type":"array",
                      "description":"list of problems causing this error",
                      "items":
                      {
                        "$schema":"http://json-schema.org/draft-04/schema#",
                        "title":"errorDetail",
                        "description":"schema for specific error cause",
                        "type":"object",
                        "properties":
                        {
                          "field":
                          {
                            "type":"string",
                            "description":"a bean notation expression specifying the element in request data causing the error, eg product.variants[3].name, this can be empty if violation was not field specific"
                          },
                          "type":
                          {
                            "type":"string",
                            "description":"classification of the error detail type, lower case with underscore eg missing_value, this value must be always interpreted in context of the general error type.",
                            "pattern":"[a-z]+[a-z_]*[a-z]+"
                          },
                          "message":
                          {
                            "type":"string",
                            "description":"descriptive error detail message for debugging"
                          },
                          "moreInfo":
                          {
                            "type":"string",
                            "format":"uri",
                            "description":"link to documentation to investigate further and finding support for error detail"
                          }
                        },
                        "required":["type"]
                      }
                    }
                  },
                  "required":["status" , "type" ]
                }

        401:
          description: |
            Given request is unauthorized. Bad or expired token. Reauthenticate
            the user. Any details will be provided within the response payload.

          body:
            application/json:
              example: |
                {
                  "status":401,
                  "message":"Authorization: Unauthorized. Bearer TOKEN is invalid",
                  "type":"insufficient_credentials",
                  "moreInfo":"https://api.yaas.io/patterns/errortypes.html"
                }

              schema: |
                {
                  "$schema":"http://json-schema.org/draft-04/schema#",
                  "title":"error",
                  "description":"Schema for API specified errors.",
                  "type":"object",
                  "properties":
                  {
                    "status":
                    {
                      "type":"integer",
                      "description":"original HTTP error code, should be consistent with the response HTTP code",
                      "minimum":100,
                      "maximum":599
                    },
                    "type":
                    {
                      "type":"string",
                      "description":"classification of the error type, lower case with underscore eg validation_failure",
                      "pattern":"[a-z]+[a-z_]*[a-z]+"
                    },
                    "message":
                    {
                      "type":"string",
                      "description":"descriptive error message for debugging"
                    },
                    "moreInfo":
                    {
                      "type":"string",
                      "format":"uri",
                      "description":"link to documentation to investigate further and finding support"
                    },
                    "details":
                    {
                      "type":"array",
                      "description":"list of problems causing this error",
                      "items":
                      {
                        "$schema":"http://json-schema.org/draft-04/schema#",
                        "title":"errorDetail",
                        "description":"schema for specific error cause",
                        "type":"object",
                        "properties":
                        {
                          "field":
                          {
                            "type":"string",
                            "description":"a bean notation expression specifying the element in request data causing the error, eg product.variants[3].name, this can be empty if violation was not field specific"
                          },
                          "type":
                          {
                            "type":"string",
                            "description":"classification of the error detail type, lower case with underscore eg missing_value, this value must be always interpreted in context of the general error type.",
                            "pattern":"[a-z]+[a-z_]*[a-z]+"
                          },
                          "message":
                          {
                            "type":"string",
                            "description":"descriptive error detail message for debugging"
                          },
                          "moreInfo":
                          {
                            "type":"string",
                            "format":"uri",
                            "description":"link to documentation to investigate further and finding support for error detail"
                          }
                        },
                        "required":["type"]
                      }
                    }
                  },
                  "required":["status" , "type" ]
                }

        403:
          description: |
            Evaluated request scopes in access token are not sufficient and do not match required scopes.

          body:
            application/json:
              example: |
                {
                  "status": 403,
                  "message": "Given request does not have required scopes in access token. It is not authorized to perform this operation.",
                  "type": "insufficient_permissions"
                }

              schema: |
                {
                  "$schema":"http://json-schema.org/draft-04/schema#",
                  "title":"error",
                  "description":"Schema for API specified errors.",
                  "type":"object",
                  "properties":
                  {
                    "status":
                    {
                      "type":"integer",
                      "description":"original HTTP error code, should be consistent with the response HTTP code",
                      "minimum":100,
                      "maximum":599
                    },
                    "type":
                    {
                      "type":"string",
                      "description":"classification of the error type, lower case with underscore eg validation_failure",
                      "pattern":"[a-z]+[a-z_]*[a-z]+"
                    },
                    "message":
                    {
                      "type":"string",
                      "description":"descriptive error message for debugging"
                    },
                    "moreInfo":
                    {
                      "type":"string",
                      "format":"uri",
                      "description":"link to documentation to investigate further and finding support"
                    },
                    "details":
                    {
                      "type":"array",
                      "description":"list of problems causing this error",
                      "items":
                      {
                        "$schema":"http://json-schema.org/draft-04/schema#",
                        "title":"errorDetail",
                        "description":"schema for specific error cause",
                        "type":"object",
                        "properties":
                        {
                          "field":
                          {
                            "type":"string",
                            "description":"a bean notation expression specifying the element in request data causing the error, eg product.variants[3].name, this can be empty if violation was not field specific"
                          },
                          "type":
                          {
                            "type":"string",
                            "description":"classification of the error detail type, lower case with underscore eg missing_value, this value must be always interpreted in context of the general error type.",
                            "pattern":"[a-z]+[a-z_]*[a-z]+"
                          },
                          "message":
                          {
                            "type":"string",
                            "description":"descriptive error detail message for debugging"
                          },
                          "moreInfo":
                          {
                            "type":"string",
                            "format":"uri",
                            "description":"link to documentation to investigate further and finding support for error detail"
                          }
                        },
                        "required":["type"]
                      }
                    }
                  },
                  "required":["status" , "type" ]
                }

        404:
          description: |
            The requested resource does not exist.

          body:
            application/json:
              example: |
                {
                  "status": 404,
                  "message": "The requested URI does not map to a single element resource.",
                  "moreInfo": "https://api.yaas.io/patterns/errortypes.html",
                  "type": "element_resource_non_existing"
                }

              schema: |
                {
                  "$schema":"http://json-schema.org/draft-04/schema#",
                  "title":"error",
                  "description":"Schema for API specified errors.",
                  "type":"object",
                  "properties":
                  {
                    "status":
                    {
                      "type":"integer",
                      "description":"original HTTP error code, should be consistent with the response HTTP code",
                      "minimum":100,
                      "maximum":599
                    },
                    "type":
                    {
                      "type":"string",
                      "description":"classification of the error type, lower case with underscore eg validation_failure",
                      "pattern":"[a-z]+[a-z_]*[a-z]+"
                    },
                    "message":
                    {
                      "type":"string",
                      "description":"descriptive error message for debugging"
                    },
                    "moreInfo":
                    {
                      "type":"string",
                      "format":"uri",
                      "description":"link to documentation to investigate further and finding support"
                    },
                    "details":
                    {
                      "type":"array",
                      "description":"list of problems causing this error",
                      "items":
                      {
                        "$schema":"http://json-schema.org/draft-04/schema#",
                        "title":"errorDetail",
                        "description":"schema for specific error cause",
                        "type":"object",
                        "properties":
                        {
                          "field":
                          {
                            "type":"string",
                            "description":"a bean notation expression specifying the element in request data causing the error, eg product.variants[3].name, this can be empty if violation was not field specific"
                          },
                          "type":
                          {
                            "type":"string",
                            "description":"classification of the error detail type, lower case with underscore eg missing_value, this value must be always interpreted in context of the general error type.",
                            "pattern":"[a-z]+[a-z_]*[a-z]+"
                          },
                          "message":
                          {
                            "type":"string",
                            "description":"descriptive error detail message for debugging"
                          },
                          "moreInfo":
                          {
                            "type":"string",
                            "format":"uri",
                            "description":"link to documentation to investigate further and finding support for error detail"
                          }
                        },
                        "required":["type"]
                      }
                    }
                  },
                  "required":["status" , "type" ]
                }

        409:
          description: |
            Creation failed because there was a conflict with another resource. Any details will be provided within the response payload.

          body:
            application/json:
              example: |
                {
                  "status": 409,
                  "message": "The requested resource could not be updated due to server-side validation.",
                  "moreInfo": "https://api.yaas.io/patterns/errortypes.html",
                  "type": "conflict_resource"
                }

              schema: |
                {
                  "$schema":"http://json-schema.org/draft-04/schema#",
                  "title":"error",
                  "description":"Schema for API specified errors.",
                  "type":"object",
                  "properties":
                  {
                    "status":
                    {
                      "type":"integer",
                      "description":"original HTTP error code, should be consistent with the response HTTP code",
                      "minimum":100,
                      "maximum":599
                    },
                    "type":
                    {
                      "type":"string",
                      "description":"classification of the error type, lower case with underscore eg validation_failure",
                      "pattern":"[a-z]+[a-z_]*[a-z]+"
                    },
                    "message":
                    {
                      "type":"string",
                      "description":"descriptive error message for debugging"
                    },
                    "moreInfo":
                    {
                      "type":"string",
                      "format":"uri",
                      "description":"link to documentation to investigate further and finding support"
                    },
                    "details":
                    {
                      "type":"array",
                      "description":"list of problems causing this error",
                      "items":
                      {
                        "$schema":"http://json-schema.org/draft-04/schema#",
                        "title":"errorDetail",
                        "description":"schema for specific error cause",
                        "type":"object",
                        "properties":
                        {
                          "field":
                          {
                            "type":"string",
                            "description":"a bean notation expression specifying the element in request data causing the error, eg product.variants[3].name, this can be empty if violation was not field specific"
                          },
                          "type":
                          {
                            "type":"string",
                            "description":"classification of the error detail type, lower case with underscore eg missing_value, this value must be always interpreted in context of the general error type.",
                            "pattern":"[a-z]+[a-z_]*[a-z]+"
                          },
                          "message":
                          {
                            "type":"string",
                            "description":"descriptive error detail message for debugging"
                          },
                          "moreInfo":
                          {
                            "type":"string",
                            "format":"uri",
                            "description":"link to documentation to investigate further and finding support for error detail"
                          }
                        },
                        "required":["type"]
                      }
                    }
                  },
                  "required":["status" , "type" ]
                }

        500:
          description: |
            Some server side error occurred.

          body:
            application/json:
              example: |
                {
                  "status": 500,
                  "message": "Something went wrong while processing the request. Please contact the administrator.",
                  "moreInfo": "https://api.yaas.io/patterns/errortypes.html",
                  "type": "internal_service_error"
                }

              schema: |
                {
                  "$schema":"http://json-schema.org/draft-04/schema#",
                  "title":"error",
                  "description":"Schema for API specified errors.",
                  "type":"object",
                  "properties":
                  {
                    "status":
                    {
                      "type":"integer",
                      "description":"original HTTP error code, should be consistent with the response HTTP code",
                      "minimum":100,
                      "maximum":599
                    },
                    "type":
                    {
                      "type":"string",
                      "description":"classification of the error type, lower case with underscore eg validation_failure",
                      "pattern":"[a-z]+[a-z_]*[a-z]+"
                    },
                    "message":
                    {
                      "type":"string",
                      "description":"descriptive error message for debugging"
                    },
                    "moreInfo":
                    {
                      "type":"string",
                      "format":"uri",
                      "description":"link to documentation to investigate further and finding support"
                    },
                    "details":
                    {
                      "type":"array",
                      "description":"list of problems causing this error",
                      "items":
                      {
                        "$schema":"http://json-schema.org/draft-04/schema#",
                        "title":"errorDetail",
                        "description":"schema for specific error cause",
                        "type":"object",
                        "properties":
                        {
                          "field":
                          {
                            "type":"string",
                            "description":"a bean notation expression specifying the element in request data causing the error, eg product.variants[3].name, this can be empty if violation was not field specific"
                          },
                          "type":
                          {
                            "type":"string",
                            "description":"classification of the error detail type, lower case with underscore eg missing_value, this value must be always interpreted in context of the general error type.",
                            "pattern":"[a-z]+[a-z_]*[a-z]+"
                          },
                          "message":
                          {
                            "type":"string",
                            "description":"descriptive error detail message for debugging"
                          },
                          "moreInfo":
                          {
                            "type":"string",
                            "format":"uri",
                            "description":"link to documentation to investigate further and finding support for error detail"
                          }
                        },
                        "required":["type"]
                      }
                    }
                  },
                  "required":["status" , "type" ]
                }

    delete:
      description: |
        Deletes a specific Product Rating  and Review based on the ratingId provided

        Accepted scopes:

          *  'sap.loyadvocacy_delete' - Required to post Rating and Review    

      headers:
        Authorization:
          type: string
          description: |
            Used to send a valid OAuth2 access token.

          example: Bearer access_token
          required: true
      responses:
        204:
          description: |
            The resource has been successfully deleted.

        401:
          description: |
            Given request is unauthorized. Bad or expired token. Reauthenticate
            the user. Any details will be provided within the response payload.

          body:
            application/json:
              example: |
                {
                  "status":401,
                  "message":"Authorization: Unauthorized. Bearer TOKEN is invalid",
                  "type":"insufficient_credentials",
                  "moreInfo":"https://api.yaas.io/patterns/errortypes.html"
                }

              schema: |
                {
                  "$schema":"http://json-schema.org/draft-04/schema#",
                  "title":"error",
                  "description":"Schema for API specified errors.",
                  "type":"object",
                  "properties":
                  {
                    "status":
                    {
                      "type":"integer",
                      "description":"original HTTP error code, should be consistent with the response HTTP code",
                      "minimum":100,
                      "maximum":599
                    },
                    "type":
                    {
                      "type":"string",
                      "description":"classification of the error type, lower case with underscore eg validation_failure",
                      "pattern":"[a-z]+[a-z_]*[a-z]+"
                    },
                    "message":
                    {
                      "type":"string",
                      "description":"descriptive error message for debugging"
                    },
                    "moreInfo":
                    {
                      "type":"string",
                      "format":"uri",
                      "description":"link to documentation to investigate further and finding support"
                    },
                    "details":
                    {
                      "type":"array",
                      "description":"list of problems causing this error",
                      "items":
                      {
                        "$schema":"http://json-schema.org/draft-04/schema#",
                        "title":"errorDetail",
                        "description":"schema for specific error cause",
                        "type":"object",
                        "properties":
                        {
                          "field":
                          {
                            "type":"string",
                            "description":"a bean notation expression specifying the element in request data causing the error, eg product.variants[3].name, this can be empty if violation was not field specific"
                          },
                          "type":
                          {
                            "type":"string",
                            "description":"classification of the error detail type, lower case with underscore eg missing_value, this value must be always interpreted in context of the general error type.",
                            "pattern":"[a-z]+[a-z_]*[a-z]+"
                          },
                          "message":
                          {
                            "type":"string",
                            "description":"descriptive error detail message for debugging"
                          },
                          "moreInfo":
                          {
                            "type":"string",
                            "format":"uri",
                            "description":"link to documentation to investigate further and finding support for error detail"
                          }
                        },
                        "required":["type"]
                      }
                    }
                  },
                  "required":["status" , "type" ]
                }

        403:
          description: |
            Evaluated request scopes in access token are not sufficient and do not match required scopes.

          body:
            application/json:
              example: |
                {
                  "status": 403,
                  "message": "Given request does not have required scopes in access token. It is not authorized to perform this operation.",
                  "type": "insufficient_permissions"
                }

              schema: |
                {
                  "$schema":"http://json-schema.org/draft-04/schema#",
                  "title":"error",
                  "description":"Schema for API specified errors.",
                  "type":"object",
                  "properties":
                  {
                    "status":
                    {
                      "type":"integer",
                      "description":"original HTTP error code, should be consistent with the response HTTP code",
                      "minimum":100,
                      "maximum":599
                    },
                    "type":
                    {
                      "type":"string",
                      "description":"classification of the error type, lower case with underscore eg validation_failure",
                      "pattern":"[a-z]+[a-z_]*[a-z]+"
                    },
                    "message":
                    {
                      "type":"string",
                      "description":"descriptive error message for debugging"
                    },
                    "moreInfo":
                    {
                      "type":"string",
                      "format":"uri",
                      "description":"link to documentation to investigate further and finding support"
                    },
                    "details":
                    {
                      "type":"array",
                      "description":"list of problems causing this error",
                      "items":
                      {
                        "$schema":"http://json-schema.org/draft-04/schema#",
                        "title":"errorDetail",
                        "description":"schema for specific error cause",
                        "type":"object",
                        "properties":
                        {
                          "field":
                          {
                            "type":"string",
                            "description":"a bean notation expression specifying the element in request data causing the error, eg product.variants[3].name, this can be empty if violation was not field specific"
                          },
                          "type":
                          {
                            "type":"string",
                            "description":"classification of the error detail type, lower case with underscore eg missing_value, this value must be always interpreted in context of the general error type.",
                            "pattern":"[a-z]+[a-z_]*[a-z]+"
                          },
                          "message":
                          {
                            "type":"string",
                            "description":"descriptive error detail message for debugging"
                          },
                          "moreInfo":
                          {
                            "type":"string",
                            "format":"uri",
                            "description":"link to documentation to investigate further and finding support for error detail"
                          }
                        },
                        "required":["type"]
                      }
                    }
                  },
                  "required":["status" , "type" ]
                }

        404:
          description: |
            The requested resource does not exist.

          body:
            application/json:
              example: |
                {
                  "status": 404,
                  "message": "The requested URI does not map to a single element resource.",
                  "moreInfo": "https://api.yaas.io/patterns/errortypes.html",
                  "type": "element_resource_non_existing"
                }

              schema: |
                {
                  "$schema":"http://json-schema.org/draft-04/schema#",
                  "title":"error",
                  "description":"Schema for API specified errors.",
                  "type":"object",
                  "properties":
                  {
                    "status":
                    {
                      "type":"integer",
                      "description":"original HTTP error code, should be consistent with the response HTTP code",
                      "minimum":100,
                      "maximum":599
                    },
                    "type":
                    {
                      "type":"string",
                      "description":"classification of the error type, lower case with underscore eg validation_failure",
                      "pattern":"[a-z]+[a-z_]*[a-z]+"
                    },
                    "message":
                    {
                      "type":"string",
                      "description":"descriptive error message for debugging"
                    },
                    "moreInfo":
                    {
                      "type":"string",
                      "format":"uri",
                      "description":"link to documentation to investigate further and finding support"
                    },
                    "details":
                    {
                      "type":"array",
                      "description":"list of problems causing this error",
                      "items":
                      {
                        "$schema":"http://json-schema.org/draft-04/schema#",
                        "title":"errorDetail",
                        "description":"schema for specific error cause",
                        "type":"object",
                        "properties":
                        {
                          "field":
                          {
                            "type":"string",
                            "description":"a bean notation expression specifying the element in request data causing the error, eg product.variants[3].name, this can be empty if violation was not field specific"
                          },
                          "type":
                          {
                            "type":"string",
                            "description":"classification of the error detail type, lower case with underscore eg missing_value, this value must be always interpreted in context of the general error type.",
                            "pattern":"[a-z]+[a-z_]*[a-z]+"
                          },
                          "message":
                          {
                            "type":"string",
                            "description":"descriptive error detail message for debugging"
                          },
                          "moreInfo":
                          {
                            "type":"string",
                            "format":"uri",
                            "description":"link to documentation to investigate further and finding support for error detail"
                          }
                        },
                        "required":["type"]
                      }
                    }
                  },
                  "required":["status" , "type" ]
                }

        500:
          description: |
            Some server side error occurred.

          body:
            application/json:
              example: |
                {
                  "status": 500,
                  "message": "Something went wrong while processing the request. Please contact the administrator.",
                  "moreInfo": "https://api.yaas.io/patterns/errortypes.html",
                  "type": "internal_service_error"
                }

              schema: |
                {
                  "$schema":"http://json-schema.org/draft-04/schema#",
                  "title":"error",
                  "description":"Schema for API specified errors.",
                  "type":"object",
                  "properties":
                  {
                    "status":
                    {
                      "type":"integer",
                      "description":"original HTTP error code, should be consistent with the response HTTP code",
                      "minimum":100,
                      "maximum":599
                    },
                    "type":
                    {
                      "type":"string",
                      "description":"classification of the error type, lower case with underscore eg validation_failure",
                      "pattern":"[a-z]+[a-z_]*[a-z]+"
                    },
                    "message":
                    {
                      "type":"string",
                      "description":"descriptive error message for debugging"
                    },
                    "moreInfo":
                    {
                      "type":"string",
                      "format":"uri",
                      "description":"link to documentation to investigate further and finding support"
                    },
                    "details":
                    {
                      "type":"array",
                      "description":"list of problems causing this error",
                      "items":
                      {
                        "$schema":"http://json-schema.org/draft-04/schema#",
                        "title":"errorDetail",
                        "description":"schema for specific error cause",
                        "type":"object",
                        "properties":
                        {
                          "field":
                          {
                            "type":"string",
                            "description":"a bean notation expression specifying the element in request data causing the error, eg product.variants[3].name, this can be empty if violation was not field specific"
                          },
                          "type":
                          {
                            "type":"string",
                            "description":"classification of the error detail type, lower case with underscore eg missing_value, this value must be always interpreted in context of the general error type.",
                            "pattern":"[a-z]+[a-z_]*[a-z]+"
                          },
                          "message":
                          {
                            "type":"string",
                            "description":"descriptive error detail message for debugging"
                          },
                          "moreInfo":
                          {
                            "type":"string",
                            "format":"uri",
                            "description":"link to documentation to investigate further and finding support for error detail"
                          }
                        },
                        "required":["type"]
                      }
                    }
                  },
                  "required":["status" , "type" ]
                }

  /{productId}/ratingCount:
    uriParameters:
      productId:
        type: string
        required: true
    type: element
    is: [ oauth2, projectable ]
    description: |
      This resource type defines the GET, PUT, DELETE methods and their responses for a single element resource.

    get:
      description: |
        Gets Individual rating value count for each Rating.

      headers:
        Authorization:
          type: string
          description: |
            Used to send a valid OAuth2 access token.

          example: Bearer access_token
          required: true
      queryParameters:
        fields:
          type: string
          description: |
            Contains a comma separated list of field identifiers, by which the fields of the response entities should be filtered by.
            Empty or not initialized value result in a minimal set of entity fields returned. Non-existing or invalid fields will be ignored.

          example: code,name,description
      responses:
        200:
          description: ratingCount successfully retrieved.
          body:
            application/json:
              schema: |
                {
                  "$schema": "http://json-schema.org/draft-04/schema#",
                  "title":"Ratings",
                  "type":"object",
                  "properties":
                  {
                    "rating1":
                    {
                      "type":"integer"
                    },
                    "rating2":
                    {
                      "type":"integer"
                    },
                    "rating3":
                    {
                      "type":"integer"
                    },
                    "rating4":
                    {
                      "type":"integer"
                    },
                    "rating5":
                    {
                      "type":"integer"
                    }
                   }
                }
        401:
          description: |
            Given request is unauthorized. Bad or expired token. Reauthenticate
            the user. Any details will be provided within the response payload.

          body:
            application/json:
              example: |
                {
                  "status":401,
                  "message":"Authorization: Unauthorized. Bearer TOKEN is invalid",
                  "type":"insufficient_credentials",
                  "moreInfo":"https://api.yaas.io/patterns/errortypes.html"
                }

              schema: |
                {
                  "$schema":"http://json-schema.org/draft-04/schema#",
                  "title":"error",
                  "description":"Schema for API specified errors.",
                  "type":"object",
                  "properties":
                  {
                    "status":
                    {
                      "type":"integer",
                      "description":"original HTTP error code, should be consistent with the response HTTP code",
                      "minimum":100,
                      "maximum":599
                    },
                    "type":
                    {
                      "type":"string",
                      "description":"classification of the error type, lower case with underscore eg validation_failure",
                      "pattern":"[a-z]+[a-z_]*[a-z]+"
                    },
                    "message":
                    {
                      "type":"string",
                      "description":"descriptive error message for debugging"
                    },
                    "moreInfo":
                    {
                      "type":"string",
                      "format":"uri",
                      "description":"link to documentation to investigate further and finding support"
                    },
                    "details":
                    {
                      "type":"array",
                      "description":"list of problems causing this error",
                      "items":
                      {
                        "$schema":"http://json-schema.org/draft-04/schema#",
                        "title":"errorDetail",
                        "description":"schema for specific error cause",
                        "type":"object",
                        "properties":
                        {
                          "field":
                          {
                            "type":"string",
                            "description":"a bean notation expression specifying the element in request data causing the error, eg product.variants[3].name, this can be empty if violation was not field specific"
                          },
                          "type":
                          {
                            "type":"string",
                            "description":"classification of the error detail type, lower case with underscore eg missing_value, this value must be always interpreted in context of the general error type.",
                            "pattern":"[a-z]+[a-z_]*[a-z]+"
                          },
                          "message":
                          {
                            "type":"string",
                            "description":"descriptive error detail message for debugging"
                          },
                          "moreInfo":
                          {
                            "type":"string",
                            "format":"uri",
                            "description":"link to documentation to investigate further and finding support for error detail"
                          }
                        },
                        "required":["type"]
                      }
                    }
                  },
                  "required":["status" , "type" ]
                }

        403:
          description: |
            Evaluated request scopes in access token are not sufficient and do not match required scopes.

          body:
            application/json:
              example: |
                {
                  "status": 403,
                  "message": "Given request does not have required scopes in access token. It is not authorized to perform this operation.",
                  "type": "insufficient_permissions"
                }

              schema: |
                {
                  "$schema":"http://json-schema.org/draft-04/schema#",
                  "title":"error",
                  "description":"Schema for API specified errors.",
                  "type":"object",
                  "properties":
                  {
                    "status":
                    {
                      "type":"integer",
                      "description":"original HTTP error code, should be consistent with the response HTTP code",
                      "minimum":100,
                      "maximum":599
                    },
                    "type":
                    {
                      "type":"string",
                      "description":"classification of the error type, lower case with underscore eg validation_failure",
                      "pattern":"[a-z]+[a-z_]*[a-z]+"
                    },
                    "message":
                    {
                      "type":"string",
                      "description":"descriptive error message for debugging"
                    },
                    "moreInfo":
                    {
                      "type":"string",
                      "format":"uri",
                      "description":"link to documentation to investigate further and finding support"
                    },
                    "details":
                    {
                      "type":"array",
                      "description":"list of problems causing this error",
                      "items":
                      {
                        "$schema":"http://json-schema.org/draft-04/schema#",
                        "title":"errorDetail",
                        "description":"schema for specific error cause",
                        "type":"object",
                        "properties":
                        {
                          "field":
                          {
                            "type":"string",
                            "description":"a bean notation expression specifying the element in request data causing the error, eg product.variants[3].name, this can be empty if violation was not field specific"
                          },
                          "type":
                          {
                            "type":"string",
                            "description":"classification of the error detail type, lower case with underscore eg missing_value, this value must be always interpreted in context of the general error type.",
                            "pattern":"[a-z]+[a-z_]*[a-z]+"
                          },
                          "message":
                          {
                            "type":"string",
                            "description":"descriptive error detail message for debugging"
                          },
                          "moreInfo":
                          {
                            "type":"string",
                            "format":"uri",
                            "description":"link to documentation to investigate further and finding support for error detail"
                          }
                        },
                        "required":["type"]
                      }
                    }
                  },
                  "required":["status" , "type" ]
                }

        404:
          description: |
            The requested resource does not exist.

          body:
            application/json:
              example: |
                {
                  "status": 404,
                  "message": "The requested URI does not map to a single element resource.",
                  "moreInfo": "https://api.yaas.io/patterns/errortypes.html",
                  "type": "element_resource_non_existing"
                }

              schema: |
                {
                  "$schema":"http://json-schema.org/draft-04/schema#",
                  "title":"error",
                  "description":"Schema for API specified errors.",
                  "type":"object",
                  "properties":
                  {
                    "status":
                    {
                      "type":"integer",
                      "description":"original HTTP error code, should be consistent with the response HTTP code",
                      "minimum":100,
                      "maximum":599
                    },
                    "type":
                    {
                      "type":"string",
                      "description":"classification of the error type, lower case with underscore eg validation_failure",
                      "pattern":"[a-z]+[a-z_]*[a-z]+"
                    },
                    "message":
                    {
                      "type":"string",
                      "description":"descriptive error message for debugging"
                    },
                    "moreInfo":
                    {
                      "type":"string",
                      "format":"uri",
                      "description":"link to documentation to investigate further and finding support"
                    },
                    "details":
                    {
                      "type":"array",
                      "description":"list of problems causing this error",
                      "items":
                      {
                        "$schema":"http://json-schema.org/draft-04/schema#",
                        "title":"errorDetail",
                        "description":"schema for specific error cause",
                        "type":"object",
                        "properties":
                        {
                          "field":
                          {
                            "type":"string",
                            "description":"a bean notation expression specifying the element in request data causing the error, eg product.variants[3].name, this can be empty if violation was not field specific"
                          },
                          "type":
                          {
                            "type":"string",
                            "description":"classification of the error detail type, lower case with underscore eg missing_value, this value must be always interpreted in context of the general error type.",
                            "pattern":"[a-z]+[a-z_]*[a-z]+"
                          },
                          "message":
                          {
                            "type":"string",
                            "description":"descriptive error detail message for debugging"
                          },
                          "moreInfo":
                          {
                            "type":"string",
                            "format":"uri",
                            "description":"link to documentation to investigate further and finding support for error detail"
                          }
                        },
                        "required":["type"]
                      }
                    }
                  },
                  "required":["status" , "type" ]
                }

        500:
          description: |
            Some server side error occurred.

          body:
            application/json:
              example: |
                {
                  "status": 500,
                  "message": "Something went wrong while processing the request. Please contact the administrator.",
                  "moreInfo": "https://api.yaas.io/patterns/errortypes.html",
                  "type": "internal_service_error"
                }

              schema: |
                {
                  "$schema":"http://json-schema.org/draft-04/schema#",
                  "title":"error",
                  "description":"Schema for API specified errors.",
                  "type":"object",
                  "properties":
                  {
                    "status":
                    {
                      "type":"integer",
                      "description":"original HTTP error code, should be consistent with the response HTTP code",
                      "minimum":100,
                      "maximum":599
                    },
                    "type":
                    {
                      "type":"string",
                      "description":"classification of the error type, lower case with underscore eg validation_failure",
                      "pattern":"[a-z]+[a-z_]*[a-z]+"
                    },
                    "message":
                    {
                      "type":"string",
                      "description":"descriptive error message for debugging"
                    },
                    "moreInfo":
                    {
                      "type":"string",
                      "format":"uri",
                      "description":"link to documentation to investigate further and finding support"
                    },
                    "details":
                    {
                      "type":"array",
                      "description":"list of problems causing this error",
                      "items":
                      {
                        "$schema":"http://json-schema.org/draft-04/schema#",
                        "title":"errorDetail",
                        "description":"schema for specific error cause",
                        "type":"object",
                        "properties":
                        {
                          "field":
                          {
                            "type":"string",
                            "description":"a bean notation expression specifying the element in request data causing the error, eg product.variants[3].name, this can be empty if violation was not field specific"
                          },
                          "type":
                          {
                            "type":"string",
                            "description":"classification of the error detail type, lower case with underscore eg missing_value, this value must be always interpreted in context of the general error type.",
                            "pattern":"[a-z]+[a-z_]*[a-z]+"
                          },
                          "message":
                          {
                            "type":"string",
                            "description":"descriptive error detail message for debugging"
                          },
                          "moreInfo":
                          {
                            "type":"string",
                            "format":"uri",
                            "description":"link to documentation to investigate further and finding support for error detail"
                          }
                        },
                        "required":["type"]
                      }
                    }
                  },
                  "required":["status" , "type" ]
                }

    put:
      description: Updates a single ratingCount entity.
      headers:
        Authorization:
          type: string
          description: |
            Used to send a valid OAuth2 access token.

          example: Bearer access_token
          required: true
      queryParameters:
        fields:
          type: string
          description: |
            Contains a comma separated list of field identifiers, by which the fields of the response entities should be filtered by.
            Empty or not initialized value result in a minimal set of entity fields returned. Non-existing or invalid fields will be ignored.

          example: code,name,description
      body:
        application/json:
          schema: |
            {
              "$schema": "http://json-schema.org/draft-04/schema#",
              "title":"Ratings",
              "type":"object",
              "properties":
              {
                "rating1":
                {
                  "type":"integer"
                },
                "rating2":
                {
                  "type":"integer"
                },
                "rating3":
                {
                  "type":"integer"
                },
                "rating4":
                {
                  "type":"integer"
                },
                "rating5":
                {
                  "type":"integer"
                }
               }
            }
      responses:
        200:
          description: |
            The resource has been successfully updated

        400:
          description: |
            Request syntactically incorrect. Any details will be provided within the response payload.
          body:
            application/json:
              example: |
                {
                  "status": 400,
                  "message": "The request payload has incorrect syntax.",
                  "moreInfo": "https://api.yaas.io/patterns/errortypes.html",
                  "type": "bad_payload_syntax"
                }

              schema: |
                {
                  "$schema":"http://json-schema.org/draft-04/schema#",
                  "title":"error",
                  "description":"Schema for API specified errors.",
                  "type":"object",
                  "properties":
                  {
                    "status":
                    {
                      "type":"integer",
                      "description":"original HTTP error code, should be consistent with the response HTTP code",
                      "minimum":100,
                      "maximum":599
                    },
                    "type":
                    {
                      "type":"string",
                      "description":"classification of the error type, lower case with underscore eg validation_failure",
                      "pattern":"[a-z]+[a-z_]*[a-z]+"
                    },
                    "message":
                    {
                      "type":"string",
                      "description":"descriptive error message for debugging"
                    },
                    "moreInfo":
                    {
                      "type":"string",
                      "format":"uri",
                      "description":"link to documentation to investigate further and finding support"
                    },
                    "details":
                    {
                      "type":"array",
                      "description":"list of problems causing this error",
                      "items":
                      {
                        "$schema":"http://json-schema.org/draft-04/schema#",
                        "title":"errorDetail",
                        "description":"schema for specific error cause",
                        "type":"object",
                        "properties":
                        {
                          "field":
                          {
                            "type":"string",
                            "description":"a bean notation expression specifying the element in request data causing the error, eg product.variants[3].name, this can be empty if violation was not field specific"
                          },
                          "type":
                          {
                            "type":"string",
                            "description":"classification of the error detail type, lower case with underscore eg missing_value, this value must be always interpreted in context of the general error type.",
                            "pattern":"[a-z]+[a-z_]*[a-z]+"
                          },
                          "message":
                          {
                            "type":"string",
                            "description":"descriptive error detail message for debugging"
                          },
                          "moreInfo":
                          {
                            "type":"string",
                            "format":"uri",
                            "description":"link to documentation to investigate further and finding support for error detail"
                          }
                        },
                        "required":["type"]
                      }
                    }
                  },
                  "required":["status" , "type" ]
                }

        401:
          description: |
            Given request is unauthorized. Bad or expired token. Reauthenticate
            the user. Any details will be provided within the response payload.

          body:
            application/json:
              example: |
                {
                  "status":401,
                  "message":"Authorization: Unauthorized. Bearer TOKEN is invalid",
                  "type":"insufficient_credentials",
                  "moreInfo":"https://api.yaas.io/patterns/errortypes.html"
                }

              schema: |
                {
                  "$schema":"http://json-schema.org/draft-04/schema#",
                  "title":"error",
                  "description":"Schema for API specified errors.",
                  "type":"object",
                  "properties":
                  {
                    "status":
                    {
                      "type":"integer",
                      "description":"original HTTP error code, should be consistent with the response HTTP code",
                      "minimum":100,
                      "maximum":599
                    },
                    "type":
                    {
                      "type":"string",
                      "description":"classification of the error type, lower case with underscore eg validation_failure",
                      "pattern":"[a-z]+[a-z_]*[a-z]+"
                    },
                    "message":
                    {
                      "type":"string",
                      "description":"descriptive error message for debugging"
                    },
                    "moreInfo":
                    {
                      "type":"string",
                      "format":"uri",
                      "description":"link to documentation to investigate further and finding support"
                    },
                    "details":
                    {
                      "type":"array",
                      "description":"list of problems causing this error",
                      "items":
                      {
                        "$schema":"http://json-schema.org/draft-04/schema#",
                        "title":"errorDetail",
                        "description":"schema for specific error cause",
                        "type":"object",
                        "properties":
                        {
                          "field":
                          {
                            "type":"string",
                            "description":"a bean notation expression specifying the element in request data causing the error, eg product.variants[3].name, this can be empty if violation was not field specific"
                          },
                          "type":
                          {
                            "type":"string",
                            "description":"classification of the error detail type, lower case with underscore eg missing_value, this value must be always interpreted in context of the general error type.",
                            "pattern":"[a-z]+[a-z_]*[a-z]+"
                          },
                          "message":
                          {
                            "type":"string",
                            "description":"descriptive error detail message for debugging"
                          },
                          "moreInfo":
                          {
                            "type":"string",
                            "format":"uri",
                            "description":"link to documentation to investigate further and finding support for error detail"
                          }
                        },
                        "required":["type"]
                      }
                    }
                  },
                  "required":["status" , "type" ]
                }

        403:
          description: |
            Evaluated request scopes in access token are not sufficient and do not match required scopes.

          body:
            application/json:
              example: |
                {
                  "status": 403,
                  "message": "Given request does not have required scopes in access token. It is not authorized to perform this operation.",
                  "type": "insufficient_permissions"
                }

              schema: |
                {
                  "$schema":"http://json-schema.org/draft-04/schema#",
                  "title":"error",
                  "description":"Schema for API specified errors.",
                  "type":"object",
                  "properties":
                  {
                    "status":
                    {
                      "type":"integer",
                      "description":"original HTTP error code, should be consistent with the response HTTP code",
                      "minimum":100,
                      "maximum":599
                    },
                    "type":
                    {
                      "type":"string",
                      "description":"classification of the error type, lower case with underscore eg validation_failure",
                      "pattern":"[a-z]+[a-z_]*[a-z]+"
                    },
                    "message":
                    {
                      "type":"string",
                      "description":"descriptive error message for debugging"
                    },
                    "moreInfo":
                    {
                      "type":"string",
                      "format":"uri",
                      "description":"link to documentation to investigate further and finding support"
                    },
                    "details":
                    {
                      "type":"array",
                      "description":"list of problems causing this error",
                      "items":
                      {
                        "$schema":"http://json-schema.org/draft-04/schema#",
                        "title":"errorDetail",
                        "description":"schema for specific error cause",
                        "type":"object",
                        "properties":
                        {
                          "field":
                          {
                            "type":"string",
                            "description":"a bean notation expression specifying the element in request data causing the error, eg product.variants[3].name, this can be empty if violation was not field specific"
                          },
                          "type":
                          {
                            "type":"string",
                            "description":"classification of the error detail type, lower case with underscore eg missing_value, this value must be always interpreted in context of the general error type.",
                            "pattern":"[a-z]+[a-z_]*[a-z]+"
                          },
                          "message":
                          {
                            "type":"string",
                            "description":"descriptive error detail message for debugging"
                          },
                          "moreInfo":
                          {
                            "type":"string",
                            "format":"uri",
                            "description":"link to documentation to investigate further and finding support for error detail"
                          }
                        },
                        "required":["type"]
                      }
                    }
                  },
                  "required":["status" , "type" ]
                }

        404:
          description: |
            The requested resource does not exist.

          body:
            application/json:
              example: |
                {
                  "status": 404,
                  "message": "The requested URI does not map to a single element resource.",
                  "moreInfo": "https://api.yaas.io/patterns/errortypes.html",
                  "type": "element_resource_non_existing"
                }

              schema: |
                {
                  "$schema":"http://json-schema.org/draft-04/schema#",
                  "title":"error",
                  "description":"Schema for API specified errors.",
                  "type":"object",
                  "properties":
                  {
                    "status":
                    {
                      "type":"integer",
                      "description":"original HTTP error code, should be consistent with the response HTTP code",
                      "minimum":100,
                      "maximum":599
                    },
                    "type":
                    {
                      "type":"string",
                      "description":"classification of the error type, lower case with underscore eg validation_failure",
                      "pattern":"[a-z]+[a-z_]*[a-z]+"
                    },
                    "message":
                    {
                      "type":"string",
                      "description":"descriptive error message for debugging"
                    },
                    "moreInfo":
                    {
                      "type":"string",
                      "format":"uri",
                      "description":"link to documentation to investigate further and finding support"
                    },
                    "details":
                    {
                      "type":"array",
                      "description":"list of problems causing this error",
                      "items":
                      {
                        "$schema":"http://json-schema.org/draft-04/schema#",
                        "title":"errorDetail",
                        "description":"schema for specific error cause",
                        "type":"object",
                        "properties":
                        {
                          "field":
                          {
                            "type":"string",
                            "description":"a bean notation expression specifying the element in request data causing the error, eg product.variants[3].name, this can be empty if violation was not field specific"
                          },
                          "type":
                          {
                            "type":"string",
                            "description":"classification of the error detail type, lower case with underscore eg missing_value, this value must be always interpreted in context of the general error type.",
                            "pattern":"[a-z]+[a-z_]*[a-z]+"
                          },
                          "message":
                          {
                            "type":"string",
                            "description":"descriptive error detail message for debugging"
                          },
                          "moreInfo":
                          {
                            "type":"string",
                            "format":"uri",
                            "description":"link to documentation to investigate further and finding support for error detail"
                          }
                        },
                        "required":["type"]
                      }
                    }
                  },
                  "required":["status" , "type" ]
                }

        409:
          description: |
            Creation failed because there was a conflict with another resource. Any details will be provided within the response payload.

          body:
            application/json:
              example: |
                {
                  "status": 409,
                  "message": "The requested resource could not be updated due to server-side validation.",
                  "moreInfo": "https://api.yaas.io/patterns/errortypes.html",
                  "type": "conflict_resource"
                }

              schema: |
                {
                  "$schema":"http://json-schema.org/draft-04/schema#",
                  "title":"error",
                  "description":"Schema for API specified errors.",
                  "type":"object",
                  "properties":
                  {
                    "status":
                    {
                      "type":"integer",
                      "description":"original HTTP error code, should be consistent with the response HTTP code",
                      "minimum":100,
                      "maximum":599
                    },
                    "type":
                    {
                      "type":"string",
                      "description":"classification of the error type, lower case with underscore eg validation_failure",
                      "pattern":"[a-z]+[a-z_]*[a-z]+"
                    },
                    "message":
                    {
                      "type":"string",
                      "description":"descriptive error message for debugging"
                    },
                    "moreInfo":
                    {
                      "type":"string",
                      "format":"uri",
                      "description":"link to documentation to investigate further and finding support"
                    },
                    "details":
                    {
                      "type":"array",
                      "description":"list of problems causing this error",
                      "items":
                      {
                        "$schema":"http://json-schema.org/draft-04/schema#",
                        "title":"errorDetail",
                        "description":"schema for specific error cause",
                        "type":"object",
                        "properties":
                        {
                          "field":
                          {
                            "type":"string",
                            "description":"a bean notation expression specifying the element in request data causing the error, eg product.variants[3].name, this can be empty if violation was not field specific"
                          },
                          "type":
                          {
                            "type":"string",
                            "description":"classification of the error detail type, lower case with underscore eg missing_value, this value must be always interpreted in context of the general error type.",
                            "pattern":"[a-z]+[a-z_]*[a-z]+"
                          },
                          "message":
                          {
                            "type":"string",
                            "description":"descriptive error detail message for debugging"
                          },
                          "moreInfo":
                          {
                            "type":"string",
                            "format":"uri",
                            "description":"link to documentation to investigate further and finding support for error detail"
                          }
                        },
                        "required":["type"]
                      }
                    }
                  },
                  "required":["status" , "type" ]
                }

        500:
          description: |
            Some server side error occurred.

          body:
            application/json:
              example: |
                {
                  "status": 500,
                  "message": "Something went wrong while processing the request. Please contact the administrator.",
                  "moreInfo": "https://api.yaas.io/patterns/errortypes.html",
                  "type": "internal_service_error"
                }

              schema: |
                {
                  "$schema":"http://json-schema.org/draft-04/schema#",
                  "title":"error",
                  "description":"Schema for API specified errors.",
                  "type":"object",
                  "properties":
                  {
                    "status":
                    {
                      "type":"integer",
                      "description":"original HTTP error code, should be consistent with the response HTTP code",
                      "minimum":100,
                      "maximum":599
                    },
                    "type":
                    {
                      "type":"string",
                      "description":"classification of the error type, lower case with underscore eg validation_failure",
                      "pattern":"[a-z]+[a-z_]*[a-z]+"
                    },
                    "message":
                    {
                      "type":"string",
                      "description":"descriptive error message for debugging"
                    },
                    "moreInfo":
                    {
                      "type":"string",
                      "format":"uri",
                      "description":"link to documentation to investigate further and finding support"
                    },
                    "details":
                    {
                      "type":"array",
                      "description":"list of problems causing this error",
                      "items":
                      {
                        "$schema":"http://json-schema.org/draft-04/schema#",
                        "title":"errorDetail",
                        "description":"schema for specific error cause",
                        "type":"object",
                        "properties":
                        {
                          "field":
                          {
                            "type":"string",
                            "description":"a bean notation expression specifying the element in request data causing the error, eg product.variants[3].name, this can be empty if violation was not field specific"
                          },
                          "type":
                          {
                            "type":"string",
                            "description":"classification of the error detail type, lower case with underscore eg missing_value, this value must be always interpreted in context of the general error type.",
                            "pattern":"[a-z]+[a-z_]*[a-z]+"
                          },
                          "message":
                          {
                            "type":"string",
                            "description":"descriptive error detail message for debugging"
                          },
                          "moreInfo":
                          {
                            "type":"string",
                            "format":"uri",
                            "description":"link to documentation to investigate further and finding support for error detail"
                          }
                        },
                        "required":["type"]
                      }
                    }
                  },
                  "required":["status" , "type" ]
                }

    delete:
      description: Deletes a single ratingCount entity.
      headers:
        Authorization:
          type: string
          description: |
            Used to send a valid OAuth2 access token.

          example: Bearer access_token
          required: true
      queryParameters:
        fields:
          type: string
          description: |
            Contains a comma separated list of field identifiers, by which the fields of the response entities should be filtered by.
            Empty or not initialized value result in a minimal set of entity fields returned. Non-existing or invalid fields will be ignored.

          example: code,name,description
      responses:
        204:
          description: |
            The resource has been successfully deleted.

        401:
          description: |
            Given request is unauthorized. Bad or expired token. Reauthenticate
            the user. Any details will be provided within the response payload.

          body:
            application/json:
              example: |
                {
                  "status":401,
                  "message":"Authorization: Unauthorized. Bearer TOKEN is invalid",
                  "type":"insufficient_credentials",
                  "moreInfo":"https://api.yaas.io/patterns/errortypes.html"
                }

              schema: |
                {
                  "$schema":"http://json-schema.org/draft-04/schema#",
                  "title":"error",
                  "description":"Schema for API specified errors.",
                  "type":"object",
                  "properties":
                  {
                    "status":
                    {
                      "type":"integer",
                      "description":"original HTTP error code, should be consistent with the response HTTP code",
                      "minimum":100,
                      "maximum":599
                    },
                    "type":
                    {
                      "type":"string",
                      "description":"classification of the error type, lower case with underscore eg validation_failure",
                      "pattern":"[a-z]+[a-z_]*[a-z]+"
                    },
                    "message":
                    {
                      "type":"string",
                      "description":"descriptive error message for debugging"
                    },
                    "moreInfo":
                    {
                      "type":"string",
                      "format":"uri",
                      "description":"link to documentation to investigate further and finding support"
                    },
                    "details":
                    {
                      "type":"array",
                      "description":"list of problems causing this error",
                      "items":
                      {
                        "$schema":"http://json-schema.org/draft-04/schema#",
                        "title":"errorDetail",
                        "description":"schema for specific error cause",
                        "type":"object",
                        "properties":
                        {
                          "field":
                          {
                            "type":"string",
                            "description":"a bean notation expression specifying the element in request data causing the error, eg product.variants[3].name, this can be empty if violation was not field specific"
                          },
                          "type":
                          {
                            "type":"string",
                            "description":"classification of the error detail type, lower case with underscore eg missing_value, this value must be always interpreted in context of the general error type.",
                            "pattern":"[a-z]+[a-z_]*[a-z]+"
                          },
                          "message":
                          {
                            "type":"string",
                            "description":"descriptive error detail message for debugging"
                          },
                          "moreInfo":
                          {
                            "type":"string",
                            "format":"uri",
                            "description":"link to documentation to investigate further and finding support for error detail"
                          }
                        },
                        "required":["type"]
                      }
                    }
                  },
                  "required":["status" , "type" ]
                }

        403:
          description: |
            Evaluated request scopes in access token are not sufficient and do not match required scopes.

          body:
            application/json:
              example: |
                {
                  "status": 403,
                  "message": "Given request does not have required scopes in access token. It is not authorized to perform this operation.",
                  "type": "insufficient_permissions"
                }

              schema: |
                {
                  "$schema":"http://json-schema.org/draft-04/schema#",
                  "title":"error",
                  "description":"Schema for API specified errors.",
                  "type":"object",
                  "properties":
                  {
                    "status":
                    {
                      "type":"integer",
                      "description":"original HTTP error code, should be consistent with the response HTTP code",
                      "minimum":100,
                      "maximum":599
                    },
                    "type":
                    {
                      "type":"string",
                      "description":"classification of the error type, lower case with underscore eg validation_failure",
                      "pattern":"[a-z]+[a-z_]*[a-z]+"
                    },
                    "message":
                    {
                      "type":"string",
                      "description":"descriptive error message for debugging"
                    },
                    "moreInfo":
                    {
                      "type":"string",
                      "format":"uri",
                      "description":"link to documentation to investigate further and finding support"
                    },
                    "details":
                    {
                      "type":"array",
                      "description":"list of problems causing this error",
                      "items":
                      {
                        "$schema":"http://json-schema.org/draft-04/schema#",
                        "title":"errorDetail",
                        "description":"schema for specific error cause",
                        "type":"object",
                        "properties":
                        {
                          "field":
                          {
                            "type":"string",
                            "description":"a bean notation expression specifying the element in request data causing the error, eg product.variants[3].name, this can be empty if violation was not field specific"
                          },
                          "type":
                          {
                            "type":"string",
                            "description":"classification of the error detail type, lower case with underscore eg missing_value, this value must be always interpreted in context of the general error type.",
                            "pattern":"[a-z]+[a-z_]*[a-z]+"
                          },
                          "message":
                          {
                            "type":"string",
                            "description":"descriptive error detail message for debugging"
                          },
                          "moreInfo":
                          {
                            "type":"string",
                            "format":"uri",
                            "description":"link to documentation to investigate further and finding support for error detail"
                          }
                        },
                        "required":["type"]
                      }
                    }
                  },
                  "required":["status" , "type" ]
                }

        404:
          description: |
            The requested resource does not exist.

          body:
            application/json:
              example: |
                {
                  "status": 404,
                  "message": "The requested URI does not map to a single element resource.",
                  "moreInfo": "https://api.yaas.io/patterns/errortypes.html",
                  "type": "element_resource_non_existing"
                }

              schema: |
                {
                  "$schema":"http://json-schema.org/draft-04/schema#",
                  "title":"error",
                  "description":"Schema for API specified errors.",
                  "type":"object",
                  "properties":
                  {
                    "status":
                    {
                      "type":"integer",
                      "description":"original HTTP error code, should be consistent with the response HTTP code",
                      "minimum":100,
                      "maximum":599
                    },
                    "type":
                    {
                      "type":"string",
                      "description":"classification of the error type, lower case with underscore eg validation_failure",
                      "pattern":"[a-z]+[a-z_]*[a-z]+"
                    },
                    "message":
                    {
                      "type":"string",
                      "description":"descriptive error message for debugging"
                    },
                    "moreInfo":
                    {
                      "type":"string",
                      "format":"uri",
                      "description":"link to documentation to investigate further and finding support"
                    },
                    "details":
                    {
                      "type":"array",
                      "description":"list of problems causing this error",
                      "items":
                      {
                        "$schema":"http://json-schema.org/draft-04/schema#",
                        "title":"errorDetail",
                        "description":"schema for specific error cause",
                        "type":"object",
                        "properties":
                        {
                          "field":
                          {
                            "type":"string",
                            "description":"a bean notation expression specifying the element in request data causing the error, eg product.variants[3].name, this can be empty if violation was not field specific"
                          },
                          "type":
                          {
                            "type":"string",
                            "description":"classification of the error detail type, lower case with underscore eg missing_value, this value must be always interpreted in context of the general error type.",
                            "pattern":"[a-z]+[a-z_]*[a-z]+"
                          },
                          "message":
                          {
                            "type":"string",
                            "description":"descriptive error detail message for debugging"
                          },
                          "moreInfo":
                          {
                            "type":"string",
                            "format":"uri",
                            "description":"link to documentation to investigate further and finding support for error detail"
                          }
                        },
                        "required":["type"]
                      }
                    }
                  },
                  "required":["status" , "type" ]
                }

        500:
          description: |
            Some server side error occurred.

          body:
            application/json:
              example: |
                {
                  "status": 500,
                  "message": "Something went wrong while processing the request. Please contact the administrator.",
                  "moreInfo": "https://api.yaas.io/patterns/errortypes.html",
                  "type": "internal_service_error"
                }

              schema: |
                {
                  "$schema":"http://json-schema.org/draft-04/schema#",
                  "title":"error",
                  "description":"Schema for API specified errors.",
                  "type":"object",
                  "properties":
                  {
                    "status":
                    {
                      "type":"integer",
                      "description":"original HTTP error code, should be consistent with the response HTTP code",
                      "minimum":100,
                      "maximum":599
                    },
                    "type":
                    {
                      "type":"string",
                      "description":"classification of the error type, lower case with underscore eg validation_failure",
                      "pattern":"[a-z]+[a-z_]*[a-z]+"
                    },
                    "message":
                    {
                      "type":"string",
                      "description":"descriptive error message for debugging"
                    },
                    "moreInfo":
                    {
                      "type":"string",
                      "format":"uri",
                      "description":"link to documentation to investigate further and finding support"
                    },
                    "details":
                    {
                      "type":"array",
                      "description":"list of problems causing this error",
                      "items":
                      {
                        "$schema":"http://json-schema.org/draft-04/schema#",
                        "title":"errorDetail",
                        "description":"schema for specific error cause",
                        "type":"object",
                        "properties":
                        {
                          "field":
                          {
                            "type":"string",
                            "description":"a bean notation expression specifying the element in request data causing the error, eg product.variants[3].name, this can be empty if violation was not field specific"
                          },
                          "type":
                          {
                            "type":"string",
                            "description":"classification of the error detail type, lower case with underscore eg missing_value, this value must be always interpreted in context of the general error type.",
                            "pattern":"[a-z]+[a-z_]*[a-z]+"
                          },
                          "message":
                          {
                            "type":"string",
                            "description":"descriptive error detail message for debugging"
                          },
                          "moreInfo":
                          {
                            "type":"string",
                            "format":"uri",
                            "description":"link to documentation to investigate further and finding support for error detail"
                          }
                        },
                        "required":["type"]
                      }
                    }
                  },
                  "required":["status" , "type" ]
                }

/sendReferral:
  type: collection
  is: [ oauth2 ]
  description: |
    This resourceType defines the GET, POST, DELETE methods and their responses for a collection resource.

  get:
    description: Retrieves a list of all sendReferral in the collection.
    headers:
      Authorization:
        type: string
        description: |
          Used to send a valid OAuth2 access token.

        example: Bearer access_token
        required: true
    responses:
      200:
        description: Resource successfully retrieved.
        body:
          application/json:
            schema: |
              {
                "$schema": "http://json-schema.org/draft-04/schema#",
                "title":"Send Referral",
                "type" : "object",
                "properties":
                {
                  "customerId":
                  {
                    "type" : "string"
                  },
                  "programId":
                  {
                    "type" : "string"
                  },
                  "programName":
                  {
                    "type" : "string"
                  },
                  "referralCode":
                  {
                    "type" : "string"
                  },
                  "emails":
                  {
                     "type": "array",
                     "minItems": 0,
                     "items": {
                       "type": "string"
                     }
                  }
                }
              }
      401:
        description: |
          Given request is unauthorized. Bad or expired token. Reauthenticate
          the user. Any details will be provided within the response payload.

        body:
          application/json:
            example: |
              {
                "status":401,
                "message":"Authorization: Unauthorized. Bearer TOKEN is invalid",
                "type":"insufficient_credentials",
                "moreInfo":"https://api.yaas.io/patterns/errortypes.html"
              }

            schema: |
              {
                "$schema":"http://json-schema.org/draft-04/schema#",
                "title":"error",
                "description":"Schema for API specified errors.",
                "type":"object",
                "properties":
                {
                  "status":
                  {
                    "type":"integer",
                    "description":"original HTTP error code, should be consistent with the response HTTP code",
                    "minimum":100,
                    "maximum":599
                  },
                  "type":
                  {
                    "type":"string",
                    "description":"classification of the error type, lower case with underscore eg validation_failure",
                    "pattern":"[a-z]+[a-z_]*[a-z]+"
                  },
                  "message":
                  {
                    "type":"string",
                    "description":"descriptive error message for debugging"
                  },
                  "moreInfo":
                  {
                    "type":"string",
                    "format":"uri",
                    "description":"link to documentation to investigate further and finding support"
                  },
                  "details":
                  {
                    "type":"array",
                    "description":"list of problems causing this error",
                    "items":
                    {
                      "$schema":"http://json-schema.org/draft-04/schema#",
                      "title":"errorDetail",
                      "description":"schema for specific error cause",
                      "type":"object",
                      "properties":
                      {
                        "field":
                        {
                          "type":"string",
                          "description":"a bean notation expression specifying the element in request data causing the error, eg product.variants[3].name, this can be empty if violation was not field specific"
                        },
                        "type":
                        {
                          "type":"string",
                          "description":"classification of the error detail type, lower case with underscore eg missing_value, this value must be always interpreted in context of the general error type.",
                          "pattern":"[a-z]+[a-z_]*[a-z]+"
                        },
                        "message":
                        {
                          "type":"string",
                          "description":"descriptive error detail message for debugging"
                        },
                        "moreInfo":
                        {
                          "type":"string",
                          "format":"uri",
                          "description":"link to documentation to investigate further and finding support for error detail"
                        }
                      },
                      "required":["type"]
                    }
                  }
                },
                "required":["status" , "type" ]
              }

      403:
        description: |
          Evaluated request scopes in access token are not sufficient and do not match required scopes.

        body:
          application/json:
            example: |
              {
                "status": 403,
                "message": "Given request does not have required scopes in access token. It is not authorized to perform this operation.",
                "type": "insufficient_permissions"
              }

            schema: |
              {
                "$schema":"http://json-schema.org/draft-04/schema#",
                "title":"error",
                "description":"Schema for API specified errors.",
                "type":"object",
                "properties":
                {
                  "status":
                  {
                    "type":"integer",
                    "description":"original HTTP error code, should be consistent with the response HTTP code",
                    "minimum":100,
                    "maximum":599
                  },
                  "type":
                  {
                    "type":"string",
                    "description":"classification of the error type, lower case with underscore eg validation_failure",
                    "pattern":"[a-z]+[a-z_]*[a-z]+"
                  },
                  "message":
                  {
                    "type":"string",
                    "description":"descriptive error message for debugging"
                  },
                  "moreInfo":
                  {
                    "type":"string",
                    "format":"uri",
                    "description":"link to documentation to investigate further and finding support"
                  },
                  "details":
                  {
                    "type":"array",
                    "description":"list of problems causing this error",
                    "items":
                    {
                      "$schema":"http://json-schema.org/draft-04/schema#",
                      "title":"errorDetail",
                      "description":"schema for specific error cause",
                      "type":"object",
                      "properties":
                      {
                        "field":
                        {
                          "type":"string",
                          "description":"a bean notation expression specifying the element in request data causing the error, eg product.variants[3].name, this can be empty if violation was not field specific"
                        },
                        "type":
                        {
                          "type":"string",
                          "description":"classification of the error detail type, lower case with underscore eg missing_value, this value must be always interpreted in context of the general error type.",
                          "pattern":"[a-z]+[a-z_]*[a-z]+"
                        },
                        "message":
                        {
                          "type":"string",
                          "description":"descriptive error detail message for debugging"
                        },
                        "moreInfo":
                        {
                          "type":"string",
                          "format":"uri",
                          "description":"link to documentation to investigate further and finding support for error detail"
                        }
                      },
                      "required":["type"]
                    }
                  }
                },
                "required":["status" , "type" ]
              }

      500:
        description: |
          Some server side error occurred.

        body:
          application/json:
            example: |
              {
                "status": 500,
                "message": "Something went wrong while processing the request. Please contact the administrator.",
                "moreInfo": "https://api.yaas.io/patterns/errortypes.html",
                "type": "internal_service_error"
              }

            schema: |
              {
                "$schema":"http://json-schema.org/draft-04/schema#",
                "title":"error",
                "description":"Schema for API specified errors.",
                "type":"object",
                "properties":
                {
                  "status":
                  {
                    "type":"integer",
                    "description":"original HTTP error code, should be consistent with the response HTTP code",
                    "minimum":100,
                    "maximum":599
                  },
                  "type":
                  {
                    "type":"string",
                    "description":"classification of the error type, lower case with underscore eg validation_failure",
                    "pattern":"[a-z]+[a-z_]*[a-z]+"
                  },
                  "message":
                  {
                    "type":"string",
                    "description":"descriptive error message for debugging"
                  },
                  "moreInfo":
                  {
                    "type":"string",
                    "format":"uri",
                    "description":"link to documentation to investigate further and finding support"
                  },
                  "details":
                  {
                    "type":"array",
                    "description":"list of problems causing this error",
                    "items":
                    {
                      "$schema":"http://json-schema.org/draft-04/schema#",
                      "title":"errorDetail",
                      "description":"schema for specific error cause",
                      "type":"object",
                      "properties":
                      {
                        "field":
                        {
                          "type":"string",
                          "description":"a bean notation expression specifying the element in request data causing the error, eg product.variants[3].name, this can be empty if violation was not field specific"
                        },
                        "type":
                        {
                          "type":"string",
                          "description":"classification of the error detail type, lower case with underscore eg missing_value, this value must be always interpreted in context of the general error type.",
                          "pattern":"[a-z]+[a-z_]*[a-z]+"
                        },
                        "message":
                        {
                          "type":"string",
                          "description":"descriptive error detail message for debugging"
                        },
                        "moreInfo":
                        {
                          "type":"string",
                          "format":"uri",
                          "description":"link to documentation to investigate further and finding support for error detail"
                        }
                      },
                      "required":["type"]
                    }
                  }
                },
                "required":["status" , "type" ]
              }

  post:
    description: |
      Sends out referral emails to non-registered loyalty members. Use this end point to invite friends to join the loyalty program. If corresponding rules are defined, the referral would earn loyalty points.

      Details:
      * To send invite to multiple friends, separate the email id's by comma(,)
      * Enable Advocacy(referral) feature in the configuration
      * Ensure referral email template exists in the system and is configured in the configuration     
 

    headers:
      Authorization:
        type: string
        description: |
          Used to send a valid OAuth2 access token.

        example: Bearer access_token
        required: true
    body:
      application/json:
        schema: |
          {
            "$schema": "http://json-schema.org/draft-04/schema#",
            "title":"Send Referral",
            "type" : "object",
            "properties":
            {
              "customerId":
              {
                "type" : "string"
              },
              "programId":
              {
                "type" : "string"
              },
              "programName":
              {
                "type" : "string"
              },
              "referralCode":
              {
                "type" : "string"
              },
              "emails":
              {
                 "type": "array",
                 "minItems": 0,
                 "items": {
                   "type": "string"
                 }
              }
            }
          }
        example: |
          {
              "customerId": "C1496174752",
              "programId": "088baaddf3c048999541eda53f68bcc7",
              "referralCode": "ABCD",
              "emails": [
                  "john.doe@hybristest.com",
                  "jane.doe@hybristest.com"
              ]
          }
    responses:
      201:
        description: |
          The collection resource has been successfully created.

        headers:
          Location:
            description: |
              The Location of the new resource which was created by the request.
              The value consists of a single absolute URI.

            example: http://www.hybris.com/items/myItem
            required: true
            displayName: Location
            type: string
      400:
        description: |
          Request syntactically incorrect. Any details will be provided within the response payload.
        body:
          application/json:
            example: |
              {
                "status": 400,
                "message": "The request payload has incorrect syntax.",
                "moreInfo": "https://api.yaas.io/patterns/errortypes.html",
                "type": "bad_payload_syntax"
              }

            schema: |
              {
                "$schema":"http://json-schema.org/draft-04/schema#",
                "title":"error",
                "description":"Schema for API specified errors.",
                "type":"object",
                "properties":
                {
                  "status":
                  {
                    "type":"integer",
                    "description":"original HTTP error code, should be consistent with the response HTTP code",
                    "minimum":100,
                    "maximum":599
                  },
                  "type":
                  {
                    "type":"string",
                    "description":"classification of the error type, lower case with underscore eg validation_failure",
                    "pattern":"[a-z]+[a-z_]*[a-z]+"
                  },
                  "message":
                  {
                    "type":"string",
                    "description":"descriptive error message for debugging"
                  },
                  "moreInfo":
                  {
                    "type":"string",
                    "format":"uri",
                    "description":"link to documentation to investigate further and finding support"
                  },
                  "details":
                  {
                    "type":"array",
                    "description":"list of problems causing this error",
                    "items":
                    {
                      "$schema":"http://json-schema.org/draft-04/schema#",
                      "title":"errorDetail",
                      "description":"schema for specific error cause",
                      "type":"object",
                      "properties":
                      {
                        "field":
                        {
                          "type":"string",
                          "description":"a bean notation expression specifying the element in request data causing the error, eg product.variants[3].name, this can be empty if violation was not field specific"
                        },
                        "type":
                        {
                          "type":"string",
                          "description":"classification of the error detail type, lower case with underscore eg missing_value, this value must be always interpreted in context of the general error type.",
                          "pattern":"[a-z]+[a-z_]*[a-z]+"
                        },
                        "message":
                        {
                          "type":"string",
                          "description":"descriptive error detail message for debugging"
                        },
                        "moreInfo":
                        {
                          "type":"string",
                          "format":"uri",
                          "description":"link to documentation to investigate further and finding support for error detail"
                        }
                      },
                      "required":["type"]
                    }
                  }
                },
                "required":["status" , "type" ]
              }

      401:
        description: |
          Given request is unauthorized. Bad or expired token. Reauthenticate
          the user. Any details will be provided within the response payload.

        body:
          application/json:
            example: |
              {
                "status":401,
                "message":"Authorization: Unauthorized. Bearer TOKEN is invalid",
                "type":"insufficient_credentials",
                "moreInfo":"https://api.yaas.io/patterns/errortypes.html"
              }

            schema: |
              {
                "$schema":"http://json-schema.org/draft-04/schema#",
                "title":"error",
                "description":"Schema for API specified errors.",
                "type":"object",
                "properties":
                {
                  "status":
                  {
                    "type":"integer",
                    "description":"original HTTP error code, should be consistent with the response HTTP code",
                    "minimum":100,
                    "maximum":599
                  },
                  "type":
                  {
                    "type":"string",
                    "description":"classification of the error type, lower case with underscore eg validation_failure",
                    "pattern":"[a-z]+[a-z_]*[a-z]+"
                  },
                  "message":
                  {
                    "type":"string",
                    "description":"descriptive error message for debugging"
                  },
                  "moreInfo":
                  {
                    "type":"string",
                    "format":"uri",
                    "description":"link to documentation to investigate further and finding support"
                  },
                  "details":
                  {
                    "type":"array",
                    "description":"list of problems causing this error",
                    "items":
                    {
                      "$schema":"http://json-schema.org/draft-04/schema#",
                      "title":"errorDetail",
                      "description":"schema for specific error cause",
                      "type":"object",
                      "properties":
                      {
                        "field":
                        {
                          "type":"string",
                          "description":"a bean notation expression specifying the element in request data causing the error, eg product.variants[3].name, this can be empty if violation was not field specific"
                        },
                        "type":
                        {
                          "type":"string",
                          "description":"classification of the error detail type, lower case with underscore eg missing_value, this value must be always interpreted in context of the general error type.",
                          "pattern":"[a-z]+[a-z_]*[a-z]+"
                        },
                        "message":
                        {
                          "type":"string",
                          "description":"descriptive error detail message for debugging"
                        },
                        "moreInfo":
                        {
                          "type":"string",
                          "format":"uri",
                          "description":"link to documentation to investigate further and finding support for error detail"
                        }
                      },
                      "required":["type"]
                    }
                  }
                },
                "required":["status" , "type" ]
              }

      403:
        description: |
          Evaluated request scopes in access token are not sufficient and do not match required scopes.

        body:
          application/json:
            example: |
              {
                "status": 403,
                "message": "Given request does not have required scopes in access token. It is not authorized to perform this operation.",
                "type": "insufficient_permissions"
              }

            schema: |
              {
                "$schema":"http://json-schema.org/draft-04/schema#",
                "title":"error",
                "description":"Schema for API specified errors.",
                "type":"object",
                "properties":
                {
                  "status":
                  {
                    "type":"integer",
                    "description":"original HTTP error code, should be consistent with the response HTTP code",
                    "minimum":100,
                    "maximum":599
                  },
                  "type":
                  {
                    "type":"string",
                    "description":"classification of the error type, lower case with underscore eg validation_failure",
                    "pattern":"[a-z]+[a-z_]*[a-z]+"
                  },
                  "message":
                  {
                    "type":"string",
                    "description":"descriptive error message for debugging"
                  },
                  "moreInfo":
                  {
                    "type":"string",
                    "format":"uri",
                    "description":"link to documentation to investigate further and finding support"
                  },
                  "details":
                  {
                    "type":"array",
                    "description":"list of problems causing this error",
                    "items":
                    {
                      "$schema":"http://json-schema.org/draft-04/schema#",
                      "title":"errorDetail",
                      "description":"schema for specific error cause",
                      "type":"object",
                      "properties":
                      {
                        "field":
                        {
                          "type":"string",
                          "description":"a bean notation expression specifying the element in request data causing the error, eg product.variants[3].name, this can be empty if violation was not field specific"
                        },
                        "type":
                        {
                          "type":"string",
                          "description":"classification of the error detail type, lower case with underscore eg missing_value, this value must be always interpreted in context of the general error type.",
                          "pattern":"[a-z]+[a-z_]*[a-z]+"
                        },
                        "message":
                        {
                          "type":"string",
                          "description":"descriptive error detail message for debugging"
                        },
                        "moreInfo":
                        {
                          "type":"string",
                          "format":"uri",
                          "description":"link to documentation to investigate further and finding support for error detail"
                        }
                      },
                      "required":["type"]
                    }
                  }
                },
                "required":["status" , "type" ]
              }

      409:
        description: |
          Creation failed because there was a conflict with another resource. Any details will be provided within the response payload.

        body:
          application/json:
            example: |
              {
                "status": 409,
                "message": "The requested resource could not be created due to server-side validation.",
                "moreInfo": "https://api.yaas.io/patterns/errortypes.html",
                "type": "conflict_resource"
              }

            schema: |
              {
                "$schema":"http://json-schema.org/draft-04/schema#",
                "title":"error",
                "description":"Schema for API specified errors.",
                "type":"object",
                "properties":
                {
                  "status":
                  {
                    "type":"integer",
                    "description":"original HTTP error code, should be consistent with the response HTTP code",
                    "minimum":100,
                    "maximum":599
                  },
                  "type":
                  {
                    "type":"string",
                    "description":"classification of the error type, lower case with underscore eg validation_failure",
                    "pattern":"[a-z]+[a-z_]*[a-z]+"
                  },
                  "message":
                  {
                    "type":"string",
                    "description":"descriptive error message for debugging"
                  },
                  "moreInfo":
                  {
                    "type":"string",
                    "format":"uri",
                    "description":"link to documentation to investigate further and finding support"
                  },
                  "details":
                  {
                    "type":"array",
                    "description":"list of problems causing this error",
                    "items":
                    {
                      "$schema":"http://json-schema.org/draft-04/schema#",
                      "title":"errorDetail",
                      "description":"schema for specific error cause",
                      "type":"object",
                      "properties":
                      {
                        "field":
                        {
                          "type":"string",
                          "description":"a bean notation expression specifying the element in request data causing the error, eg product.variants[3].name, this can be empty if violation was not field specific"
                        },
                        "type":
                        {
                          "type":"string",
                          "description":"classification of the error detail type, lower case with underscore eg missing_value, this value must be always interpreted in context of the general error type.",
                          "pattern":"[a-z]+[a-z_]*[a-z]+"
                        },
                        "message":
                        {
                          "type":"string",
                          "description":"descriptive error detail message for debugging"
                        },
                        "moreInfo":
                        {
                          "type":"string",
                          "format":"uri",
                          "description":"link to documentation to investigate further and finding support for error detail"
                        }
                      },
                      "required":["type"]
                    }
                  }
                },
                "required":["status" , "type" ]
              }

      500:
        description: |
          Some server side error occurred.

        body:
          application/json:
            example: |
              {
                "status": 500,
                "message": "Something went wrong while processing the request. Please contact the administrator.",
                "moreInfo": "https://api.yaas.io/patterns/errortypes.html",
                "type": "internal_service_error"
              }

            schema: |
              {
                "$schema":"http://json-schema.org/draft-04/schema#",
                "title":"error",
                "description":"Schema for API specified errors.",
                "type":"object",
                "properties":
                {
                  "status":
                  {
                    "type":"integer",
                    "description":"original HTTP error code, should be consistent with the response HTTP code",
                    "minimum":100,
                    "maximum":599
                  },
                  "type":
                  {
                    "type":"string",
                    "description":"classification of the error type, lower case with underscore eg validation_failure",
                    "pattern":"[a-z]+[a-z_]*[a-z]+"
                  },
                  "message":
                  {
                    "type":"string",
                    "description":"descriptive error message for debugging"
                  },
                  "moreInfo":
                  {
                    "type":"string",
                    "format":"uri",
                    "description":"link to documentation to investigate further and finding support"
                  },
                  "details":
                  {
                    "type":"array",
                    "description":"list of problems causing this error",
                    "items":
                    {
                      "$schema":"http://json-schema.org/draft-04/schema#",
                      "title":"errorDetail",
                      "description":"schema for specific error cause",
                      "type":"object",
                      "properties":
                      {
                        "field":
                        {
                          "type":"string",
                          "description":"a bean notation expression specifying the element in request data causing the error, eg product.variants[3].name, this can be empty if violation was not field specific"
                        },
                        "type":
                        {
                          "type":"string",
                          "description":"classification of the error detail type, lower case with underscore eg missing_value, this value must be always interpreted in context of the general error type.",
                          "pattern":"[a-z]+[a-z_]*[a-z]+"
                        },
                        "message":
                        {
                          "type":"string",
                          "description":"descriptive error detail message for debugging"
                        },
                        "moreInfo":
                        {
                          "type":"string",
                          "format":"uri",
                          "description":"link to documentation to investigate further and finding support for error detail"
                        }
                      },
                      "required":["type"]
                    }
                  }
                },
                "required":["status" , "type" ]
              }
